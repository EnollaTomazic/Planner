name: CI

on:
  push:
    branches:
      - main
      - work
    paths-ignore:
      - docs/**
      - '**/*.md'
      - CHANGELOG.md
  pull_request:
    paths-ignore:
      - docs/**
      - '**/*.md'
      - CHANGELOG.md
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NEXT_TELEMETRY_DISABLED: '1'

jobs:
  install:
    name: Install (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 22.x
    permissions:
      contents: read
    steps:
      - name: Setup project
        uses: ./.github/actions/setup-node-project
        with:
          node-version: ${{ matrix.node }}
      - name: Verify dependency tree
        run: npm ls --depth=0
        env:
          CI: 'true'
      - name: Installation summary
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          NODE_VERSION: ${{ matrix.node }}
        run: |
          {
            echo "## Install (Node ${NODE_VERSION})";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"

  lint:
    name: Lint (Node ${{ matrix.node }})
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 22.x
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Setup project
        uses: ./.github/actions/setup-node-project
        with:
          node-version: ${{ matrix.node }}
      - name: Run ESLint
        run: |
          mkdir -p reports/eslint
          npm run lint:ci -- --output-file reports/eslint/eslint.ndjson
        env:
          CI: 'true'
      - name: Run design token guard
        run: npm run lint:design
        env:
          CI: 'true'
      - name: Upload lint artifacts
        if: always()
        uses: actions/upload-artifact@5d5d22a31266b4b4f088e0e0b5c2bd8f5bca5a9a
        with:
          name: eslint-${{ matrix.node }}
          path: reports/eslint
          if-no-files-found: warn
      - name: Lint summary
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          NODE_VERSION: ${{ matrix.node }}
        run: |
          {
            echo "## Lint (Node ${NODE_VERSION})";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"

  typecheck:
    name: Typecheck (Node ${{ matrix.node }})
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 22.x
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Setup project
        uses: ./.github/actions/setup-node-project
        with:
          node-version: ${{ matrix.node }}
      - name: TypeScript
        run: |
          mkdir -p reports/typecheck
          npm run typecheck:ci | tee reports/typecheck/tsc.log
        env:
          CI: 'true'
      - name: Upload typecheck log
        if: always()
        uses: actions/upload-artifact@5d5d22a31266b4b4f088e0e0b5c2bd8f5bca5a9a
        with:
          name: typecheck-${{ matrix.node }}
          path: reports/typecheck
          if-no-files-found: warn
      - name: Typecheck summary
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          NODE_VERSION: ${{ matrix.node }}
        run: |
          {
            echo "## Typecheck (Node ${NODE_VERSION})";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"

  unit:
    name: Unit (Node ${{ matrix.node }})
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 22.x
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Setup project
        uses: ./.github/actions/setup-node-project
        with:
          node-version: ${{ matrix.node }}
      - name: Run Vitest
        run: npm run test:ci
        env:
          CI: 'true'
          VITEST_JUNIT_OUTPUT: reports/vitest/junit.xml
          V8_COVERAGE_DIR: coverage/tmp
      - name: Upload coverage & reports
        if: always()
        uses: actions/upload-artifact@5d5d22a31266b4b4f088e0e0b5c2bd8f5bca5a9a
        with:
          name: vitest-${{ matrix.node }}
          path: |
            coverage
            reports/vitest
          if-no-files-found: warn
      - name: Unit summary
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          NODE_VERSION: ${{ matrix.node }}
        run: |
          {
            echo "## Unit (Node ${NODE_VERSION})";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"

  build:
    name: Build & export
    needs:
      - lint
      - typecheck
      - unit
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Setup project
        uses: ./.github/actions/setup-node-project
        with:
          node-version: 22.x
      - name: Build application and export static site
        env:
          CI: 'true'
          DEPLOY_ARTIFACT_ONLY: 'true'
        run: npm run deploy
      - name: Upload Next build
        uses: actions/upload-artifact@5d5d22a31266b4b4f088e0e0b5c2bd8f5bca5a9a
        with:
          name: next-build
          path: .next
          if-no-files-found: error
      - name: Upload static export
        uses: actions/upload-artifact@5d5d22a31266b4b4f088e0e0b5c2bd8f5bca5a9a
        with:
          name: next-static
          path: out
          if-no-files-found: error
      - name: Build summary
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
        run: |
          {
            echo "## Build";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"

  e2e:
    name: Playwright (${{ matrix.browser }})
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser:
          - chromium
          - firefox
          - webkit
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Setup project
        uses: ./.github/actions/setup-node-project
        with:
          node-version: 22.x
          playwright: 'true'
      - name: Download build artifact
        uses: actions/download-artifact@b4ea8f09c3fe53a5b949651f5ebbe6cfa23917d3
        with:
          name: next-build
          path: .
      - name: Run Playwright
        env:
          CI: 'true'
          PLAYWRIGHT_PROJECT_NAME: ${{ matrix.browser }}
          PLAYWRIGHT_HTML_DIR: playwright-report/${{ matrix.browser }}
          PLAYWRIGHT_JUNIT_OUTPUT: playwright-results/${{ matrix.browser }}/junit.xml
        run: |
          set -euo pipefail
          case "${{ matrix.browser }}" in
            chromium)
              PORT=3100
              ;;
            firefox)
              PORT=3101
              ;;
            webkit)
              PORT=3102
              ;;
            *)
              PORT=3200
              ;;
          esac
          HOST=127.0.0.1
          export PLAYWRIGHT_HOST="$HOST"
          export PLAYWRIGHT_PORT="$PORT"
          export PLAYWRIGHT_BASE_URL="http://$HOST:$PORT"
          npm run start -- --hostname "$HOST" --port "$PORT" &
          SERVER_PID=$!
          cleanup() {
            if kill -0 "$SERVER_PID" 2>/dev/null; then
              kill "$SERVER_PID"
              wait "$SERVER_PID" || true
            fi
          }
          trap cleanup EXIT
          for attempt in $(seq 1 30); do
            if curl --fail --silent --head "http://$HOST:$PORT" >/dev/null; then
              READY=1
              break
            fi
            sleep 2
          done
          if [ -z "${READY:-}" ]; then
            echo "Server failed to start" >&2
            exit 1
          fi
          mkdir -p "playwright-results/${{ matrix.browser }}"
          npx playwright test \
            --project=${{ matrix.browser }} \
            --output="playwright-results/${{ matrix.browser }}" \
            --trace=retain-on-failure \
            --retries=1
          if [ "${{ matrix.browser }}" = "chromium" ]; then
            mkdir -p "playwright-results/${{ matrix.browser }}/axe"
            LIST_OUTPUT=$(npx playwright test --list --project=${{ matrix.browser }} --grep "@axe") || true
            if echo "$LIST_OUTPUT" | grep -q "@axe"; then
              npx playwright test \
                --project=${{ matrix.browser }} \
                --grep "@axe" \
                --output="playwright-results/${{ matrix.browser }}/axe" \
                --retries=0 \
                --reporter=json >"playwright-results/${{ matrix.browser }}/axe/axe-report.json"
            else
              echo "No @axe-tagged tests detected" >"playwright-results/${{ matrix.browser }}/axe/axe-report.json"
            fi
          fi
      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@5d5d22a31266b4b4f088e0e0b5c2bd8f5bca5a9a
        with:
          name: playwright-${{ matrix.browser }}
          path: |
            playwright-results/${{ matrix.browser }}
            playwright-report/${{ matrix.browser }}
          if-no-files-found: warn
      - name: E2E summary
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          BROWSER: ${{ matrix.browser }}
        run: |
          {
            echo "## Playwright (${BROWSER})";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"

  summary:
    name: Summaries & PR comment
    if: always()
    needs:
      - lint
      - typecheck
      - unit
      - build
      - e2e
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 2
      - name: Download unit artifacts
        uses: actions/download-artifact@b4ea8f09c3fe53a5b949651f5ebbe6cfa23917d3
        with:
          pattern: vitest-*
          path: artifacts/unit
          merge-multiple: true
        continue-on-error: true
      - name: Download lint artifacts
        uses: actions/download-artifact@b4ea8f09c3fe53a5b949651f5ebbe6cfa23917d3
        with:
          pattern: eslint-*
          path: artifacts/lint
          merge-multiple: true
        continue-on-error: true
      - name: Download Playwright artifacts
        uses: actions/download-artifact@b4ea8f09c3fe53a5b949651f5ebbe6cfa23917d3
        with:
          pattern: playwright-*
          path: artifacts/e2e
          merge-multiple: true
        continue-on-error: true
      - name: Generate summary report
        id: summary
        run: |
          npm run report:summary -- \
            --coverage artifacts/unit/coverage/coverage-summary.json \
            --vitest-junit artifacts/unit/reports/vitest/junit.xml \
            --playwright artifacts/e2e \
            --output ci-summary.md
      - name: Append workflow summary
        if: always()
        run: cat ci-summary.md >>"$GITHUB_STEP_SUMMARY"
      - name: Comment on pull requests
        if: github.event_name == 'pull_request'
        uses: actions/github-script@70f8fb9d3d3cf6f315efb2364458f51afc86f369
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const summaryPath = path.join(process.cwd(), 'ci-summary.md');
            if (!fs.existsSync(summaryPath)) {
              core.warning('Summary file missing; skipping comment');
              return;
            }
            const body = fs.readFileSync(summaryPath, 'utf8');
            const marker = '<!-- ci-summary -->';
            const finalBody = `${marker}\n${body}`;
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.issue.number,
              per_page: 100,
            });
            const existing = comments.find((comment) => comment.body?.startsWith(marker));
            if (existing) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existing.id,
                body: finalBody,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: finalBody,
              });
            }
      - name: Summary job status
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
        run: |
          {
            echo "## Summary";
            echo "- Status: ${JOB_STATUS}";
          } >>"$GITHUB_STEP_SUMMARY"
