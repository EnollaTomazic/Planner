name: CI

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main
      - work
  pull_request:
    branches:
      - main
      - work

env:
  PNPM_VERSION: 10.18.2

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare-gallery:
    name: Prepare gallery manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-project
        with:
          node-version: '22.12.0'

      - name: Run prebuild
        run: pnpm run prebuild

      - name: Upload gallery manifest assets
        uses: actions/upload-artifact@v4
        with:
          name: gallery-manifest
          path: |
            src/components/gallery/generated-manifest.ts
            src/components/gallery/generated-manifest.g.ts
            src/components/gallery/usage.json
            scripts/.cache/
          if-no-files-found: error

  quality_base:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Lint
            node: '22.12.0'
            command: pnpm run lint:ci
            cache-storybook: false
          - name: Type check
            node: '22.12.0'
            command: pnpm run typecheck:ci
            cache-storybook: false
          - name: Unit tests
            node: '22.12.0'
            command: pnpm test:ci
            cache-storybook: false
          - name: Storybook build (Node 20)
            node: '20.17.0'
            command: pnpm run sb:build
            cache-storybook: true

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-project
        with:
          node-version: ${{ matrix.node }}
          skip-checkout: 'true'

      - name: Restore Storybook cache
        if: matrix.cache-storybook
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/storybook
          key: ${{ runner.os }}-storybook-${{ hashFiles('pnpm-lock.yaml', 'storybook/**/*') }}

      - name: Run ${{ matrix.name }}
        env:
          CI: true
        run: ${{ matrix.command }}

  quality_after_gallery:
    needs: [prepare-gallery]
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Next build + bundle guard
            node: '22.12.0'
            command: pnpm run bundle:guard
            cache-next: true
            cache-playwright: false
            download-gallery: true
          - name: Playwright E2E
            node: '22.12.0'
            command: pnpm e2e:ci
            cache-next: false
            cache-playwright: true
            download-gallery: true

    steps:
      - uses: actions/checkout@v4

      - name: Download gallery manifest assets
        if: matrix.download-gallery
        uses: actions/download-artifact@v4
        with:
          name: gallery-manifest
          path: .

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-project
        with:
          node-version: ${{ matrix.node }}

      - name: Restore Next.js cache
        if: matrix.cache-next
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ matrix.node }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Restore Playwright browsers
        if: matrix.cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Playwright browsers
        if: matrix.cache-playwright
        run: pnpm exec playwright install --with-deps

      - name: Run ${{ matrix.name }}
        env:
          CI: true
        run: ${{ matrix.command }}
