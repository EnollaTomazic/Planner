{
  // TypeScript powered by your local node_modules
  "typescript.tsdk": "node_modules/typescript/lib",

  // Formatting: ESLint for TS/TSX, Prettier for CSS (so Tailwind class sorting works)
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  "[css]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[postcss]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[typescript]": { "editor.defaultFormatter": "dbaeumer.vscode-eslint" },
  "[typescriptreact]": { "editor.defaultFormatter": "dbaeumer.vscode-eslint" },

  // Tell VS Code these files are PostCSS (so @tailwind/@apply aren’t “unknown”)
  "files.associations": {
    "**/src/**/*.css": "postcss"
  },

  // Silence CSS LS false-positives anyway
  "css.lint.unknownAtRules": "ignore",
  // or go nuclear: "css.validate": false,

  // Tailwind IntelliSense wiring
  "tailwindCSS.experimental.configFile": "tailwind.config.js",
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.experimental.classRegex": [
    ["cn\\(([^)]*)\\)", "[\"'`]([^\"'`]*)[\"'`]"],
    ["clsx\\(([^)]*)\\)", "[\"'`]([^\"'`]*)[\"'`]"],
    "cva\\(([^)]*)\\)"
  ]
}
