// Auto-generated by scripts/build-gallery-usage.ts
// Do not edit directly.
import type { GalleryRegistryPayload, GallerySection, GalleryPreviewRoute } from "./registry";

interface GalleryModuleExport {
  readonly default: GallerySection | readonly GallerySection[];
}

export interface GalleryPreviewModuleManifest {
  readonly loader: () => Promise<GalleryModuleExport>;
  readonly previewIds: readonly string[];
}

export const galleryPayload = {
  "sections": [
    {
      "id": "buttons",
      "entries": [
        {
          "id": "badge",
          "name": "Badge",
          "description": "Compact pill with tone-driven styles. Accent tones now meet ≥4.5:1 contrast for white content",
          "kind": "primitive",
          "tags": [
            "badge",
            "pill"
          ],
          "props": [
            {
              "name": "tone",
              "type": "\"neutral\" | \"primary\" | \"accent\" | \"top\" | \"jungle\" | \"mid\" | \"bot\" | \"support\"",
              "defaultValue": "\"neutral\""
            },
            {
              "name": "size",
              "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
              "defaultValue": "\"md\"",
              "description": "Use \"xs\" as an alias for \"sm\" when migrating legacy code."
            },
            {
              "name": "interactive",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "selected",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "glitch",
              "type": "boolean",
              "defaultValue": "false"
            }
          ],
          "axes": [
            {
              "id": "tone",
              "label": "Tone",
              "type": "variant",
              "values": [
                {
                  "value": "Neutral"
                },
                {
                  "value": "Accent"
                },
                {
                  "value": "Primary"
                },
                {
                  "value": "Top lane"
                },
                {
                  "value": "Jungle"
                },
                {
                  "value": "Mid lane"
                },
                {
                  "value": "Bot lane"
                },
                {
                  "value": "Support"
                }
              ]
            },
            {
              "id": "size",
              "label": "Size",
              "type": "variant",
              "values": [
                {
                  "value": "Small"
                },
                {
                  "value": "Medium"
                },
                {
                  "value": "Large"
                },
                {
                  "value": "Extra large"
                }
              ]
            },
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Interactive"
                },
                {
                  "value": "Selected"
                },
                {
                  "value": "Disabled"
                }
              ]
            }
          ],
          "code": "<div className=\"flex flex-col gap-[var(--space-3)]\">\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Badge size=\"sm\">Small</Badge>\n    <Badge size=\"md\">Medium</Badge>\n    <Badge size=\"lg\">Large</Badge>\n    <Badge size=\"xl\">Extra large</Badge>\n  </div>\n  <p className=\"text-caption text-muted-foreground\">\n    <code>xs</code> is available as an alias of <code>sm</code> for legacy badges.\n  </p>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Badge tone=\"neutral\">Neutral</Badge>\n    <Badge tone=\"accent\">Accent</Badge>\n    <Badge tone=\"primary\">Primary</Badge>\n    <Badge tone=\"primary\" interactive selected>\n      Selected\n    </Badge>\n    <Badge tone=\"accent\" interactive disabled>\n      Disabled\n    </Badge>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Badge tone=\"top\" glitch>\n      Top lane\n    </Badge>\n    <Badge tone=\"jungle\" glitch>\n      Jungle\n    </Badge>\n    <Badge tone=\"mid\" glitch>\n      Mid lane\n    </Badge>\n    <Badge tone=\"bot\" glitch>\n      Bot lane\n    </Badge>\n    <Badge tone=\"support\" glitch>\n      Support\n    </Badge>\n  </div>\n</div>",
          "preview": {
            "id": "ui:badge:tones"
          }
        },
        {
          "id": "button",
          "name": "Button",
          "description": "Tone, size, icon placement, and interaction states",
          "kind": "primitive",
          "tags": [
            "button",
            "action"
          ],
          "props": [
            {
              "name": "variant",
              "type": "\"primary\" | \"secondary\" | \"ghost\""
            },
            {
              "name": "tone",
              "type": "\"primary\" | \"accent\" | \"info\" | \"danger\""
            },
            {
              "name": "size",
              "type": "\"sm\" | \"md\" | \"lg\" | \"xl\""
            },
            {
              "name": "loading",
              "type": "boolean",
              "defaultValue": "false"
            }
          ],
          "axes": [
            {
              "id": "tone",
              "label": "Tone",
              "type": "variant",
              "values": [
                {
                  "value": "Primary"
                },
                {
                  "value": "Accent"
                },
                {
                  "value": "Info"
                },
                {
                  "value": "Danger"
                }
              ]
            },
            {
              "id": "size",
              "label": "Size & icons",
              "type": "variant",
              "values": [
                {
                  "value": "Small",
                  "description": "Leading and trailing icons align to the small control gap."
                },
                {
                  "value": "Medium",
                  "description": "Leading and trailing icons align to the medium control gap."
                },
                {
                  "value": "Large",
                  "description": "Leading and trailing icons align to the large control gap."
                },
                {
                  "value": "Extra large",
                  "description": "Leading and trailing icons align to the extra large control gap."
                }
              ]
            },
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Button tone=\"primary\" variant=\"primary\">\n      Primary tone\n    </Button>\n    <Button tone=\"accent\" variant=\"primary\">\n      Accent tone\n    </Button>\n    <Button tone=\"info\" variant=\"ghost\">\n      Info ghost\n    </Button>\n    <Button tone=\"danger\" variant=\"primary\">\n      Danger primary\n    </Button>\n    <Button disabled>Disabled</Button>\n  </div>\n  <div className=\"space-y-[var(--space-2)]\">\n    <div className=\"grid grid-cols-[max-content_repeat(2,minmax(0,1fr))] gap-[var(--space-3)] text-label text-muted-foreground\">\n      <span className=\"sr-only\">Size</span>\n      <span>Leading icon</span>\n      <span>Trailing icon</span>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[var(--space-1)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Small</span>\n      <Button size=\"sm\">\n        <Plus aria-hidden />\n        Small\n      </Button>\n      <Button size=\"sm\">\n        Small\n        <Plus aria-hidden />\n      </Button>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[var(--space-2)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Medium</span>\n      <Button size=\"md\">\n        <Plus aria-hidden />\n        Medium\n      </Button>\n      <Button size=\"md\">\n        Medium\n        <Plus aria-hidden />\n      </Button>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[var(--space-4)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Large</span>\n      <Button size=\"lg\">\n        <Plus aria-hidden />\n        Large\n      </Button>\n      <Button size=\"lg\">\n        Large\n        <Plus aria-hidden />\n      </Button>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[calc(var(--control-h-xl)/3)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Extra large</span>\n      <Button size=\"xl\">\n        <Plus aria-hidden />\n        Extra large\n      </Button>\n      <Button size=\"xl\">\n        Extra large\n        <Plus aria-hidden />\n      </Button>\n    </div>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Button>Default</Button>\n    <Button className=\"bg-[--hover]\">Hover</Button>\n    <Button className=\"ring-2 ring-[var(--focus)]\">Focus</Button>\n    <Button className=\"bg-[--active]\">Active</Button>\n    <Button disabled>Disabled</Button>\n    <Button loading>Loading</Button>\n  </div>\n</div>",
          "preview": {
            "id": "ui:button:matrix"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<Button>Default</Button>",
              "preview": {
                "id": "ui:button:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<Button className=\"bg-[--hover]\">Hover</Button>",
              "preview": {
                "id": "ui:button:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus",
              "code": "<Button className=\"ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)] [outline:var(--spacing-0-5)_solid_var(--ring-contrast)] [outline-offset:var(--spacing-0-5)]\">Focus</Button>",
              "preview": {
                "id": "ui:button:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<Button className=\"bg-[--active]\">Active</Button>",
              "preview": {
                "id": "ui:button:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Button disabled>Disabled</Button>",
              "preview": {
                "id": "ui:button:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Button loading>Loading</Button>",
              "preview": {
                "id": "ui:button:state:loading"
              }
            }
          ]
        },
        {
          "id": "icon-button",
          "name": "IconButton",
          "description": "Size, variant, and state coverage",
          "kind": "primitive",
          "tags": [
            "button",
            "icon"
          ],
          "props": [
            {
              "name": "variant",
              "type": "\"primary\" | \"secondary\" | \"ghost\"",
              "description": "Visual treatment of the button. Choose \"ghost\", \"secondary\", or \"primary\"."
            },
            {
              "name": "size",
              "type": "\"sm\" | \"md\" | \"lg\" | \"xl\""
            },
            {
              "name": "loading",
              "type": "boolean",
              "defaultValue": "false"
            }
          ],
          "axes": [
            {
              "id": "variant",
              "label": "Variant",
              "type": "variant",
              "values": [
                {
                  "value": "Ghost"
                },
                {
                  "value": "Secondary"
                },
                {
                  "value": "Primary"
                }
              ]
            },
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                },
                {
                  "value": "Primary"
                },
                {
                  "value": "Primary Hover"
                },
                {
                  "value": "Primary Active"
                }
              ]
            }
          ],
          "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <IconButton size=\"sm\" variant=\"ghost\" aria-label=\"Add item sm\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"md\" variant=\"ghost\" aria-label=\"Add item md\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"lg\" variant=\"ghost\" aria-label=\"Add item lg\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"xl\" variant=\"ghost\" aria-label=\"Add item xl\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"md\" variant=\"secondary\" aria-label=\"Add item secondary\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"md\" variant=\"primary\" aria-label=\"Add item primary\">\n      <Plus />\n    </IconButton>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <IconButton aria-label=\"Default\">\n      <Plus />\n    </IconButton>\n    <IconButton className=\"bg-[--hover]\" aria-label=\"Hover\">\n      <Plus />\n    </IconButton>\n    <IconButton className=\"ring-2 ring-[var(--focus)]\" aria-label=\"Focus\">\n      <Plus />\n    </IconButton>\n    <IconButton\n      className=\"bg-[--active]\"\n      aria-pressed\n      aria-label=\"Active\"\n    >\n      <Plus />\n    </IconButton>\n    <IconButton disabled aria-label=\"Disabled\">\n      <Plus />\n    </IconButton>\n    <IconButton loading aria-label=\"Loading\">\n      <Plus />\n    </IconButton>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <IconButton variant=\"primary\" aria-label=\"Primary\">\n      <Plus />\n    </IconButton>\n    <IconButton\n      className=\"bg-[--hover] shadow-[var(--shadow-neon-strong)]\"\n      variant=\"primary\"\n      aria-label=\"Primary hover\"\n    >\n      <Plus />\n    </IconButton>\n    <IconButton\n      className=\"bg-[--active] shadow-[var(--shadow-inset-contrast),var(--shadow-neon-soft)]\"\n      variant=\"primary\"\n      aria-label=\"Primary active\"\n      aria-pressed\n    >\n      <Plus />\n    </IconButton>\n  </div>\n</div>",
          "preview": {
            "id": "ui:icon-button:matrix"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<IconButton aria-label=\"Default\">\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<IconButton className=\"bg-[--hover]\" aria-label=\"Hover\">\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus",
              "code": "<IconButton className=\"ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)] [outline:var(--spacing-0-5)_solid_var(--ring-contrast)] [outline-offset:var(--spacing-0-5)]\" aria-label=\"Focus\">\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<IconButton\n  className=\"bg-[--active]\"\n  aria-label=\"Active\"\n  aria-pressed\n>\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<IconButton disabled aria-label=\"Disabled\">\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<IconButton loading aria-label=\"Loading\">\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:loading"
              }
            },
            {
              "id": "primary",
              "name": "Primary",
              "code": "<IconButton variant=\"primary\" aria-label=\"Primary\">\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:primary"
              }
            },
            {
              "id": "primary-hover",
              "name": "Primary Hover",
              "code": "<IconButton\n  className=\"bg-[--hover] shadow-[var(--shadow-neon-strong)]\"\n  variant=\"primary\"\n  aria-label=\"Primary hover\"\n>\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:primary-hover"
              }
            },
            {
              "id": "primary-active",
              "name": "Primary Active",
              "code": "<IconButton\n  className=\"bg-[--active] shadow-[var(--shadow-inset-contrast),var(--shadow-neon-soft)]\"\n  variant=\"primary\"\n  aria-label=\"Primary active\"\n  aria-pressed\n>\n  <Plus />\n</IconButton>",
              "preview": {
                "id": "ui:icon-button:state:primary-active"
              }
            }
          ]
        },
        {
          "id": "segmented-button",
          "name": "SegmentedButton",
          "description": "Inline segmented action with pressed and loading states",
          "kind": "primitive",
          "tags": [
            "button",
            "segmented"
          ],
          "props": [
            {
              "name": "as",
              "type": "React.ElementType"
            },
            {
              "name": "href",
              "type": "string"
            },
            {
              "name": "selected",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "loading",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Disabled link"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<div className=\"flex flex-wrap gap-[var(--space-2)]\">\n  <SegmentedButton>Default</SegmentedButton>\n  <SegmentedButton className=\"[--hover:var(--seg-hover-base)] bg-[--hover] text-[hsl(var(--foreground))] [text-shadow:0_0_calc(var(--space-2)-var(--spacing-0-5))_hsl(var(--accent)/0.25)]\">Hover</SegmentedButton>\n  <SegmentedButton selected>Active</SegmentedButton>\n  <SegmentedButton className=\"ring-2 ring-[--theme-ring] ring-offset-0 outline-none\">Focus-visible</SegmentedButton>\n  <SegmentedButton disabled>Disabled</SegmentedButton>\n  <SegmentedButton as=\"a\" href=\"#\" disabled>Disabled link</SegmentedButton>\n  <SegmentedButton loading>Loading</SegmentedButton>\n</div>",
          "preview": {
            "id": "ui:segmented-button:states"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<SegmentedButton>Default</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<SegmentedButton className=\"[--hover:var(--seg-hover-base)] bg-[--hover] text-[hsl(var(--foreground))] [text-shadow:0_0_calc(var(--space-2)-var(--spacing-0-5))_hsl(var(--accent)/0.25)]\">Hover</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:hover"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<SegmentedButton selected>Active</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:active"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<SegmentedButton className=\"ring-2 ring-[--theme-ring] ring-offset-0 outline-none\">Focus-visible</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:focus-visible"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<SegmentedButton disabled>Disabled</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:disabled"
              }
            },
            {
              "id": "disabled-link",
              "name": "Disabled link",
              "code": "<SegmentedButton as=\"a\" href=\"#\" disabled>Disabled link</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:disabled-link"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<SegmentedButton loading>Loading</SegmentedButton>",
              "preview": {
                "id": "ui:segmented-button:state:loading"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "inputs",
      "entries": [
        {
          "id": "label",
          "name": "Label",
          "description": "Text label paired with inputs for accessible forms",
          "kind": "primitive",
          "tags": [
            "label",
            "input"
          ],
          "props": [
            {
              "name": "htmlFor",
              "type": "string"
            },
            {
              "name": "className",
              "type": "string"
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Disabled"
                }
              ]
            }
          ],
          "code": "<div className=\"w-[calc(var(--space-8)*4)] space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"label-default\">Email</Label>\n    <Input id=\"label-default\" placeholder=\"player@example.gg\" />\n  </div>\n  <div className=\"opacity-80\">\n    <Label htmlFor=\"label-disabled\">Disabled</Label>\n    <Input id=\"label-disabled\" placeholder=\"Disabled input\" disabled />\n  </div>\n</div>",
          "preview": {
            "id": "ui:label:pairing"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<div className=\"flex flex-col gap-[var(--space-1)]\">\n  <Label htmlFor=\"label-state-default\">Email</Label>\n  <Input id=\"label-state-default\" placeholder=\"player@example.gg\" />\n</div>",
              "preview": {
                "id": "ui:label:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<div className=\"flex flex-col gap-[var(--space-1)]\">\n  <Label htmlFor=\"label-state-hover\" className=\"text-accent transition-colors\">Email</Label>\n  <Input\n    id=\"label-state-hover\"\n    placeholder=\"player@example.gg\"\n    className=\"border-primary/60\"\n  />\n</div>",
              "preview": {
                "id": "ui:label:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<div className=\"flex flex-col gap-[var(--space-1)]\">\n  <Label htmlFor=\"label-state-focus\" className=\"text-ring transition-colors\">Email</Label>\n  <Input\n    id=\"label-state-focus\"\n    placeholder=\"player@example.gg\"\n    className=\"ring-2 ring-[var(--ring)] ring-offset-2 ring-offset-[var(--surface-2)] focus-visible:ring-2 focus-visible:ring-[var(--ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--surface-2)]\"\n  />\n</div>",
              "preview": {
                "id": "ui:label:state:focus-visible"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<div className=\"flex flex-col gap-[var(--space-1)] opacity-80\">\n  <Label htmlFor=\"label-state-disabled\">Email</Label>\n  <Input id=\"label-state-disabled\" placeholder=\"player@example.gg\" disabled />\n</div>",
              "preview": {
                "id": "ui:label:state:disabled"
              }
            }
          ]
        },
        {
          "id": "select",
          "name": "Select",
          "description": "Animated trigger with native fallback",
          "kind": "primitive",
          "tags": [
            "select",
            "input"
          ],
          "props": [
            {
              "name": "items",
              "type": "readonly { value: string; label: React.ReactNode }[]",
              "required": true
            },
            {
              "name": "value",
              "type": "string | undefined"
            },
            {
              "name": "onChange",
              "type": "(value: string) => void"
            },
            {
              "name": "placeholder",
              "type": "string"
            },
            {
              "name": "variant",
              "type": "\"animated\" | \"native\"",
              "defaultValue": "\"animated\""
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            }
          ],
          "axes": [
            {
              "id": "variant",
              "label": "Variant",
              "type": "variant",
              "values": [
                {
                  "value": "Animated"
                },
                {
                  "value": "Native"
                }
              ]
            },
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "import { cn } from \"@/lib/utils\";\n\nconst items = [\n  { value: \"one\", label: \"One\" },\n  { value: \"two\", label: \"Two\" },\n  { value: \"three\", label: \"Three\" },\n];\n\n  const SELECT_STATES = [\n    { label: \"Default\" },\n    { label: \"Hover\", buttonClassName: \"bg-[--hover]\" },\n    {\n      label: \"Focus-visible\",\n      className: \"rounded-[var(--control-radius)] ring-2 ring-[hsl(var(--ring))] ring-offset-0\",\n    },\n    { label: \"Active\", buttonClassName: \"bg-[--active]\" },\n    { label: \"Disabled\", props: { disabled: true } },\n    {\n      label: \"Loading\",\n      buttonClassName: \"pointer-events-none opacity-loading\",\n    },\n  ];\n\nconst [value, setValue] = React.useState(items[0]?.value ?? \"\");\n\n<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <div className=\"grid grid-cols-1 gap-[var(--space-3)] sm:grid-cols-2\">\n    <Select\n      items={items}\n      value={value}\n      onChange={setValue}\n      placeholder=\"Animated select\"\n      className=\"w-full sm:w-auto\"\n    />\n    <Select\n      items={items}\n      variant=\"native\"\n      value={value}\n      onChange={setValue}\n      aria-label=\"Native select\"\n      className=\"w-full sm:w-auto\"\n    />\n  </div>\n  <div className=\"flex flex-col gap-[var(--space-2)]\">\n    <p className=\"text-caption text-muted-foreground\">States</p>\n    <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n        {SELECT_STATES.map(({ label, buttonClassName, className, props }) => {\n          const { items: stateItems, ...restProps } = props ?? {};\n          const sampleItems = stateItems ?? items;\n          const baseClassName = \"w-full sm:w-auto\";\n          const finalClassName = cn(baseClassName, className);\n\n          return (\n            <Select\n              key={label}\n              items={[...sampleItems]}\n              placeholder={label}\n              ariaLabel={label}\n              buttonClassName={buttonClassName}\n              className={finalClassName}\n              {...restProps}\n            />\n          );\n        })}\n    </div>\n  </div>\n</div>",
          "preview": {
            "id": "ui:select:variants"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<Select placeholder=\"Animated select\" items={items} />",
              "preview": {
                "id": "ui:select:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<Select buttonClassName=\"bg-[--hover]\" placeholder=\"Hover\" items={items} />",
              "preview": {
                "id": "ui:select:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<Select className=\"rounded-[var(--control-radius)] ring-2 ring-[hsl(var(--ring))] ring-offset-0\" placeholder=\"Focus-visible\" items={items} />",
              "preview": {
                "id": "ui:select:state:focus-visible"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<Select buttonClassName=\"bg-[--active]\" placeholder=\"Active\" items={items} />",
              "preview": {
                "id": "ui:select:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Select placeholder=\"Disabled\" disabled items={items} />",
              "preview": {
                "id": "ui:select:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Select buttonClassName=\"pointer-events-none opacity-loading\" placeholder=\"Loading\" items={items} />",
              "preview": {
                "id": "ui:select:state:loading"
              }
            }
          ]
        },
        {
          "id": "field",
          "name": "Field",
          "description": "Composable shell for custom inputs, search, and selects",
          "kind": "primitive",
          "tags": [
            "field",
            "input"
          ],
          "props": [
            {
              "name": "height",
              "type": "\"sm\" | \"md\" | \"lg\" | \"xl\" | number",
              "defaultValue": "\"md\""
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "invalid",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "loading",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "readOnly",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "helper",
              "type": "React.ReactNode"
            },
            {
              "name": "helperTone",
              "type": "\"muted\" | \"danger\" | \"success\""
            },
            {
              "name": "counter",
              "type": "React.ReactNode"
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Focus visible"
                },
                {
                  "value": "Invalid"
                },
                {
                  "value": "Loading"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "With counter"
                },
                {
                  "value": "Select"
                },
                {
                  "value": "Search"
                }
              ]
            }
          ],
          "code": "const [search, setSearch] = React.useState(\"Scouting\");\n\n<Field.Root helper=\"Compose primitives\">\n  <Field.Input placeholder=\"Default field\" />\n</Field.Root>\n<Field.Root\n  className=\"ring-2 ring-[hsl(var(--ring))]\"\n  helper=\"Helper text aligns with counter\"\n  helperId=\"field-focus-helper\"\n  counter=\"64 / 100\"\n  counterId=\"field-focus-counter\"\n>\n  <Field.Input\n    aria-describedby=\"field-focus-helper field-focus-counter\"\n    placeholder=\"Forced focus ring\"\n  />\n</Field.Root>\n<Field.Root invalid helper=\"Incorrect format\" helperTone=\"danger\">\n  <Field.Input placeholder=\"Invalid field\" aria-invalid />\n</Field.Root>\n<Field.Root loading helper=\"Loading state\">\n  <Field.Input placeholder=\"Loading field\" />\n</Field.Root>\n<Field.Root disabled helper=\"Disabled field\">\n  <Field.Input placeholder=\"Disabled field\" disabled />\n</Field.Root>\n<Field.Root\n  counter=\"120 / 200\"\n  counterId=\"field-counter\"\n  helper=\"Helper with counter\"\n  helperId=\"field-helper\"\n>\n  <Field.Textarea\n    aria-describedby=\"field-helper field-counter\"\n    placeholder=\"Textarea within a field\"\n    rows={3}\n  />\n</Field.Root>\n<Field.Root>\n  <Field.Select defaultValue=\"one\">\n    <option value=\"one\">One</option>\n    <option value=\"two\">Two</option>\n  </Field.Select>\n</Field.Root>\n<Field.Root>\n  <Field.Search\n    value={search}\n    onChange={(event) => setSearch(event.target.value)}\n    placeholder=\"Search fields\"\n    clearLabel=\"Clear search\"\n  />\n</Field.Root>",
          "preview": {
            "id": "ui:field:states"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<Field.Root helper=\"Compose primitives\">\n  <Field.Input placeholder=\"Default field\" />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:default"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus visible",
              "code": "<Field.Root\n  className=\"ring-2 ring-[hsl(var(--ring))]\"\n  helper=\"Helper text aligns with counter\"\n  helperId=\"field-focus-helper\"\n  counter=\"64 / 100\"\n  counterId=\"field-focus-counter\"\n>\n  <Field.Input\n    aria-describedby=\"field-focus-helper field-focus-counter\"\n    placeholder=\"Forced focus ring\"\n  />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:focus-visible"
              }
            },
            {
              "id": "invalid",
              "name": "Invalid",
              "code": "<Field.Root invalid helper=\"Incorrect format\" helperTone=\"danger\">\n  <Field.Input placeholder=\"Invalid field\" aria-invalid />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:invalid"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Field.Root loading helper=\"Loading state\">\n  <Field.Input placeholder=\"Loading field\" />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:loading"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Field.Root disabled helper=\"Disabled field\">\n  <Field.Input placeholder=\"Disabled field\" disabled />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:disabled"
              }
            },
            {
              "id": "with-counter",
              "name": "With counter",
              "code": "<Field.Root\n  counter=\"120 / 200\"\n  counterId=\"field-counter\"\n  helper=\"Helper with counter\"\n  helperId=\"field-helper\"\n>\n  <Field.Textarea\n    aria-describedby=\"field-helper field-counter\"\n    placeholder=\"Textarea within a field\"\n    rows={3}\n  />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:with-counter"
              }
            },
            {
              "id": "select",
              "name": "Select",
              "code": "const options = [\n  { value: \"one\", label: \"One\" },\n  { value: \"two\", label: \"Two\" },\n];\n\n<Field.Root>\n  <Field.Select defaultValue=\"one\">\n    {options.map((option) => (\n      <option key={option.value} value={option.value}>\n        {option.label}\n      </option>\n    ))}\n  </Field.Select>\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:select"
              }
            },
            {
              "id": "search",
              "name": "Search",
              "code": "const [search, setSearch] = React.useState(\"Scouting\");\n\n<Field.Root>\n  <Field.Search\n    value={search}\n    onChange={(event) => setSearch(event.target.value)}\n    placeholder=\"Search fields\"\n    clearLabel=\"Clear search\"\n  />\n</Field.Root>",
              "preview": {
                "id": "ui:field:state:search"
              }
            }
          ]
        },
        {
          "id": "input",
          "name": "Input",
          "description": "Standard text input with semantic states",
          "kind": "primitive",
          "tags": [
            "input",
            "text"
          ],
          "props": [
            {
              "name": "placeholder",
              "type": "string"
            },
            {
              "name": "height",
              "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
              "defaultValue": "\"md\""
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "data-loading",
              "type": "boolean",
              "defaultValue": "false"
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<div className=\"flex flex-col gap-[var(--space-2)]\">\n  <Input placeholder=\"Default\" />\n  <Input placeholder=\"Hover\" className=\"bg-[--hover]\" />\n  <Input placeholder=\"Focus\" className=\"ring-2 ring-[var(--focus)]\" />\n  <Input placeholder=\"Active\" className=\"bg-[--active]\" />\n  <Input placeholder=\"Disabled\" disabled />\n  <Input placeholder=\"Loading\" data-loading />\n</div>",
          "preview": {
            "id": "ui:input:states"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<Input placeholder=\"Default\" />",
              "preview": {
                "id": "ui:input:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<Input className=\"bg-[--hover]\" placeholder=\"Hover\" />",
              "preview": {
                "id": "ui:input:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus",
              "code": "<Input className=\"ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)] [outline:var(--spacing-0-5)_solid_var(--ring-contrast)] [outline-offset:var(--spacing-0-5)]\" placeholder=\"Focus\" />",
              "preview": {
                "id": "ui:input:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<Input className=\"bg-[--active]\" placeholder=\"Active\" />",
              "preview": {
                "id": "ui:input:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Input placeholder=\"Disabled\" disabled />",
              "preview": {
                "id": "ui:input:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Input placeholder=\"Loading\" data-loading />",
              "preview": {
                "id": "ui:input:state:loading"
              }
            }
          ]
        },
        {
          "id": "search-bar",
          "name": "SearchBar",
          "description": "Debounced search input with optional label and slots",
          "kind": "primitive",
          "tags": [
            "search",
            "input"
          ],
          "props": [
            {
              "name": "value",
              "type": "string",
              "required": true
            },
            {
              "name": "onValueChange",
              "type": "(value: string) => void"
            },
            {
              "name": "placeholder",
              "type": "string"
            },
            {
              "name": "label",
              "type": "React.ReactNode"
            },
            {
              "name": "right",
              "type": "React.ReactNode"
            },
            {
              "name": "loading",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "variant",
              "type": "\"default\" | \"neo\"",
              "defaultValue": "\"default\""
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "With label"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "const [query, setQuery] = React.useState(\"Champion counters\");\nconst handleNoop = React.useCallback((_value: string) => {}, []);\n\n<SearchBar\n  value={query}\n  onValueChange={setQuery}\n  placeholder=\"Search components\"\n/>\n<SearchBar\n  value=\"\"\n  onValueChange={handleNoop}\n  label=\"Search library\"\n  placeholder=\"With label\"\n  right={<Button size=\"sm\">Filters</Button>}\n/>\n<SearchBar\n  value=\"Hover\"\n  onValueChange={handleNoop}\n  placeholder=\"Hover\"\n  fieldClassName=\"bg-[--hover]\"\n/>\n<SearchBar\n  value=\"Focus-visible\"\n  onValueChange={handleNoop}\n  placeholder=\"Focus-visible\"\n  fieldClassName=\"ring-2 ring-[hsl(var(--ring))] ring-offset-0 ring-offset-[hsl(var(--bg))]\"\n/>\n<SearchBar\n  value=\"Active\"\n  onValueChange={handleNoop}\n  placeholder=\"Active\"\n  fieldClassName=\"bg-[--active]\"\n/>\n<SearchBar\n  value=\"Disabled\"\n  onValueChange={handleNoop}\n  placeholder=\"Disabled\"\n  disabled\n/>\n<SearchBar\n  value=\"Loading\"\n  onValueChange={handleNoop}\n  placeholder=\"Loading\"\n  loading\n/>",
          "preview": {
            "id": "ui:search-bar:states"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<SearchBar value={query} onValueChange={setQuery} placeholder=\"Search components\" />",
              "preview": {
                "id": "ui:search-bar:state:default"
              }
            },
            {
              "id": "with-label",
              "name": "With label",
              "code": "<SearchBar label=\"Search library\" right={<Button size=\"sm\">Filters</Button>} />",
              "preview": {
                "id": "ui:search-bar:state:with-label"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<SearchBar fieldClassName=\"bg-[--hover]\" placeholder=\"Hover\" />",
              "preview": {
                "id": "ui:search-bar:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<SearchBar fieldClassName=\"ring-2 ring-[hsl(var(--ring))] ring-offset-0 ring-offset-[hsl(var(--bg))]\" placeholder=\"Focus-visible\" />",
              "preview": {
                "id": "ui:search-bar:state:focus-visible"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<SearchBar fieldClassName=\"bg-[--active]\" placeholder=\"Active\" />",
              "preview": {
                "id": "ui:search-bar:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<SearchBar placeholder=\"Disabled\" disabled />",
              "preview": {
                "id": "ui:search-bar:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<SearchBar placeholder=\"Loading\" loading />",
              "preview": {
                "id": "ui:search-bar:state:loading"
              }
            }
          ]
        },
        {
          "id": "textarea",
          "name": "Textarea",
          "description": "Multi-line text input with Field styling",
          "kind": "primitive",
          "tags": [
            "textarea",
            "input"
          ],
          "props": [
            {
              "name": "placeholder",
              "type": "string"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "readOnly",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "aria-invalid",
              "type": "boolean | \"grammar\" | \"spelling\" | undefined"
            },
            {
              "name": "data-loading",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "resize",
              "type": "string"
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Invalid"
                },
                {
                  "value": "Read-only"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<Textarea placeholder=\"Share your thoughts\" />\n<Textarea placeholder=\"Hover\" className=\"bg-[--hover]\" />\n<Textarea placeholder=\"Focus-visible\" className=\"ring-2 ring-[hsl(var(--ring))]\" />\n<Textarea placeholder=\"Active\" className=\"bg-[--active]\" />\n<Textarea\n  placeholder=\"Needs attention\"\n  className=\"ring-2 ring-[hsl(var(--danger))]\"\n  aria-invalid\n/> \n<Textarea\n  placeholder=\"Read-only\"\n  className=\"bg-[hsl(var(--card)/0.72)]\"\n  textareaClassName=\"text-muted-foreground\"\n  readOnly\n/> \n<Textarea placeholder=\"Disabled\" disabled />\n<Textarea placeholder=\"Loading\" data-loading />\n<Textarea placeholder=\"Resizable textarea\" resize=\"resize-y\" aria-label=\"Resizable textarea\" />",
          "preview": {
            "id": "ui:textarea:states"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<Textarea placeholder=\"Share your thoughts\" />",
              "preview": {
                "id": "ui:textarea:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<Textarea className=\"bg-[--hover]\" placeholder=\"Hover\" />",
              "preview": {
                "id": "ui:textarea:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<Textarea className=\"ring-2 ring-[hsl(var(--ring))]\" placeholder=\"Focus-visible\" />",
              "preview": {
                "id": "ui:textarea:state:focus-visible"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<Textarea className=\"bg-[--active]\" placeholder=\"Active\" />",
              "preview": {
                "id": "ui:textarea:state:active"
              }
            },
            {
              "id": "invalid",
              "name": "Invalid",
              "code": "<Textarea\n  className=\"ring-2 ring-[hsl(var(--danger))]\"\n  placeholder=\"Needs attention\"\n  aria-invalid\n/>",
              "preview": {
                "id": "ui:textarea:state:invalid"
              }
            },
            {
              "id": "read-only",
              "name": "Read-only",
              "code": "<Textarea\n  className=\"bg-[hsl(var(--card)/0.72)]\"\n  textareaClassName=\"text-muted-foreground\"\n  readOnly\n  placeholder=\"Read-only\"\n/>",
              "preview": {
                "id": "ui:textarea:state:read-only"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Textarea placeholder=\"Disabled\" disabled />",
              "preview": {
                "id": "ui:textarea:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Textarea placeholder=\"Loading\" data-loading />",
              "preview": {
                "id": "ui:textarea:state:loading"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "prompts",
      "entries": [
        {
          "id": "prompt-list",
          "name": "PromptList",
          "description": "Prompt filtering",
          "tags": [
            "prompt",
            "list"
          ],
          "kind": "component",
          "code": "<PromptList prompts={demoPrompts} query=\"\" />",
          "usage": [
            {
              "kind": "do",
              "title": "Match skeleton rhythm to saved cards",
              "description": "Align placeholder spacing with prompt titles and bodies so loading feels stable."
            },
            {
              "kind": "do",
              "title": "Confirm empty states with guidance",
              "description": "Surface contextual copy that explains whether no prompts exist or filters removed results."
            },
            {
              "kind": "dont",
              "title": "Avoid blank panels",
              "description": "Never leave the list empty without skeletons or helper text; it reads as a rendering failure."
            }
          ],
          "preview": {
            "id": "prompts:prompts:prompt-list"
          },
          "states": [
            {
              "id": "loading",
              "name": "Loading",
              "description": "Skeleton cards preserve the prompt layout while entries sync from storage.",
              "code": "const PROMPT_LIST_LOADING_KEYS = [\n  \"prompt-loading-1\",\n  \"prompt-loading-2\",\n  \"prompt-loading-3\",\n];\n\n<ul className=\"mt-[var(--space-4)] space-y-[var(--space-3)]\">\n  {PROMPT_LIST_LOADING_KEYS.map((itemKey) => (\n    <li key={itemKey}>\n      <Card className=\"space-y-[var(--space-3)] p-[var(--space-3)]\">\n        <div className=\"flex items-center justify-between\">\n          <Skeleton\n            ariaHidden={false}\n            role=\"status\"\n            aria-label=\"Loading prompt title\"\n            className=\"h-[var(--space-5)] w-[calc(100%-var(--space-6))]\"\n            radius=\"sm\"\n          />\n          <Skeleton\n            className=\"h-[var(--space-4)] w-[calc(var(--space-8)*1.5)]\"\n            radius=\"sm\"\n          />\n        </div>\n        <div className=\"space-y-[var(--space-2)]\">\n          <Skeleton className=\"w-full\" />\n          <Skeleton className=\"w-[calc(100%-var(--space-6))]\" />\n        </div>\n      </Card>\n    </li>\n  ))}\n</ul>",
              "preview": {
                "id": "prompts:prompts:prompt-list:state:loading"
              }
            },
            {
              "id": "empty",
              "name": "Empty",
              "description": "Muted guidance keeps the workspace clear when no prompts have been saved yet.",
              "code": "<PromptList prompts={[]} query=\"\" />",
              "preview": {
                "id": "prompts:prompts:prompt-list:state:empty"
              }
            }
          ]
        },
        {
          "id": "prompts-header",
          "name": "PromptsHeader",
          "description": "Prompts workspace header with search, chips, and save action.",
          "tags": [
            "prompts",
            "header",
            "search"
          ],
          "kind": "component",
          "code": "function PromptsHeaderDemo() {\n  const [saved, setSaved] = React.useState(6);\n  const [query, setQuery] = React.useState(\"focus\");\n\n  return (\n    <PromptsHeader\n      count={saved}\n      query={query}\n      onQueryChange={setQuery}\n      onSave={() => setSaved((prev) => prev + 1)}\n      disabled={query.trim().length === 0}\n    />\n  );\n}",
          "preview": {
            "id": "prompts:prompts:prompts-header"
          },
          "states": [
            {
              "id": "chip-hover",
              "name": "Chip hover",
              "description": "The muted overlay token appears on hover so filter chips advertise interactivity without shifting layout.",
              "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge interactive className=\"bg-muted/28\">\n    Hover\n  </Badge>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:chip-hover"
              }
            },
            {
              "id": "chip-focus-visible",
              "name": "Chip focus-visible",
              "description": "Focus rings use the global `--focus` token to keep keyboard navigation visible across themed surfaces.",
              "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge\n    interactive\n    className=\"ring-2 ring-[var(--focus)] ring-offset-2 ring-offset-[hsl(var(--surface-2))] outline-none\"\n  >\n    Focus visible\n  </Badge>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:chip-focus-visible"
              }
            },
            {
              "id": "chip-pressed",
              "name": "Chip pressed",
              "description": "Pressed chips dip by `var(--space-1)` and deepen the muted overlay so selection feedback remains tactile.",
              "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge\n    interactive\n    aria-pressed=\"true\"\n    className=\"bg-muted/36 translate-y-[var(--space-1)] shadow-outline-subtle\"\n  >\n    Pressed\n  </Badge>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:chip-pressed"
              }
            },
            {
              "id": "chip-disabled",
              "name": "Chip disabled",
              "description": "Disabled chips lean on the shared opacity token so unavailable filters fade without breaking rhythm.",
              "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge interactive disabled>\n    Disabled\n  </Badge>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:chip-disabled"
              }
            },
            {
              "id": "chip-loading",
              "name": "Chip loading",
              "description": "While sync runs the badge disables interaction and shows an accent spinner anchored by the spacing scale.",
              "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge\n    interactive\n    disabled\n    className=\"pointer-events-none\"\n  >\n    Loading\n    <Spinner\n      size=\"sm\"\n      className=\"ml-[var(--space-2)] border-[hsl(var(--ring))] border-t-transparent\"\n    />\n  </Badge>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:chip-loading"
              }
            },
            {
              "id": "search-hover",
              "name": "Search hover",
              "description": "Hovering the header search lifts the hairline shadow using the shared highlight token.",
              "code": "<Field.Root\n  className=\"max-w-[min(100%,var(--space-72))] shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.12),inset_0_calc(var(--hairline-w)*-1)_0_hsl(var(--border)/0.45)]\"\n>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Focus cues\"\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-hover"
              }
            },
            {
              "id": "search-focus-visible",
              "name": "Search focus-visible",
              "description": "Auto focus applies the planner ring token so keyboard users keep orientation while filtering.",
              "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\">\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Focus cues\"\n    autoFocus\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-focus-visible"
              }
            },
            {
              "id": "search-active",
              "name": "Search active",
              "description": "Typing a query reveals the clear affordance so the chip filters and search stay in sync.",
              "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\">\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Reaction windows\"\n    clearable\n    onClear={() => {}}\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-active"
              }
            },
            {
              "id": "search-disabled",
              "name": "Search disabled",
              "description": "When search is disabled, tokens desaturate the field and the clear control stays hidden.",
              "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\" disabled>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Focus cues\"\n    disabled\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-disabled"
              }
            },
            {
              "id": "search-loading",
              "name": "Search loading",
              "description": "The loading state locks the field and shows the inline spinner supplied by the field primitive.",
              "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\" loading>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Syncing prompts\"\n    loading\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-loading"
              }
            },
            {
              "id": "search-error",
              "name": "Search error",
              "description": "Danger helpers and border tokens communicate empty matches without collapsing the layout.",
              "code": "<Field.Root\n  className=\"max-w-[min(100%,var(--space-72))]\"\n  invalid\n  helper=\"No prompts match \"reaction windows\".\"\n  helperTone=\"danger\"\n  helperId=\"search-error\"\n>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Reaction windows\"\n    aria-label=\"Search prompts\"\n    aria-describedby=\"search-error\"\n    aria-invalid=\"true\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-error"
              }
            },
            {
              "id": "search-empty",
              "name": "Search empty",
              "description": "An empty helper keeps guidance visible when no query is applied yet.",
              "code": "<Field.Root\n  className=\"max-w-[min(100%,var(--space-72))]\"\n  helper=\"Type to filter saved prompts.\"\n  helperId=\"search-helper\"\n>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    aria-label=\"Search prompts\"\n    aria-describedby=\"search-helper\"\n  />\n</Field.Root>",
              "preview": {
                "id": "prompts:prompts:prompts-header:state:search-empty"
              }
            }
          ]
        },
        {
          "id": "prompts-compose-panel",
          "name": "PromptsComposePanel",
          "description": "Compose prompts with labelled title and textarea controls.",
          "tags": [
            "prompts",
            "form"
          ],
          "kind": "component",
          "code": "function PromptsComposePanelDemo() {\n  const [title, setTitle] = React.useState(\"Review after scrims\");\n  const [text, setText] = React.useState(\n    \"Summarize three high-impact plays and next steps.\",\n  );\n\n  return (\n    <PromptsComposePanel\n      title={title}\n      onTitleChange={setTitle}\n      text={text}\n      onTextChange={setText}\n    />\n  );\n}",
          "preview": {
            "id": "prompts:prompts:prompts-compose-panel"
          },
          "states": [
            {
              "id": "compose-hover",
              "name": "Compose hover",
              "description": "Hovering either field lifts the shared highlight shadow while preserving the matte prompt shell.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.12),inset_0_calc(var(--hairline-w)*-1)_0_hsl(var(--border)/0.45)]\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.12),inset_0_calc(var(--hairline-w)*-1)_0_hsl(var(--border)/0.45)]\"\n    />\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-hover"
              }
            },
            {
              "id": "compose-focus-visible",
              "name": "Compose focus-visible",
              "description": "Focus-visible rings lean on the planner ring token so keyboard users keep context while editing prompts.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      autoFocus\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n    />\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-focus-visible"
              }
            },
            {
              "id": "compose-active",
              "name": "Compose active",
              "description": "Active editing introduces a subtle inset highlight so long-form prompts feel anchored while typing.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.08)]\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.08)]\"\n    />\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-active"
              }
            },
            {
              "id": "compose-disabled",
              "name": "Compose disabled",
              "description": "Disabled compose fields lean on the shared disabled opacity and remove pointer cues while saves settle.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      disabled\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      disabled\n    />\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-disabled"
              }
            },
            {
              "id": "compose-loading",
              "name": "Compose loading",
              "description": "Loading states trigger the field spinner via `data-loading` so writers know saves are in progress.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      data-loading\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      data-loading\n    />\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-loading"
              }
            },
            {
              "id": "compose-error",
              "name": "Compose error",
              "description": "Danger helpers communicate required titles, keeping validation inline with the prompt scaffold.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      aria-invalid=\"true\"\n      aria-describedby=\"prompt-title-error\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p\n      id=\"prompt-title-error\"\n      className=\"mt-[var(--space-1)] text-label text-danger\"\n    >\n      Title is required before saving.\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      aria-invalid=\"true\"\n      resize=\"resize-y\"\n    />\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-error"
              }
            },
            {
              "id": "compose-empty",
              "name": "Compose empty",
              "description": "Empty compose fields keep helper copy visible so players know what to write before saving.",
              "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      aria-describedby=\"prompt-body-helper\"\n      resize=\"resize-y\"\n    />\n    <p\n      id=\"prompt-body-helper\"\n      className=\"mt-[var(--space-1)] text-label text-muted-foreground\"\n    >\n      Describe the context or goal for this prompt.\n    </p>\n  </div>\n</div>",
              "preview": {
                "id": "prompts:prompts:prompts-compose-panel:state:compose-empty"
              }
            }
          ]
        },
        {
          "id": "prompts-demos",
          "name": "PromptsDemos",
          "description": "Comprehensive component playground for prompts surfaces.",
          "tags": [
            "prompts",
            "gallery",
            "demo"
          ],
          "kind": "component",
          "code": "<PromptsDemos />",
          "preview": {
            "id": "prompts:prompts:prompts-demos"
          }
        }
      ]
    },
    {
      "id": "planner",
      "entries": [
        {
          "id": "week-picker",
          "name": "WeekPicker",
          "description": "Sticky hero shell preview showing week totals, mock chips, and the jump-to-top action.",
          "tags": [
            "planner",
            "navigation",
            "week"
          ],
          "kind": "complex",
          "code": "<WeekPickerDemo />",
          "usage": [
            {
              "kind": "do",
              "title": "Keep week totals visible",
              "description": "Pair the hero subtitle with aggregated task counts so the picker summarizes week progress at a glance."
            },
            {
              "kind": "do",
              "title": "Highlight today's chip",
              "description": "Use the accent token on the current day to anchor focus while other chips mock mixed completion states."
            }
          ],
          "preview": {
            "id": "prompts:planner:week-picker"
          }
        },
        {
          "id": "bottom-nav",
          "name": "BottomNav",
          "description": "Mobile Planner nav demo showing active, hover, focus-visible, disabled, and syncing tabs styled with tokens.",
          "tags": [
            "nav",
            "bottom"
          ],
          "kind": "complex",
          "code": "<BottomNavStatesDemo />",
          "preview": {
            "id": "prompts:planner:bottom-nav"
          },
          "states": [
            {
              "id": "active",
              "name": "Active tab",
              "description": "Accent text plus the theme ring token anchor the current Planner route.",
              "code": "<BottomNavStatesDemo mode=\"active\" />",
              "preview": {
                "id": "prompts:planner:bottom-nav:state:active"
              }
            },
            {
              "id": "hover",
              "name": "Hover tab",
              "description": "Cursor hover brightens the label and nudges the button using motion-safe elevation cues.",
              "code": "<BottomNavStatesDemo mode=\"hover\" />",
              "preview": {
                "id": "prompts:planner:bottom-nav:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Keyboard focus",
              "description": "Press Tab to cycle across tabs; focus-visible:ring-[var(--theme-ring)] draws the accessible theme ring for keyboard travelers.",
              "code": "<BottomNavStatesDemo mode=\"focus-visible\" />",
              "preview": {
                "id": "prompts:planner:bottom-nav:state:focus-visible"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled tab",
              "description": "Muted foreground copy and the global disabled opacity token signal unavailable sections.",
              "code": "<BottomNavStatesDemo mode=\"disabled\" />",
              "preview": {
                "id": "prompts:planner:bottom-nav:state:disabled"
              }
            },
            {
              "id": "syncing",
              "name": "Syncing tab",
              "description": "A compact spinner with accent borders communicates background sync progress beside the label.",
              "code": "<BottomNavStatesDemo mode=\"syncing\" />",
              "preview": {
                "id": "prompts:planner:bottom-nav:state:syncing"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "cards",
      "entries": [
        {
          "id": "card-demo",
          "name": "Card",
          "description": "Standard card surface with header spacing set to the space-2 token for consistent vertical rhythm.",
          "tags": [
            "card",
            "layout"
          ],
          "kind": "component",
          "code": "<Card>\n  <CardHeader>\n    <CardTitle>Title</CardTitle>\n    <CardDescription>Description</CardDescription>\n  </CardHeader>\n  <CardContent>\n    <p className=\"text-ui\">Body</p>\n  </CardContent>\n  <CardFooter>\n    <Button size=\"sm\">Action</Button>\n  </CardFooter>\n</Card>",
          "usage": [
            {
              "kind": "do",
              "title": "Use skeletons for async fetches",
              "description": "Mirror the content hierarchy with Skeleton components so loading feels intentional and steady."
            },
            {
              "kind": "do",
              "title": "Keep messaging concise",
              "description": "Card headlines should be short and scannable to reinforce the surrounding dashboard context."
            },
            {
              "kind": "dont",
              "title": "Do not mix button tones",
              "description": "Cards should avoid multiple competing button tones; reserve the primary action for the footer."
            }
          ],
          "preview": {
            "id": "prompts:cards:card-demo"
          },
          "states": [
            {
              "id": "loading",
              "name": "Loading",
              "description": "Skeleton placeholders mirror card layout to communicate asynchronous loading.",
              "code": "<Card>\n  <CardContent className=\"space-y-[var(--space-4)]\">\n    <div className=\"space-y-[var(--space-2)]\">\n      <Skeleton\n        ariaHidden={false}\n        role=\"status\"\n        aria-label=\"Loading summary\"\n        className=\"h-[var(--space-6)] w-3/4\"\n        radius=\"sm\"\n      />\n      <Skeleton className=\"w-full\" />\n      <Skeleton className=\"w-4/5\" />\n    </div>\n    <div className=\"flex items-center gap-[var(--space-3)]\">\n      <Skeleton\n        className=\"h-[var(--space-7)] w-[var(--space-7)] flex-none\"\n        radius=\"full\"\n      />\n      <div className=\"flex-1 space-y-[var(--space-2)]\">\n        <Skeleton className=\"w-3/4\" />\n        <Skeleton className=\"w-2/3\" />\n      </div>\n    </div>\n  </CardContent>\n</Card>",
              "preview": {
                "id": "prompts:cards:card-demo:state:loading"
              }
            },
            {
              "id": "error",
              "name": "Error",
              "description": "Snackbar feedback surfaces failure messaging with a retry action inside the card shell.",
              "code": "<Card>\n  <CardContent className=\"space-y-[var(--space-3)]\">\n    <div className=\"space-y-[var(--space-1)]\">\n      <h4 className=\"text-ui font-semibold tracking-[-0.01em]\">\n        Data unavailable\n      </h4>\n      <p className=\"text-label text-muted-foreground\">\n        Refresh to request the latest match insights.\n      </p>\n    </div>\n    <Snackbar\n      message=\"Sync failed\"\n      actionLabel=\"Retry\"\n      onAction={() => {}}\n      tone=\"danger\"\n      width=\"full\"\n    />\n  </CardContent>\n</Card>",
              "preview": {
                "id": "prompts:cards:card-demo:state:error"
              }
            }
          ]
        },
        {
          "id": "neo-card-demo",
          "name": "NeoCard",
          "tags": [
            "card",
            "overlay",
            "layout"
          ],
          "kind": "component",
          "code": "<NeoCard\n  overlay={<div className=\"neo-card__overlay\" />}\n>\n  <p className=\"text-ui\">Body</p>\n</NeoCard>",
          "usage": [
            {
              "kind": "do",
              "title": "Use overlays for featured content",
              "description": "Neo cards work best when highlighting premium or hero content that benefits from glow and depth."
            },
            {
              "kind": "dont",
              "title": "Avoid dense layouts",
              "description": "Do not overload Neo cards with complex forms; reserve them for concise summaries or highlights."
            }
          ],
          "preview": {
            "id": "prompts:cards:neo-card-demo"
          },
          "states": [
            {
              "id": "loading",
              "name": "Loading",
              "description": "Neo shell supports skeletons while preserving raised lighting cues.",
              "code": "<NeoCard className=\"p-[var(--space-4)]\">\n  <div className=\"space-y-[var(--space-4)]\">\n    <div className=\"space-y-[var(--space-2)]\">\n      <Skeleton\n        ariaHidden={false}\n        role=\"status\"\n        aria-label=\"Loading summary\"\n        className=\"h-[var(--space-6)] w-3/4\"\n        radius=\"sm\"\n      />\n      <Skeleton className=\"w-full\" />\n      <Skeleton className=\"w-4/5\" />\n    </div>\n    <div className=\"flex items-center gap-[var(--space-3)]\">\n      <Skeleton\n        className=\"h-[var(--space-7)] w-[var(--space-7)] flex-none\"\n        radius=\"full\"\n      />\n      <div className=\"flex-1 space-y-[var(--space-2)]\">\n        <Skeleton className=\"w-3/4\" />\n        <Skeleton className=\"w-2/3\" />\n      </div>\n    </div>\n  </div>\n</NeoCard>",
              "preview": {
                "id": "prompts:cards:neo-card-demo:state:loading"
              }
            },
            {
              "id": "error",
              "name": "Error",
              "description": "Surface retry messaging within the Neo overlay while maintaining blend effects.",
              "code": "<NeoCard className=\"p-[var(--space-4)]\">\n  <div className=\"space-y-[var(--space-3)]\">\n    <div className=\"space-y-[var(--space-1)]\">\n      <h4 className=\"text-ui font-semibold tracking-[-0.01em]\">\n        Overlay unavailable\n      </h4>\n      <p className=\"text-label text-muted-foreground\">\n        Refresh to retry the sync and restore overlay content.\n      </p>\n    </div>\n    <Snackbar\n      message=\"Sync failed\"\n      actionLabel=\"Retry\"\n      onAction={() => {}}\n      tone=\"danger\"\n      width=\"full\"\n    />\n  </div>\n</NeoCard>",
              "preview": {
                "id": "prompts:cards:neo-card-demo:state:error"
              }
            }
          ]
        },
        {
          "id": "section-card-variants",
          "name": "SectionCard Variants",
          "tags": [
            "section",
            "card"
          ],
          "kind": "component",
          "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <SectionCard>\n    <SectionCard.Header title=\"Neo (default)\" />\n    <SectionCard.Body>Content</SectionCard.Body>\n  </SectionCard>\n  <SectionCard variant=\"plain\">\n    <SectionCard.Header title=\"Plain\" />\n    <SectionCard.Body>Content</SectionCard.Body>\n  </SectionCard>\n</div>",
          "preview": {
            "id": "prompts:cards:section-card-variants"
          }
        }
      ]
    },
    {
      "id": "layout",
      "entries": [
        {
          "id": "page-shell",
          "name": "PageShell",
          "description": "Responsive page container. Enable the grid prop and wrap sections in col-span-* to align to the shell template.",
          "tags": [
            "layout",
            "shell"
          ],
          "kind": "component",
          "code": "<PageShell\n  grid\n  className=\"py-[var(--space-6)]\"\n  contentClassName=\"items-start\"\n>\n  <div className=\"col-span-full text-label font-semibold tracking-[0.02em] text-muted-foreground md:col-span-7\">\n    Page shell content\n  </div>\n  <div className=\"col-span-full flex items-center justify-end gap-[var(--space-3)] md:col-span-5 md:justify-self-end\">\n    <Button size=\"sm\">Primary</Button>\n    <Button size=\"sm\" variant=\"ghost\">\n      Secondary\n    </Button>\n  </div>\n</PageShell>",
          "preview": {
            "id": "prompts:layout:page-shell"
          }
        },
        {
          "id": "sheet-demo",
          "name": "Sheet",
          "tags": [
            "sheet",
            "overlay"
          ],
          "kind": "component",
          "code": "<Button size=\"sm\">Open</Button>\n<Sheet open>\n  <Card>\n    <CardHeader>\n      <CardTitle>Sheet</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <p className=\"text-ui\">Content</p>\n    </CardContent>\n  </Card>\n</Sheet>",
          "preview": {
            "id": "prompts:layout:sheet-demo"
          },
          "states": [
            {
              "id": "closed",
              "name": "Closed",
              "description": "Trigger rests on the base layer with the outline elevation token before the sheet opens.",
              "code": "<Card className=\"max-w-sm space-y-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n  <CardHeader>\n    <CardTitle>Sheet closed</CardTitle>\n    <CardDescription>\n      Use the trigger to lift the overlay from the base elevation.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      className=\"shadow-[var(--shadow-control)] focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n    >\n      Open sheet\n    </Button>\n  </CardContent>\n</Card>",
              "preview": {
                "id": "prompts:layout:sheet-demo:state:closed"
              }
            },
            {
              "id": "opening",
              "name": "Opening / loading",
              "description": "Soft elevation token and spinner communicate progress while the sheet animates in.",
              "code": "<Sheet\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-soft)]\"\n>\n  <CardHeader>\n    <CardTitle>Syncing tasks</CardTitle>\n    <CardDescription>\n      Keep content visible while the sheet animates into place.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-3)] rounded-card border border-border/40 bg-surface-2 p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n    <Spinner size=\"md\" />\n    <span className=\"text-ui text-muted-foreground\">Loading dashboard</span>\n  </CardContent>\n</Sheet>",
              "preview": {
                "id": "prompts:layout:sheet-demo:state:opening"
              }
            },
            {
              "id": "focus-trap",
              "name": "Focus trapped",
              "description": "Focus ring token highlights the primary action while the dialog trap holds keyboard focus.",
              "code": "const primaryActionRef = React.useRef<HTMLButtonElement | null>(null);\nReact.useEffect(() => {\n  primaryActionRef.current?.focus({ preventScroll: true });\n}, []);\n\n<Sheet\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-strong)]\"\n>\n  <CardHeader>\n    <CardTitle>Focus trapped</CardTitle>\n    <CardDescription>\n      Keyboard focus stays inside the sheet while it is open.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <p className=\"text-ui text-muted-foreground\">\n      Tab navigation cycles through the available controls.\n    </p>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      ref={primaryActionRef}\n      size=\"sm\"\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Save\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Cancel\n    </Button>\n  </CardFooter>\n</Sheet>",
              "preview": {
                "id": "prompts:layout:sheet-demo:state:focus-trap"
              }
            },
            {
              "id": "confirm-disabled",
              "name": "Confirm disabled",
              "description": "Primary confirmation remains disabled until supporting requirements are met.",
              "code": "<Sheet\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo)]\"\n>\n  <CardHeader>\n    <CardTitle>Archive reminders</CardTitle>\n    <CardDescription>\n      Keep confirm disabled until all checklist items are reviewed.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <div className=\"rounded-card border border-border/40 bg-surface p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n      <p className=\"text-ui text-muted-foreground\">\n        Archive includes 3 completed reminders.\n      </p>\n      <p className=\"text-ui text-muted-foreground\">\n        Complete the checklist to enable confirmation.\n      </p>\n    </div>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      disabled\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Confirm\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Cancel\n    </Button>\n  </CardFooter>\n</Sheet>",
              "preview": {
                "id": "prompts:layout:sheet-demo:state:confirm-disabled"
              }
            }
          ]
        },
        {
          "id": "modal-demo",
          "name": "Modal",
          "tags": [
            "modal",
            "overlay"
          ],
          "kind": "component",
          "code": "<Button size=\"sm\">Open</Button>\n<Modal open>\n  <Card>\n    <CardHeader>\n      <CardTitle>Modal</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <p className=\"text-ui\">Content</p>\n    </CardContent>\n    <CardFooter>\n      <Button size=\"sm\">Close</Button>\n    </CardFooter>\n  </Card>\n</Modal>",
          "preview": {
            "id": "prompts:layout:modal-demo"
          },
          "states": [
            {
              "id": "closed",
              "name": "Closed",
              "description": "Trigger sits on the outline elevation token until the modal is invoked.",
              "code": "<Card className=\"max-w-sm space-y-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n  <CardHeader>\n    <CardTitle>Modal closed</CardTitle>\n    <CardDescription>\n      Trigger sits idle at the base elevation until needed.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      className=\"shadow-[var(--shadow-control)] focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n    >\n      Open modal\n    </Button>\n  </CardContent>\n</Card>",
              "preview": {
                "id": "prompts:layout:modal-demo:state:closed"
              }
            },
            {
              "id": "loading",
              "name": "Opening / loading",
              "description": "Soft elevation token pairs with a spinner while the dialog content hydrates.",
              "code": "<Modal\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-soft)]\"\n>\n  <CardHeader>\n    <CardTitle>Confirm selection</CardTitle>\n    <CardDescription>\n      Surface a loader while the dialog hydrates.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-3)] rounded-card border border-border/40 bg-surface-2 p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n    <Spinner size=\"md\" />\n    <span className=\"text-ui text-muted-foreground\">Syncing choices...</span>\n  </CardContent>\n</Modal>",
              "preview": {
                "id": "prompts:layout:modal-demo:state:loading"
              }
            },
            {
              "id": "focus-trap",
              "name": "Focus trapped",
              "description": "Primary action receives the focus ring token while the trap keeps keyboard users inside the modal.",
              "code": "const confirmRef = React.useRef<HTMLButtonElement | null>(null);\nReact.useEffect(() => {\n  confirmRef.current?.focus({ preventScroll: true });\n}, []);\n\n<Modal\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-strong)]\"\n>\n  <CardHeader>\n    <CardTitle>Keyboard locked in</CardTitle>\n    <CardDescription>\n      Focus moves to the primary action while the trap is active.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <p className=\"text-ui text-muted-foreground\">\n      Tab keeps focus within the modal until it closes.\n    </p>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      ref={confirmRef}\n      size=\"sm\"\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Confirm\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Back\n    </Button>\n  </CardFooter>\n</Modal>",
              "preview": {
                "id": "prompts:layout:modal-demo:state:focus-trap"
              }
            },
            {
              "id": "confirm-disabled",
              "name": "Confirm disabled",
              "description": "Destructive confirmation stays disabled until the warning is acknowledged.",
              "code": "<Modal\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo)]\"\n>\n  <CardHeader>\n    <CardTitle>Delete board</CardTitle>\n    <CardDescription>\n      Keep destructive confirmations disabled until acknowledged.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <div className=\"rounded-card border border-border/40 bg-surface p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n      <p className=\"text-ui text-muted-foreground\">\n        Deleting removes all tasks and cannot be undone.\n      </p>\n    </div>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      disabled\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Delete\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Cancel\n    </Button>\n  </CardFooter>\n</Modal>",
              "preview": {
                "id": "prompts:layout:modal-demo:state:confirm-disabled"
              }
            }
          ]
        },
        {
          "id": "split",
          "name": "Split",
          "tags": [
            "split",
            "layout",
            "theme"
          ],
          "kind": "component",
          "code": "<Split left={<div>Left</div>} right={<div>Right</div>} />",
          "preview": {
            "id": "prompts:layout:split"
          }
        },
        {
          "id": "title-bar",
          "name": "TitleBar",
          "tags": [
            "title",
            "bar"
          ],
          "kind": "component",
          "code": "<TitleBar label=\"Title\" />",
          "preview": {
            "id": "prompts:layout:title-bar"
          }
        },
        {
          "id": "header-tabs",
          "name": "HeaderTabs",
          "description": "Neomorphic segmented control used within headers",
          "kind": "component",
          "tags": [
            "tabs",
            "navigation"
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Active"
                },
                {
                  "value": "Inactive"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Disabled"
                }
              ]
            }
          ],
          "code": "<HeaderTabs\n  items={[\n    { key: \"plan\", label: \"Plan\", icon: <Circle aria-hidden=\"true\" /> },\n    {\n      key: \"review\",\n      label: \"Review\",\n      icon: <CircleDot aria-hidden=\"true\" />,\n      className: \"data-[state=inactive]:shadow-[0_0_0_calc(var(--hairline-w)*3)_hsl(var(--ring)/0.55)] data-[state=inactive]:outline-none\",\n    },\n    {\n      key: \"archive\",\n      label: \"Archive\",\n      icon: <CircleCheck aria-hidden=\"true\" />,\n      disabled: true,\n    },\n  ]}\n  value=\"plan\"\n  onChange={() => {}}\n  ariaLabel=\"Header tab demo\"\n/>",
          "preview": {
            "id": "ui:header-tabs:control"
          }
        },
        {
          "id": "header",
          "name": "Header",
          "description": "Workspace header with sticky support and segmented tabs",
          "kind": "component",
          "tags": [
            "header",
            "navigation"
          ],
          "axes": [
            {
              "id": "tab-state",
              "label": "Tab state",
              "type": "state",
              "values": [
                {
                  "value": "Active"
                },
                {
                  "value": "Inactive"
                },
                {
                  "value": "Disabled"
                }
              ]
            },
            {
              "id": "underline-tone",
              "label": "Underline tone",
              "type": "variant",
              "values": [
                {
                  "value": "Neutral"
                },
                {
                  "value": "Brand"
                }
              ]
            }
          ],
          "code": "<div className=\"grid gap-[var(--space-4)] lg:grid-cols-2\">\n  <div className=\"rounded-card border border-card-hairline-60 bg-panel/80 p-[var(--space-5)] shadow-[var(--shadow-outline-subtle)]\">\n    <p className=\"mb-[var(--space-3)] text-label font-medium text-muted-foreground\">\n      Neutral underline (default)\n    </p>\n    <Header\n      eyebrow=\"Workspace\"\n      heading=\"Header\"\n      subtitle=\"Segmented navigation anchored to the header\"\n      underlineTone=\"neutral\"\n      icon={\n        <Circle\n          aria-hidden=\"true\"\n          className=\"h-[var(--space-5)] w-[var(--space-5)] text-primary\"\n        />\n      }\n      tabs={{\n        items: [\n          {\n            key: \"summary\",\n            label: \"Summary\",\n            icon: (\n              <Circle\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"timeline\",\n            label: \"Timeline\",\n            icon: (\n              <CircleDot\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"insights\",\n            label: \"Insights\",\n            icon: (\n              <CircleCheck\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n            disabled: true,\n          },\n        ],\n        value: \"summary\",\n        onChange: () => {},\n        ariaLabel: \"Header demo tabs (neutral underline)\",\n        size: \"md\",\n      }}\n      sticky={false}\n      topClassName=\"top-0\"\n    >\n      <p className=\"text-ui text-muted-foreground\">\n        Viewing\n        <span className=\"ml-[var(--space-1)] font-medium text-foreground\">\n          Summary\n        </span>\n      </p>\n    </Header>\n    <div className=\"mt-[var(--space-4)] grid gap-[var(--space-3)] sm:grid-cols-2\">\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Next milestone</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Launch sprint\n        </p>\n      </div>\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Team focus</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Deep work block\n        </p>\n      </div>\n    </div>\n  </div>\n  <div className=\"rounded-card border border-card-hairline-60 bg-panel/80 p-[var(--space-5)] shadow-[var(--shadow-outline-subtle)]\">\n    <p className=\"mb-[var(--space-3)] text-label font-medium text-muted-foreground\">\n      Brand underline\n    </p>\n    <Header\n      eyebrow=\"Workspace\"\n      heading=\"Header\"\n      subtitle=\"Segmented navigation anchored to the header\"\n      underlineTone=\"brand\"\n      icon={\n        <Circle\n          aria-hidden=\"true\"\n          className=\"h-[var(--space-5)] w-[var(--space-5)] text-primary\"\n        />\n      }\n      tabs={{\n        items: [\n          {\n            key: \"summary\",\n            label: \"Summary\",\n            icon: (\n              <Circle\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"timeline\",\n            label: \"Timeline\",\n            icon: (\n              <CircleDot\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"insights\",\n            label: \"Insights\",\n            icon: (\n              <CircleCheck\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n            disabled: true,\n          },\n        ],\n        value: \"summary\",\n        onChange: () => {},\n        ariaLabel: \"Header demo tabs (brand underline)\",\n        size: \"md\",\n      }}\n      sticky={false}\n      topClassName=\"top-0\"\n    >\n      <p className=\"text-ui text-muted-foreground\">\n        Viewing\n        <span className=\"ml-[var(--space-1)] font-medium text-foreground\">\n          Summary\n        </span>\n      </p>\n    </Header>\n    <div className=\"mt-[var(--space-4)] grid gap-[var(--space-3)] sm:grid-cols-2\">\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Next milestone</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Launch sprint\n        </p>\n      </div>\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Team focus</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Deep work block\n        </p>\n      </div>\n    </div>\n  </div>\n</div>",
          "preview": {
            "id": "ui:header:tabs"
          }
        }
      ]
    },
    {
      "id": "page-header",
      "entries": [
        {
          "id": "neomorphic-hero-frame",
          "name": "NeomorphicHeroFrame",
          "description": "Composable neomorphic frame with semantic wrappers, tokenized spacing, and an action row for tabs, search, and buttons.",
          "tags": [
            "hero",
            "layout",
            "tokens"
          ],
          "kind": "component",
          "code": "<NeomorphicHeroFrame\n  as=\"header\"\n  slots={{\n    tabs: {\n      node: (\n        <TabBar\n          items={[\n            { key: \"missions\", label: \"Missions\" },\n            { key: \"briefings\", label: \"Briefings\" },\n            { key: \"archive\", label: \"Archive\", disabled: true },\n          ]}\n          value=\"missions\"\n          onValueChange={() => {}}\n          ariaLabel=\"Switch mission focus\"\n          showBaseline\n        />\n      ),\n      label: \"Switch mission focus\",\n    },\n    search: {\n      node: (\n        <SearchBar\n          value=\"\"\n          onValueChange={() => {}}\n          placeholder=\"Search mission intel…\"\n          aria-label=\"Search mission intel\"\n          loading\n        />\n      ),\n      label: \"Search mission intel\",\n    },\n    actions: {\n      node: (\n        <div className=\"flex items-center gap-[var(--space-2)]\">\n          <ThemeToggle ariaLabel=\"Toggle theme\" className=\"shrink-0\" />\n          <Button size=\"sm\" variant=\"primary\" loading>\n            Deploy\n          </Button>\n          <Button size=\"sm\" variant=\"ghost\" disabled>\n            Disabled\n          </Button>\n        </div>\n      ),\n      label: \"Mission quick actions\",\n    },\n  }}\n>\n  <HeroGrid>\n    <HeroCol span={7} className=\"space-y-[var(--space-3)]\">\n      <p className=\"text-ui text-muted-foreground\">\n        Default variant uses r-card-lg radius with px-6/md:px-7/lg:px-8 tokens and aligns content to the 12-column grid.\n      </p>\n    </HeroCol>\n  </HeroGrid>\n</NeomorphicHeroFrame>\n\n<NeomorphicHeroFrame as=\"nav\" variant=\"compact\" align=\"between\">\n  <HeroGrid variant=\"compact\">\n    <HeroCol span={6}>\n      <p className=\"text-ui text-muted-foreground\">\n        Compact variant swaps to r-card-md radius with px-4/md:px-5/lg:px-6 spacing.\n      </p>\n    </HeroCol>\n  </HeroGrid>\n</NeomorphicHeroFrame>",
          "preview": {
            "id": "prompts:page-header:neomorphic-hero-frame"
          },
          "states": [
            {
              "id": "hero-tabs-hover",
              "name": "Tabs — Hover",
              "description": "Simulated hover applies the shadow-neo-soft token to lift the inactive hero tab without changing selection.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      {\n        key: \"briefings\",\n        label: \"Briefings\",\n        className: \"shadow-neo-soft\",\n      },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Preview hero tabs hover\"\n    variant=\"neo\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-hover"
              }
            },
            {
              "id": "hero-tabs-focus",
              "name": "Tabs — Focus-visible",
              "description": "Focus preview layers the standard neon ring with shadow-neo-soft so the active hero tab reads clearly for keyboard users.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      {\n        key: \"missions\",\n        label: \"Missions\",\n        className:\n          \"shadow-neo-soft ring-2 ring-[hsl(var(--ring))] ring-offset-2 ring-offset-[hsl(var(--card)/0.72)]\",\n      },\n      { key: \"briefings\", label: \"Briefings\" },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Preview hero tabs focus\"\n    variant=\"neo\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-focus"
              }
            },
            {
              "id": "hero-tabs-loading",
              "name": "Tabs — Loading",
              "description": "Loading state taps the built-in spinner and keeps the hovered glow via shadow-neo-soft while data syncs.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      {\n        key: \"briefings\",\n        label: \"Briefings\",\n        loading: true,\n        className: \"shadow-neo-soft\",\n      },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Preview hero tabs loading\"\n    variant=\"neo\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-loading"
              }
            }
          ]
        },
        {
          "id": "page-header-demo",
          "name": "PageHeader",
          "description": "Neomorphic hero header that defaults to a calm single-frame layout, forwards standard HTML attributes, and can be remapped with the as prop.",
          "tags": [
            "hero",
            "header"
          ],
          "kind": "component",
          "code": "<PageHeaderDemo />",
          "preview": {
            "id": "prompts:page-header:page-header-demo"
          },
          "states": [
            {
              "id": "page-header-search-focus",
              "name": "Search — Focus-visible",
              "description": "Focus ring pairs with shadow-neo-soft on the search field so keyboard focus mirrors the hero shell.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <SearchBar\n    value=\"mission intel\"\n    onValueChange={() => {}}\n    placeholder=\"Search mission intel…\"\n    aria-label=\"Search mission intel\"\n    fieldClassName=\"!shadow-neo-soft hover:!shadow-neo-soft active:!shadow-neo-soft ring-2 ring-[hsl(var(--ring))] ring-offset-2 ring-offset-[hsl(var(--bg))]\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:page-header-demo:state:page-header-search-focus"
              }
            },
            {
              "id": "page-header-search-loading",
              "name": "Search — Loading",
              "description": "Loading state mutes interactions and keeps the neo hover glow so progress is obvious without jitter.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <SearchBar\n    value=\"briefings\"\n    onValueChange={() => {}}\n    placeholder=\"Search mission intel…\"\n    aria-label=\"Search mission intel\"\n    loading\n    fieldClassName=\"!shadow-neo-soft hover:!shadow-neo-soft active:!shadow-neo-soft\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:page-header-demo:state:page-header-search-loading"
              }
            },
            {
              "id": "page-header-search-disabled",
              "name": "Search — Disabled",
              "description": "Disabled search keeps the field readable with reduced contrast while preserving the rounded neo shell.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <SearchBar\n    value=\"\"\n    onValueChange={() => {}}\n    placeholder=\"Search mission intel…\"\n    aria-label=\"Search mission intel\"\n    disabled\n    fieldClassName=\"!shadow-neo-soft hover:!shadow-neo-soft active:!shadow-neo-soft\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:page-header-demo:state:page-header-search-disabled"
              }
            }
          ]
        },
        {
          "id": "demo-header",
          "name": "DemoHeader",
          "description": "Composite header, hero, banner, and review highlights wired together for hand-off demos.",
          "tags": [
            "header",
            "hero",
            "layout"
          ],
          "kind": "component",
          "code": "function DemoHeaderShowcase() {\n  const [role, setRole] = React.useState(\"MID\");\n  const [fruit, setFruit] = React.useState(\"apple\");\n\n  return (\n    <DemoHeader\n      role={role}\n      onRoleChange={setRole}\n      fruit={fruit}\n      onFruitChange={setFruit}\n    />\n  );\n}",
          "preview": {
            "id": "prompts:page-header:demo-header"
          },
          "states": [
            {
              "id": "demo-header-cta-hover",
              "name": "Primary CTA — Hover",
              "description": "Primary action lifts with shadow-neo-soft to reflect the hover state used across hero quick actions.",
              "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button size=\"sm\" variant=\"primary\" className=\"shadow-neo-soft\">\n    Launch event\n  </Button>\n</div>",
              "preview": {
                "id": "prompts:page-header:demo-header:state:demo-header-cta-hover"
              }
            },
            {
              "id": "demo-header-cta-focus",
              "name": "Primary CTA — Focus-visible",
              "description": "Focus-visible styling adds the shared neon ring on top of shadow-neo-soft so keyboard users get parity with hover.",
              "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button\n    size=\"sm\"\n    variant=\"primary\"\n    className=\"shadow-neo-soft ring-2 ring-[hsl(var(--ring))] ring-offset-2 ring-offset-[hsl(var(--card)/0.7)]\"\n  >\n    Focused deploy\n  </Button>\n</div>",
              "preview": {
                "id": "prompts:page-header:demo-header:state:demo-header-cta-focus"
              }
            },
            {
              "id": "demo-header-cta-loading",
              "name": "Primary CTA — Loading",
              "description": "Loading CTA keeps the raised hover shadow while dimming interactions so progress reads instantly.",
              "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button size=\"sm\" variant=\"primary\" loading className=\"shadow-neo-soft\">\n    Saving\n  </Button>\n</div>",
              "preview": {
                "id": "prompts:page-header:demo-header:state:demo-header-cta-loading"
              }
            },
            {
              "id": "demo-header-cta-disabled",
              "name": "Ghost CTA — Disabled",
              "description": "Disabled secondary action leans on the built-in opacity tokens so the hero still communicates availability clearly.",
              "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button size=\"sm\" variant=\"ghost\" disabled className=\"shadow-neo-soft\">\n    Disabled action\n  </Button>\n</div>",
              "preview": {
                "id": "prompts:page-header:demo-header:state:demo-header-cta-disabled"
              }
            }
          ]
        },
        {
          "id": "hero",
          "name": "Hero",
          "description": "Stacked hero shell with search and actions — default spacing plus frame-ready paddingless variant.",
          "tags": [
            "hero",
            "layout"
          ],
          "kind": "component",
          "code": "<Hero\n  heading=\"Hero\"\n  eyebrow=\"Eyebrow\"\n  subtitle=\"Subtitle\"\n  sticky={false}\n  search={{ value: \"\", onValueChange: () => {}, round: true }}\n  actions={<Button size=\"sm\">Action</Button>}\n>\n  <div className=\"text-ui text-muted-foreground\">Body content</div>\n</Hero>\n\n<NeomorphicHeroFrame variant=\"dense\">\n  <Hero\n    heading=\"Frame-ready hero\"\n    eyebrow=\"No padding\"\n    subtitle=\"Outer shell handles spacing\"\n    sticky={false}\n    tone=\"supportive\"\n    frame={false}\n    rail={false}\n    padding=\"none\"\n  >\n    <div className=\"text-ui text-muted-foreground\">Body content</div>\n  </Hero>\n</NeomorphicHeroFrame>",
          "preview": {
            "id": "prompts:page-header:hero"
          },
          "states": [
            {
              "id": "hero-tabs-selected",
              "name": "Sub tabs — Selected",
              "description": "Active hero tab uses the accent gradient while shadow-neo-soft keeps the pill lifted inside the frame.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      {\n        key: \"briefings\",\n        label: \"Briefings\",\n        className: \"shadow-neo-soft\",\n      },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"briefings\"\n    onValueChange={() => {}}\n    ariaLabel=\"Hero sub tab selected preview\"\n    variant=\"neo\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:hero:state:hero-tabs-selected"
              }
            },
            {
              "id": "hero-tabs-disabled",
              "name": "Sub tabs — Disabled",
              "description": "Disabled hero tab inherits the dimmed opacity tokens while the rest of the bar keeps the neo hover treatment.",
              "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      { key: \"briefings\", label: \"Briefings\" },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Hero sub tab disabled preview\"\n    variant=\"neo\"\n  />\n</div>",
              "preview": {
                "id": "prompts:page-header:hero:state:hero-tabs-disabled"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "feedback",
      "entries": [
        {
          "id": "progress",
          "name": "Progress",
          "tags": [
            "progress"
          ],
          "kind": "primitive",
          "code": "<Progress value={33} />",
          "preview": {
            "id": "prompts:feedback:progress"
          }
        },
        {
          "id": "outline-glow",
          "name": "OutlineGlowDemo",
          "description": "Focus ring glow tokens and disabled outline states.",
          "tags": [
            "focus",
            "state",
            "demo"
          ],
          "kind": "primitive",
          "code": "<div className=\"flex gap-[var(--space-2)]\">\n  <button\n    type=\"button\"\n    className=\"inline-flex items-center justify-center rounded-card r-card-md border px-[var(--space-3)] py-[var(--space-2)] [--focus:var(--focus)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)] hover:bg-surface-2 active:bg-surface\"\n  >\n    Focus me to see the glow\n  </button>\n  <button\n    type=\"button\"\n    disabled\n    className=\"inline-flex items-center justify-center rounded-card r-card-md border px-[var(--space-3)] py-[var(--space-2)] [--focus:var(--focus)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)] hover:bg-surface-2 active:bg-surface disabled:cursor-not-allowed\"\n  >\n    Disabled example\n  </button>\n</div>",
          "preview": {
            "id": "prompts:feedback:outline-glow"
          }
        },
        {
          "id": "snackbar",
          "name": "Snackbar",
          "tags": [
            "snackbar",
            "feedback"
          ],
          "kind": "primitive",
          "code": "<Snackbar message=\"Saved\" actionLabel=\"Undo\" onAction={() => {}} />",
          "preview": {
            "id": "prompts:feedback:snackbar"
          }
        },
        {
          "id": "toast-demo",
          "name": "Toast",
          "tags": [
            "toast",
            "feedback"
          ],
          "kind": "primitive",
          "code": "<Button size=\"sm\">Show</Button>\n<Toast open closable showProgress><p className=\"text-ui\">Toast message</p></Toast>",
          "preview": {
            "id": "prompts:feedback:toast-demo"
          }
        },
        {
          "id": "skeleton",
          "name": "Skeleton",
          "description": "Shimmer placeholder for loading layouts.",
          "tags": [
            "skeleton",
            "loading",
            "feedback"
          ],
          "kind": "primitive",
          "code": "<div className=\"space-y-2\">\n  <Skeleton\n    ariaHidden={false}\n    role=\"status\"\n    aria-label=\"Loading primary title\"\n    className=\"h-6 w-2/5 sm:w-1/3\"\n    radius=\"card\"\n  />\n  <Skeleton className=\"w-3/4\" />\n  <Skeleton radius=\"full\" className=\"h-10 w-10\" />\n</div>",
          "preview": {
            "id": "prompts:feedback:skeleton"
          }
        },
        {
          "id": "spinner",
          "name": "Spinner",
          "tags": [
            "spinner",
            "loading"
          ],
          "kind": "primitive",
          "code": "<Spinner size=\"xl\" />",
          "preview": {
            "id": "prompts:feedback:spinner"
          }
        }
      ]
    },
    {
      "id": "toggles",
      "entries": [
        {
          "id": "toggle",
          "name": "Toggle",
          "tags": [
            "toggle"
          ],
          "kind": "primitive",
          "code": "const [value, setValue] = React.useState<\"Left\" | \"Right\">(\"Left\");\n<Toggle value={value} onChange={setValue} />",
          "preview": {
            "id": "prompts:toggles:toggle"
          }
        },
        {
          "id": "animation-toggle",
          "name": "AnimationToggle",
          "tags": [
            "toggle",
            "animation"
          ],
          "kind": "primitive",
          "code": "<AnimationToggle />\n<AnimationToggle loading />",
          "preview": {
            "id": "prompts:toggles:animation-toggle"
          }
        },
        {
          "id": "check-circle",
          "name": "CheckCircle",
          "tags": [
            "checkbox",
            "toggle"
          ],
          "kind": "primitive",
          "code": "<CheckCircle\n  aria-label=\"Enable notifications\"\n  checked={false}\n  onChange={() => {}}\n  size=\"md\"\n/>\n<CheckCircle\n  aria-label=\"Enable notifications\"\n  checked\n  onChange={() => {}}\n  size=\"md\"\n/>",
          "preview": {
            "id": "prompts:toggles:check-circle"
          }
        },
        {
          "id": "tab-bar",
          "name": "TabBar",
          "description": "Segmented tab navigation with preset variants",
          "kind": "primitive",
          "tags": [
            "tabs",
            "navigation"
          ],
          "axes": [
            {
              "id": "variant",
              "label": "Variant",
              "type": "variant",
              "values": [
                {
                  "value": "Filters"
                },
                {
                  "value": "Default"
                },
                {
                  "value": "Navigation"
                }
              ]
            },
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<TabBar\n  items={[\n    { key: \"all\", label: \"All\", icon: <Circle aria-hidden=\"true\" /> },\n    { key: \"active\", label: \"Active\", icon: <CircleDot aria-hidden=\"true\" /> },\n    { key: \"done\", label: \"Done\", icon: <CircleCheck aria-hidden=\"true\" /> },\n    {\n      key: \"focus\",\n      label: \"Focus-visible\",\n      icon: <Circle aria-hidden=\"true\" />,\n      className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\",\n    },\n  ]}\n  value=\"active\"\n  onValueChange={() => {}}\n  ariaLabel=\"Filter goals\"\n/>\n\n<TabBar\n  items={[\n    { key: \"a\", label: \"A\" },\n    { key: \"b\", label: \"B\" },\n    { key: \"focus\", label: \"Focus-visible\", className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\" },\n    { key: \"c\", label: \"Disabled\", disabled: true },\n    { key: \"d\", label: \"Syncing\", loading: true },\n  ]}\n  value=\"a\"\n  onValueChange={() => {}}\n  ariaLabel=\"Example tabs\"\n/>\n\n<TabBar\n  items={[\n    { key: \"reviews\", label: \"Reviews\" },\n    { key: \"planner\", label: \"Planner\" },\n    { key: \"goals\", label: \"Goals\" },\n    { key: \"focus\", label: \"Focus-visible\", className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\" },\n  ]}\n  value=\"reviews\"\n  onValueChange={() => {}}\n  ariaLabel=\"Planner areas\"\n/>",
          "preview": {
            "id": "ui:tab-bar:variants"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"upcoming\", label: \"Upcoming\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
              "preview": {
                "id": "ui:tab-bar:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"hover\", label: \"Hover\", className: \"text-foreground bg-[--hover] shadow-[var(--tab-shadow-hover,var(--tab-shadow))]\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
              "preview": {
                "id": "ui:tab-bar:state:hover"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"active\", label: \"Active\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"active\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
              "preview": {
                "id": "ui:tab-bar:state:active"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"focus\", label: \"Focus-visible\", className: \"outline-[var(--spacing-0-5)_solid_var(--ring-contrast)] outline-offset-[var(--spacing-0-5)] ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)]\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
              "preview": {
                "id": "ui:tab-bar:state:focus-visible"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"disabled\", label: \"Disabled\", disabled: true },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
              "preview": {
                "id": "ui:tab-bar:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"loading\", label: \"Loading\", loading: true },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
              "preview": {
                "id": "ui:tab-bar:state:loading"
              }
            }
          ]
        },
        {
          "id": "tabs",
          "name": "Tabs",
          "description": "Context provider that links TabList controls with TabPanel content.",
          "kind": "primitive",
          "tags": [
            "tabs",
            "navigation"
          ],
          "axes": [
            {
              "id": "layout",
              "label": "Layout",
              "type": "variant",
              "values": [
                {
                  "value": "Panels"
                },
                {
                  "value": "Controlled list"
                }
              ]
            },
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Active"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<Tabs defaultValue=\"overview\">\n  <div className=\"space-y-[var(--space-3)]\">\n    <TabList\n      items={[\n        { key: \"overview\", label: \"Overview\" },\n        { key: \"activity\", label: \"Activity\" },\n        { key: \"files\", label: \"Files\" },\n      ]}\n      ariaLabel=\"Project sections\"\n    />\n    <TabPanel value=\"overview\">\n      <Card className=\"space-y-[var(--space-2)]\">\n        <p className=\"text-title font-semibold tracking-[-0.01em]\">Overview</p>\n        <p className=\"text-ui text-muted-foreground\">\n          Keep a high-level summary of the plan visible for the team.\n        </p>\n      </Card>\n    </TabPanel>\n    <TabPanel value=\"activity\">\n      <Card className=\"space-y-[var(--space-2)]\">\n        <p className=\"text-title font-semibold tracking-[-0.01em]\">Activity</p>\n        <p className=\"text-ui text-muted-foreground\">\n          Show chronological activity without leaving the workspace.\n        </p>\n      </Card>\n    </TabPanel>\n    <TabPanel value=\"files\">\n      <Card className=\"space-y-[var(--space-2)]\">\n        <p className=\"text-title font-semibold tracking-[-0.01em]\">Files</p>\n        <p className=\"text-ui text-muted-foreground\">\n          Store briefs, shared assets, and notes alongside the plan.\n        </p>\n      </Card>\n    </TabPanel>\n  </div>\n</Tabs>\n\n<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <div className=\"space-y-[var(--space-3)]\">\n    <TabList\n      ariaLabel=\"Notification filters\"\n      items={[\n        { key: \"inbox\", label: \"Inbox\" },\n        {\n          key: \"updates\",\n          label: \"Updates\",\n          className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\",\n        },\n        { key: \"archive\", label: \"Archive\" },\n        { key: \"disabled\", label: \"Disabled\", disabled: true },\n        { key: \"sync\", label: \"Syncing\", loading: true },\n      ]}\n      linkPanels={false}\n      showBaseline\n    />\n    <Card className=\"text-ui text-muted-foreground\">\n      Active tab: <span className=\"font-medium text-foreground\">Inbox</span>\n    </Card>\n  </div>\n</Tabs>",
          "preview": {
            "id": "ui:tabs:wiring"
          },
          "states": [
            {
              "id": "active",
              "name": "Active",
              "code": "<Tabs value=\"updates\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      { key: \"updates\", label: \"Updates\" },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
              "preview": {
                "id": "ui:tabs:state:active"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      {\n        key: \"updates\",\n        label: \"Updates\",\n        className: \"text-foreground bg-[--hover] shadow-[var(--tab-shadow-hover,var(--tab-shadow))]\",\n      },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
              "preview": {
                "id": "ui:tabs:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      {\n        key: \"updates\",\n        label: \"Updates\",\n        className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\",\n      },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
              "preview": {
                "id": "ui:tabs:state:focus-visible"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      { key: \"disabled\", label: \"Disabled\", disabled: true },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
              "preview": {
                "id": "ui:tabs:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      { key: \"sync\", label: \"Syncing\", loading: true },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
              "preview": {
                "id": "ui:tabs:state:loading"
              }
            }
          ]
        },
        {
          "id": "toggle",
          "name": "Toggle",
          "description": "Binary switch with hover, focus, active, disabled, and loading states",
          "kind": "primitive",
          "tags": [
            "toggle",
            "switch"
          ],
          "props": [
            {
              "name": "leftLabel",
              "type": "string"
            },
            {
              "name": "rightLabel",
              "type": "string"
            },
            {
              "name": "value",
              "type": "\"Left\" | \"Right\"",
              "defaultValue": "\"Left\""
            },
            {
              "name": "onChange",
              "type": "(value: \"Left\" | \"Right\") => void"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "loading",
              "type": "boolean",
              "defaultValue": "false"
            },
            {
              "name": "className",
              "type": "string"
            }
          ],
          "axes": [
            {
              "id": "state",
              "label": "State",
              "type": "state",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "Hover"
                },
                {
                  "value": "Focus-visible"
                },
                {
                  "value": "Active"
                },
                {
                  "value": "Disabled"
                },
                {
                  "value": "Loading"
                }
              ]
            }
          ],
          "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <Toggle leftLabel=\"Strategy\" rightLabel=\"Execute\" />\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-hover-surface]\" />\n    <Toggle\n      leftLabel=\"Left\"\n      rightLabel=\"Right\"\n      className=\"ring-2 ring-[var(--toggle-focus-ring)] ring-offset-2 ring-offset-[var(--surface-2)] shadow-[var(--toggle-focus-glow)] focus-visible:ring-2 focus-visible:ring-[var(--toggle-focus-ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--surface-2)]\"\n    />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-active-surface]\" />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" disabled />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" loading />\n  </div>\n</div>",
          "preview": {
            "id": "ui:toggle:interactive"
          },
          "states": [
            {
              "id": "default",
              "name": "Default",
              "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" />",
              "preview": {
                "id": "ui:toggle:state:default"
              }
            },
            {
              "id": "hover",
              "name": "Hover",
              "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-hover-surface]\" />",
              "preview": {
                "id": "ui:toggle:state:hover"
              }
            },
            {
              "id": "focus-visible",
              "name": "Focus-visible",
              "code": "<Toggle\n  leftLabel=\"Left\"\n  rightLabel=\"Right\"\n  className=\"ring-2 ring-[var(--toggle-focus-ring)] ring-offset-2 ring-offset-[var(--surface-2)] shadow-[var(--toggle-focus-glow)] focus-visible:ring-2 focus-visible:ring-[var(--toggle-focus-ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--surface-2)]\"\n/>",
              "preview": {
                "id": "ui:toggle:state:focus-visible"
              }
            },
            {
              "id": "active",
              "name": "Active",
              "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-active-surface]\" />",
              "preview": {
                "id": "ui:toggle:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" disabled />",
              "preview": {
                "id": "ui:toggle:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" loading />",
              "preview": {
                "id": "ui:toggle:state:loading"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "homepage",
      "entries": [
        {
          "id": "dashboard-card",
          "name": "DashboardCard",
          "tags": [
            "dashboard",
            "card"
          ],
          "kind": "complex",
          "code": "<DashboardCard title=\"Demo\" />",
          "preview": {
            "id": "prompts:homepage:dashboard-card"
          }
        },
        {
          "id": "dashboard-list",
          "name": "DashboardList",
          "tags": [
            "dashboard",
            "list"
          ],
          "kind": "complex",
          "code": "<DashboardList\n  items={[\n    { id: \"sync\", title: \"Strategy sync\", meta: \"Today\" },\n    { id: \"retro\", title: \"Retro prep\", meta: \"Wed\" },\n  ]}\n  getKey={(item) => item.id}\n  itemClassName=\"flex justify-between text-ui\"\n  empty=\"No highlights\"\n  renderItem={(item) => (\n    <>\n      <span>{item.title}</span>\n      <span className=\"text-label text-muted-foreground\">{item.meta}</span>\n    </>\n  )}\n/>",
          "preview": {
            "id": "prompts:homepage:dashboard-list"
          }
        },
        {
          "id": "isometric-room",
          "name": "IsometricRoom",
          "tags": [
            "room",
            "3d"
          ],
          "kind": "complex",
          "code": "<IsometricRoom variant=\"aurora\" />",
          "preview": {
            "id": "prompts:homepage:isometric-room"
          }
        },
        {
          "id": "quick-action-grid",
          "name": "QuickActionGrid",
          "description": "Maps quick action configs to styled planner shortcuts",
          "tags": [
            "actions",
            "planner"
          ],
          "kind": "complex",
          "code": "<QuickActionGrid\n  actions={[\n    { href: \"/planner\", label: \"Planner Today\" },\n    { href: \"/goals\", label: \"New Goal\", tone: \"accent\" },\n    { href: \"/reviews\", label: \"New Review\", tone: \"accent\" },\n  ]}\n  layout=\"inline\"\n  buttonSize=\"lg\"\n  hoverLift\n/>",
          "preview": {
            "id": "prompts:homepage:quick-action-grid"
          }
        },
        {
          "id": "hero-planner-cards",
          "name": "HeroPlannerCards",
          "description": "Composite hero surface combining quick actions, overview metrics, and planner highlights for the landing page.",
          "tags": [
            "planner",
            "homepage",
            "hero"
          ],
          "kind": "complex",
          "code": "<SectionCard aria-labelledby=\"planner-overview-heading\">\n  <SectionCard.Header\n    id=\"planner-overview-heading\"\n    sticky={false}\n    title=\"Planner overview\"\n    titleAs=\"h2\"\n    titleClassName=\"text-title font-semibold tracking-[-0.01em]\"\n  />\n  <SectionCard.Body>\n    <HeroPlannerCards\n      variant=\"aurora\"\n      plannerOverviewProps={plannerOverviewProps}\n      highlights={weeklyHighlights}\n    />\n  </SectionCard.Body>\n</SectionCard>",
          "preview": {
            "id": "prompts:homepage:hero-planner-cards"
          }
        },
        {
          "id": "hero-portrait-frame",
          "name": "HeroPortraitFrame",
          "description": "Circular neumorphic portrait frame with lavender glow, glitch accent rim, and configurable `frame` toggle built from semantic tokens.",
          "tags": [
            "hero",
            "portrait",
            "glitch"
          ],
          "kind": "complex",
          "code": "<div className=\"flex flex-wrap items-center justify-center gap-[var(--space-3)]\">\n  <HeroPortraitFrame\n    imageSrc=\"/hero_image.png\"\n    imageAlt=\"Illustration of the Planner hero floating above a holographic dashboard with full frame treatment\"\n  />\n  <HeroPortraitFrame\n    frame={false}\n    imageSrc=\"/hero_image.png\"\n    imageAlt=\"Illustration of the Planner hero floating above a holographic dashboard without frame treatment\"\n  />\n</div>",
          "preview": {
            "id": "prompts:homepage:hero-portrait-frame"
          }
        },
        {
          "id": "welcome-hero-figure",
          "name": "WelcomeHeroFigure",
          "description": "Hero automation figure framed in a haloed neumorphic ring with eager loading tuned for the landing experience.",
          "tags": [
            "hero",
            "figure",
            "neomorphic"
          ],
          "kind": "complex",
          "code": "<WelcomeHeroFigure />",
          "preview": {
            "id": "prompts:homepage:welcome-hero-figure"
          }
        }
      ]
    },
    {
      "id": "reviews",
      "entries": [
        {
          "id": "review-surface",
          "name": "ReviewSurface",
          "tags": [
            "review",
            "surface"
          ],
          "kind": "complex",
          "code": "<div className=\"w-[calc(var(--space-8)*3.5)]\">\n  <ReviewSurface padding=\"md\" tone=\"muted\">\n    <div className=\"text-ui text-foreground/70\">Surface content</div>\n  </ReviewSurface>\n</div>",
          "preview": {
            "id": "prompts:reviews:review-surface"
          }
        },
        {
          "id": "review-slider-track",
          "name": "ReviewSliderTrack",
          "tags": [
            "review",
            "slider"
          ],
          "kind": "complex",
          "code": "<div className=\"w-[calc(var(--space-8)*3.5)]\">\n  <ReviewSurface padding=\"inline\" className=\"relative h-[var(--control-h-lg)]\">\n    <ReviewSliderTrack value={7} tone=\"score\" variant=\"input\" />\n  </ReviewSurface>\n</div>",
          "preview": {
            "id": "prompts:reviews:review-slider-track"
          }
        },
        {
          "id": "score-meter",
          "name": "ScoreMeter",
          "tags": [
            "review",
            "slider",
            "summary"
          ],
          "kind": "complex",
          "code": "<div className=\"w-[calc(var(--space-8)*3.5)]\">\n  <ScoreMeter\n    label=\"Score\"\n    value={8}\n    detail={<span>Great positioning</span>}\n  />\n</div>",
          "preview": {
            "id": "prompts:reviews:score-meter"
          }
        },
        {
          "id": "review-list-item",
          "name": "ReviewListItem",
          "tags": [
            "review",
            "list"
          ],
          "kind": "complex",
          "code": "<ReviewListItem review={demoReview} />",
          "preview": {
            "id": "prompts:reviews:review-list-item"
          }
        },
        {
          "id": "lane-opponent-form",
          "name": "LaneOpponentForm",
          "tags": [
            "lane",
            "opponent"
          ],
          "kind": "complex",
          "code": "<LaneOpponentForm lane=\"Ashe/Lulu\" opponent=\"Draven/Thresh\" commitMeta={() => {}} />",
          "preview": {
            "id": "prompts:reviews:lane-opponent-form"
          }
        },
        {
          "id": "result-score-section",
          "name": "ResultScoreSection",
          "tags": [
            "result",
            "score"
          ],
          "kind": "complex",
          "code": "<ResultScoreSection result=\"Win\" score={5} commitMeta={() => {}} />",
          "preview": {
            "id": "prompts:reviews:result-score-section"
          }
        },
        {
          "id": "pillars-selector",
          "name": "PillarsSelector",
          "tags": [
            "pillars",
            "selector"
          ],
          "kind": "complex",
          "code": "<PillarsSelector pillars={[]} commitMeta={() => {}} />",
          "preview": {
            "id": "prompts:reviews:pillars-selector"
          }
        },
        {
          "id": "timestamp-markers",
          "name": "TimestampMarkers",
          "tags": [
            "timestamp",
            "marker"
          ],
          "kind": "complex",
          "code": "<TimestampMarkers markers={[]} commitMeta={() => {}} />",
          "preview": {
            "id": "prompts:reviews:timestamp-markers"
          }
        }
      ]
    },
    {
      "id": "goals",
      "entries": [
        {
          "id": "goals-progress",
          "name": "GoalsProgress",
          "tags": [
            "goals",
            "progress"
          ],
          "kind": "complex",
          "code": "<GoalsProgress total={3} pct={50} />",
          "preview": {
            "id": "prompts:goals:goals-progress"
          }
        },
        {
          "id": "goal-list-demo",
          "name": "GoalListDemo",
          "tags": [
            "goal",
            "list"
          ],
          "kind": "complex",
          "code": "<GoalListDemo />",
          "preview": {
            "id": "prompts:goals:goal-list-demo"
          }
        },
        {
          "id": "reminders-tab",
          "name": "RemindersTab",
          "tags": [
            "reminders",
            "tab"
          ],
          "kind": "complex",
          "code": "<RemindersProvider>\n  <RemindersTab />\n</RemindersProvider>",
          "preview": {
            "id": "prompts:goals:reminders-tab"
          }
        },
        {
          "id": "timer-ring",
          "name": "TimerRing",
          "tags": [
            "timer",
            "ring"
          ],
          "kind": "complex",
          "code": "<TimerRing pct={42} size=\"l\" />",
          "preview": {
            "id": "prompts:goals:timer-ring"
          }
        },
        {
          "id": "timer-tab",
          "name": "TimerTab",
          "tags": [
            "timer",
            "tab"
          ],
          "kind": "complex",
          "code": "<TimerTab />",
          "preview": {
            "id": "prompts:goals:timer-tab"
          }
        },
        {
          "id": "progress-ring-icon",
          "name": "ProgressRingIcon",
          "tags": [
            "icon",
            "progress"
          ],
          "kind": "complex",
          "code": "<ProgressRingIcon pct={50} size=\"m\" />",
          "preview": {
            "id": "prompts:goals:progress-ring-icon"
          }
        },
        {
          "id": "timer-ring-icon",
          "name": "TimerRingIcon",
          "tags": [
            "icon",
            "timer"
          ],
          "kind": "complex",
          "code": "<TimerRingIcon pct={75} size=\"l\" />",
          "preview": {
            "id": "prompts:goals:timer-ring-icon"
          }
        }
      ]
    },
    {
      "id": "team",
      "entries": [
        {
          "id": "side-selector",
          "name": "SideSelector",
          "tags": [
            "side",
            "selector"
          ],
          "kind": "complex",
          "code": "<SideSelector />\n<SideSelector disabled />",
          "preview": {
            "id": "prompts:team:side-selector"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "The accent hover wash previews the flicker animation for pointer users before they commit to a side.",
              "code": "<SideSelector\n  value=\"Blue\"\n  onChange={() => {}}\n  className=\"bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:team:side-selector:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "Press Tab to land on the switch. The ring token outlines the control while Space/Enter flip teams and ← → choose Blue or Red directly.",
              "code": "<SideSelector\n  value=\"Blue\"\n  onChange={() => {}}\n  className=\"ring-2 ring-[var(--ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
              "preview": {
                "id": "prompts:team:side-selector:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "Selecting Red slides the indicator and lights the right label. Space toggles sides, and the arrow keys jump the indicator without flicker.",
              "code": "<SideSelector value=\"Red\" onChange={() => {}} />",
              "preview": {
                "id": "prompts:team:side-selector:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "The disabled opacity token keeps the rail visible while blocking Space, Enter, and arrow key input during lockouts.",
              "code": "<SideSelector value=\"Blue\" onChange={() => {}} disabled />",
              "preview": {
                "id": "prompts:team:side-selector:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "description": "While matchup data syncs, loading dims the selector and ignores toggles until the request resolves.",
              "code": "<SideSelector value=\"Blue\" onChange={() => {}} loading />",
              "preview": {
                "id": "prompts:team:side-selector:state:loading"
              }
            }
          ]
        },
        {
          "id": "champ-list-editor",
          "name": "ChampListEditor",
          "description": "Shared champion list editor with toggleable state.",
          "tags": [
            "champion",
            "editor"
          ],
          "kind": "complex",
          "code": "<ChampListEditor\n  list={list}\n  onChange={setList}\n  editing={editing}\n  emptyLabel=\"-\"\n  viewClassName=\"champ-badges mt-[var(--space-1)] flex flex-wrap gap-[var(--space-2)]\"\n/>",
          "preview": {
            "id": "prompts:team:champ-list-editor"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "Hovering a badge in edit mode lifts it with the hover token so you can see which champion tag you are about to change.",
              "code": "<ChampListEditor\n  list={[\"Ashe\", \"Lulu\"]}\n  onChange={() => {}}\n  editing\n  pillClassName=\"bg-[--hover] border-ring\"\n/>",
              "preview": {
                "id": "prompts:team:champ-list-editor:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "Press Tab into the inline input to reveal the theme-ring outline; Enter creates a new slot and Backspace clears empty fields.",
              "code": "<ChampListEditor\n  list={[\"Ashe\", \"Lulu\"]}\n  onChange={() => {}}\n  editing\n  inputClassName=\"ring-2 ring-[var(--theme-ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
              "preview": {
                "id": "prompts:team:champ-list-editor:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / editing",
              "description": "Toggling editing exposes the glitch pill inputs so you can adjust the roster without leaving the review.",
              "code": "<ChampListEditor\n  list={[\"Ashe\", \"Lulu\"]}\n  onChange={() => {}}\n  editing\n/>",
              "preview": {
                "id": "prompts:team:champ-list-editor:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "When a session locks, wrap the editor in the disabled opacity token to freeze both pointer and keyboard edits.",
              "code": "<div className=\"pointer-events-none opacity-disabled\">\n  <ChampListEditor\n    list={[\"Ashe\", \"Lulu\"]}\n    onChange={() => {}}\n    editing\n  />\n</div>",
              "preview": {
                "id": "prompts:team:champ-list-editor:state:disabled"
              }
            }
          ]
        },
        {
          "id": "pillar-badge",
          "name": "PillarBadge",
          "tags": [
            "pillar",
            "badge"
          ],
          "kind": "complex",
          "code": "<PillarBadge pillar=\"Wave\" />\n<PillarBadge pillar=\"Trading\" active />",
          "preview": {
            "id": "prompts:team:pillar-badge"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "Interactive badges lift with the neo shadow token on hover so the chip reads as clickable before you tap.",
              "code": "<PillarBadge\n  pillar=\"Vision\"\n  interactive\n  className=\"shadow-neo-strong\"\n/>",
              "preview": {
                "id": "prompts:team:pillar-badge:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "Press Tab to move onto a badge; the theme ring outline appears and Space or Enter toggles its active gradient.",
              "code": "<PillarBadge\n  pillar=\"Vision\"\n  interactive\n  className=\"ring-2 ring-[var(--theme-ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
              "preview": {
                "id": "prompts:team:pillar-badge:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "Active badges glow with the gradient overlay while `aria-pressed` stays in sync for assistive tech.",
              "code": "<PillarBadge pillar=\"Vision\" interactive active />",
              "preview": {
                "id": "prompts:team:pillar-badge:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "Disable the badge when the underlying pillar cannot change; opacity and pointer locks communicate the frozen state.",
              "code": "<PillarBadge pillar=\"Vision\" interactive disabled />",
              "preview": {
                "id": "prompts:team:pillar-badge:state:disabled"
              }
            }
          ]
        },
        {
          "id": "pillar-selector",
          "name": "PillarSelector",
          "tags": [
            "pillar",
            "selector"
          ],
          "kind": "complex",
          "code": "<PillarSelector />",
          "preview": {
            "id": "prompts:team:pillar-selector"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "Hovering a chip raises the group with the soft neo shadow so the upcoming selection is obvious to pointer users.",
              "code": "<PillarSelector\n  className=\"rounded-card p-[var(--space-2)] shadow-[var(--shadow-neo-soft)]\"\n/>",
              "preview": {
                "id": "prompts:team:pillar-selector:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "Press Tab to focus the selector; the ring token outlines the tray while Space toggles the focused badge and arrow keys move between pillars.",
              "code": "<PillarSelector\n  className=\"rounded-card p-[var(--space-2)] ring-2 ring-[var(--ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
              "preview": {
                "id": "prompts:team:pillar-selector:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "Selected pillars glow with the gradient indicator; Space toggles the highlighted badge without collapsing the row.",
              "code": "<PillarSelector value={[\"Wave\", \"Trading\"]} />",
              "preview": {
                "id": "prompts:team:pillar-selector:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "Apply the disabled token when review notes are locked so neither pointer nor keyboard input can adjust pillars.",
              "code": "<PillarSelector className=\"pointer-events-none opacity-disabled\" />",
              "preview": {
                "id": "prompts:team:pillar-selector:state:disabled"
              }
            }
          ]
        },
        {
          "id": "role-selector",
          "name": "RoleSelector",
          "tags": [
            "role",
            "selector"
          ],
          "kind": "complex",
          "code": "<RoleSelector value={role} onChange={setRole} />",
          "preview": {
            "id": "prompts:team:role-selector"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "The segmented tray floats with the soft neon shadow on hover so the active lane stays anchored while exploring other roles.",
              "code": "<RoleSelector\n  value=\"MID\"\n  onChange={() => {}}\n  className=\"shadow-[var(--shadow-neo-soft)]\"\n/>",
              "preview": {
                "id": "prompts:team:role-selector:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "Press Tab to enter the segmented control; the focus token outlines the rail and arrow keys cycle lanes while Space or Enter confirms.",
              "code": "<RoleSelector\n  value=\"MID\"\n  onChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)] ring-offset-2 ring-offset-[var(--btn-bg)]\"\n/>",
              "preview": {
                "id": "prompts:team:role-selector:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "Choosing a lane slides the glitch indicator behind the tab and updates the polite live region for screen readers.",
              "code": "<RoleSelector value=\"BOT\" onChange={() => {}} />",
              "preview": {
                "id": "prompts:team:role-selector:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "Dim the control with the disabled opacity token when the review locks so neither pointer nor keyboard events change the selection.",
              "code": "<RoleSelector\n  value=\"MID\"\n  onChange={() => {}}\n  className=\"pointer-events-none opacity-disabled\"\n/>",
              "preview": {
                "id": "prompts:team:role-selector:state:disabled"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "components",
      "entries": [
        {
          "id": "theme-picker",
          "name": "ThemePicker",
          "tags": [
            "theme",
            "picker"
          ],
          "kind": "complex",
          "code": "<ThemePicker variant=\"lg\" onVariantChange={() => {}} />",
          "preview": {
            "id": "prompts:components:theme-picker"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "The shared hover token fills the trigger so pointer users preview the upcoming theme before selection.",
              "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-picker:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "Keyboard focus relies on the global `focus-visible` token, outlining the trigger without introducing extra wrappers.",
              "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)]\"\n  buttonClassName=\"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-picker:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "When the dropdown is open we pin the trigger with the shared active token so the current theme remains grounded.",
              "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  buttonClassName=\"bg-[--active] data-[open=true]:bg-[--active]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-picker:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "The disabled opacity token mutes the control and removes pointer events while preserving the theme label.",
              "code": "<ThemePicker variant=\"lg\" onVariantChange={() => {}} disabled />",
              "preview": {
                "id": "prompts:components:theme-picker:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "description": "List options can mark the active variant as loading to stream theme assets, showing the spinner token inside the dropdown.",
              "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  loadingVariant=\"lg\"\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-picker:state:loading"
              }
            }
          ]
        },
        {
          "id": "background-picker",
          "name": "BackgroundPicker",
          "tags": [
            "background",
            "picker"
          ],
          "kind": "complex",
          "code": "<BackgroundPicker bg={0} onBgChange={() => {}} />",
          "preview": {
            "id": "prompts:components:background-picker"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "The hover fill token mirrors ThemePicker so background previews share the same affordance pattern.",
              "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:background-picker:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "The `focus-visible` utility outlines the trigger directly, keeping the indicator consistent with other settings controls.",
              "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)]\"\n  buttonClassName=\"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n/>",
              "preview": {
                "id": "prompts:components:background-picker:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "While the menu is open we keep the active token applied so the current background is obvious as you explore options.",
              "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  buttonClassName=\"bg-[--active] data-[open=true]:bg-[--active]\"\n/>",
              "preview": {
                "id": "prompts:components:background-picker:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "Disabled opacity tokens dim the control and swatch preview while removing pointer affordances.",
              "code": "<BackgroundPicker bg={0} onBgChange={() => {}} disabled />",
              "preview": {
                "id": "prompts:components:background-picker:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "description": "When wallpapers stream in, the loading flag shows the spinner token beside the active swatch inside the dropdown.",
              "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  loadingBackground={0}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:background-picker:state:loading"
              }
            }
          ]
        },
        {
          "id": "settings-select",
          "name": "SettingsSelect",
          "tags": [
            "select",
            "settings"
          ],
          "kind": "complex",
          "code": "<div className=\"stack-sm\">\n  <SettingsSelect\n    ariaLabel=\"Theme\"\n    prefixLabel=\"Theme\"\n    items={[{ value: \"lg\", label: \"Glitch\" }]}\n    value=\"lg\"\n  />\n  <SettingsSelect\n    ariaLabel=\"Theme (disabled)\"\n    prefixLabel=\"Theme (disabled)\"\n    items={[{ value: \"lg\", label: \"Glitch\" }]}\n    value=\"lg\"\n    disabled\n  />\n</div>",
          "preview": {
            "id": "prompts:components:settings-select"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "Hover uses the shared token fill so every settings row communicates interactivity the same way.",
              "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }, { value: \"aurora\", label: \"Aurora\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:settings-select:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "`focus-visible` keeps the focus ring within the control, matching buttons and toggles in the settings column.",
              "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }, { value: \"aurora\", label: \"Aurora\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)]\"\n  buttonClassName=\"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n/>",
              "preview": {
                "id": "prompts:components:settings-select:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "An active dropdown keeps the trigger in the shared active fill so you never lose track of the selected row.",
              "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }, { value: \"aurora\", label: \"Aurora\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  buttonClassName=\"bg-[--active] data-[open=true]:bg-[--active]\"\n/>",
              "preview": {
                "id": "prompts:components:settings-select:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "The global disabled token desaturates the trigger and removes pointer events while keeping the label readable.",
              "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  disabled\n/>",
              "preview": {
                "id": "prompts:components:settings-select:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "description": "Individual options can stream data; marking one as loading reveals the spinner token beside the label in the dropdown.",
              "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[\n    { value: \"lg\", label: \"Glitch\", loading: true },\n    { value: \"aurora\", label: \"Aurora\" },\n  ]}\n  value=\"lg\"\n  onChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:settings-select:state:loading"
              }
            }
          ]
        },
        {
          "id": "theme-toggle",
          "name": "ThemeToggle",
          "tags": [
            "theme",
            "toggle"
          ],
          "kind": "complex",
          "code": "<ThemeToggle />",
          "preview": {
            "id": "prompts:components:theme-toggle"
          },
          "states": [
            {
              "id": "hover",
              "name": "Hover",
              "description": "Applying the hover token to the dropdown trigger keeps the toggle consistent with other select controls.",
              "code": "<ThemeToggle\n  className=\"[&_button[aria-haspopup='listbox']]:bg-[--hover] [&_button[aria-haspopup='listbox']]:hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-toggle:state:hover"
              }
            },
            {
              "id": "focus",
              "name": "Focus-visible",
              "description": "The nested `focus-visible` utility outlines the variant trigger without needing extra DOM wrappers.",
              "code": "<ThemeToggle\n  className=\"[&_button[aria-haspopup='listbox']]:outline-none [&_button[aria-haspopup='listbox']]:ring-2 [&_button[aria-haspopup='listbox']]:ring-[var(--focus)] focus-visible:[&_button[aria-haspopup='listbox']]:outline-none focus-visible:[&_button[aria-haspopup='listbox']]:ring-2 focus-visible:[&_button[aria-haspopup='listbox']]:ring-[var(--focus)]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-toggle:state:focus"
              }
            },
            {
              "id": "active",
              "name": "Active / selected",
              "description": "When the variant menu opens we swap to the shared active token so the current selection stays anchored.",
              "code": "<ThemeToggle\n  className=\"[&_button[aria-haspopup='listbox']]:bg-[--active] [&_button[aria-haspopup='listbox'][data-open='true']]:bg-[--active] [&_button[aria-haspopup='listbox']]:hover:bg-[--hover]\"\n/>",
              "preview": {
                "id": "prompts:components:theme-toggle:state:active"
              }
            },
            {
              "id": "disabled",
              "name": "Disabled",
              "description": "Disabling the control mutes both the cycle button and dropdown using the global disabled token.",
              "code": "<ThemeToggle\n  cycleDisabled\n  className=\"pointer-events-none opacity-disabled\"\n/>",
              "preview": {
                "id": "prompts:components:theme-toggle:state:disabled"
              }
            },
            {
              "id": "loading",
              "name": "Loading",
              "description": "Longer background transitions can show progress by enabling the built-in loading spinner on the cycle button.",
              "code": "<ThemeToggle cycleLoading />",
              "preview": {
                "id": "prompts:components:theme-toggle:state:loading"
              }
            }
          ]
        }
      ]
    },
    {
      "id": "misc",
      "entries": [
        {
          "id": "cat-companion",
          "name": "CatCompanion",
          "tags": [
            "cat",
            "companion"
          ],
          "kind": "component",
          "code": "<CatCompanion />",
          "preview": {
            "id": "prompts:misc:cat-companion"
          }
        }
      ]
    }
  ],
  "byKind": {
    "primitive": [
      {
        "id": "badge",
        "name": "Badge",
        "description": "Compact pill with tone-driven styles. Accent tones now meet ≥4.5:1 contrast for white content",
        "kind": "primitive",
        "tags": [
          "badge",
          "pill"
        ],
        "props": [
          {
            "name": "tone",
            "type": "\"neutral\" | \"primary\" | \"accent\" | \"top\" | \"jungle\" | \"mid\" | \"bot\" | \"support\"",
            "defaultValue": "\"neutral\""
          },
          {
            "name": "size",
            "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
            "defaultValue": "\"md\"",
            "description": "Use \"xs\" as an alias for \"sm\" when migrating legacy code."
          },
          {
            "name": "interactive",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "glitch",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "axes": [
          {
            "id": "tone",
            "label": "Tone",
            "type": "variant",
            "values": [
              {
                "value": "Neutral"
              },
              {
                "value": "Accent"
              },
              {
                "value": "Primary"
              },
              {
                "value": "Top lane"
              },
              {
                "value": "Jungle"
              },
              {
                "value": "Mid lane"
              },
              {
                "value": "Bot lane"
              },
              {
                "value": "Support"
              }
            ]
          },
          {
            "id": "size",
            "label": "Size",
            "type": "variant",
            "values": [
              {
                "value": "Small"
              },
              {
                "value": "Medium"
              },
              {
                "value": "Large"
              },
              {
                "value": "Extra large"
              }
            ]
          },
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Interactive"
              },
              {
                "value": "Selected"
              },
              {
                "value": "Disabled"
              }
            ]
          }
        ],
        "code": "<div className=\"flex flex-col gap-[var(--space-3)]\">\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Badge size=\"sm\">Small</Badge>\n    <Badge size=\"md\">Medium</Badge>\n    <Badge size=\"lg\">Large</Badge>\n    <Badge size=\"xl\">Extra large</Badge>\n  </div>\n  <p className=\"text-caption text-muted-foreground\">\n    <code>xs</code> is available as an alias of <code>sm</code> for legacy badges.\n  </p>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Badge tone=\"neutral\">Neutral</Badge>\n    <Badge tone=\"accent\">Accent</Badge>\n    <Badge tone=\"primary\">Primary</Badge>\n    <Badge tone=\"primary\" interactive selected>\n      Selected\n    </Badge>\n    <Badge tone=\"accent\" interactive disabled>\n      Disabled\n    </Badge>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Badge tone=\"top\" glitch>\n      Top lane\n    </Badge>\n    <Badge tone=\"jungle\" glitch>\n      Jungle\n    </Badge>\n    <Badge tone=\"mid\" glitch>\n      Mid lane\n    </Badge>\n    <Badge tone=\"bot\" glitch>\n      Bot lane\n    </Badge>\n    <Badge tone=\"support\" glitch>\n      Support\n    </Badge>\n  </div>\n</div>",
        "preview": {
          "id": "ui:badge:tones"
        }
      },
      {
        "id": "button",
        "name": "Button",
        "description": "Tone, size, icon placement, and interaction states",
        "kind": "primitive",
        "tags": [
          "button",
          "action"
        ],
        "props": [
          {
            "name": "variant",
            "type": "\"primary\" | \"secondary\" | \"ghost\""
          },
          {
            "name": "tone",
            "type": "\"primary\" | \"accent\" | \"info\" | \"danger\""
          },
          {
            "name": "size",
            "type": "\"sm\" | \"md\" | \"lg\" | \"xl\""
          },
          {
            "name": "loading",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "axes": [
          {
            "id": "tone",
            "label": "Tone",
            "type": "variant",
            "values": [
              {
                "value": "Primary"
              },
              {
                "value": "Accent"
              },
              {
                "value": "Info"
              },
              {
                "value": "Danger"
              }
            ]
          },
          {
            "id": "size",
            "label": "Size & icons",
            "type": "variant",
            "values": [
              {
                "value": "Small",
                "description": "Leading and trailing icons align to the small control gap."
              },
              {
                "value": "Medium",
                "description": "Leading and trailing icons align to the medium control gap."
              },
              {
                "value": "Large",
                "description": "Leading and trailing icons align to the large control gap."
              },
              {
                "value": "Extra large",
                "description": "Leading and trailing icons align to the extra large control gap."
              }
            ]
          },
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus"
              },
              {
                "value": "Active"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Button tone=\"primary\" variant=\"primary\">\n      Primary tone\n    </Button>\n    <Button tone=\"accent\" variant=\"primary\">\n      Accent tone\n    </Button>\n    <Button tone=\"info\" variant=\"ghost\">\n      Info ghost\n    </Button>\n    <Button tone=\"danger\" variant=\"primary\">\n      Danger primary\n    </Button>\n    <Button disabled>Disabled</Button>\n  </div>\n  <div className=\"space-y-[var(--space-2)]\">\n    <div className=\"grid grid-cols-[max-content_repeat(2,minmax(0,1fr))] gap-[var(--space-3)] text-label text-muted-foreground\">\n      <span className=\"sr-only\">Size</span>\n      <span>Leading icon</span>\n      <span>Trailing icon</span>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[var(--space-1)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Small</span>\n      <Button size=\"sm\">\n        <Plus aria-hidden />\n        Small\n      </Button>\n      <Button size=\"sm\">\n        Small\n        <Plus aria-hidden />\n      </Button>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[var(--space-2)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Medium</span>\n      <Button size=\"md\">\n        <Plus aria-hidden />\n        Medium\n      </Button>\n      <Button size=\"md\">\n        Medium\n        <Plus aria-hidden />\n      </Button>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[var(--space-4)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Large</span>\n      <Button size=\"lg\">\n        <Plus aria-hidden />\n        Large\n      </Button>\n      <Button size=\"lg\">\n        Large\n        <Plus aria-hidden />\n      </Button>\n    </div>\n    <div className=\"grid grid-cols-1 items-center gap-[calc(var(--control-h-xl)/3)] sm:grid-cols-[max-content_repeat(2,minmax(0,1fr))]\">\n      <span className=\"text-label text-muted-foreground sm:text-ui\">Extra large</span>\n      <Button size=\"xl\">\n        <Plus aria-hidden />\n        Extra large\n      </Button>\n      <Button size=\"xl\">\n        Extra large\n        <Plus aria-hidden />\n      </Button>\n    </div>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Button>Default</Button>\n    <Button className=\"bg-[--hover]\">Hover</Button>\n    <Button className=\"ring-2 ring-[var(--focus)]\">Focus</Button>\n    <Button className=\"bg-[--active]\">Active</Button>\n    <Button disabled>Disabled</Button>\n    <Button loading>Loading</Button>\n  </div>\n</div>",
        "preview": {
          "id": "ui:button:matrix"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<Button>Default</Button>",
            "preview": {
              "id": "ui:button:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<Button className=\"bg-[--hover]\">Hover</Button>",
            "preview": {
              "id": "ui:button:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus",
            "code": "<Button className=\"ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)] [outline:var(--spacing-0-5)_solid_var(--ring-contrast)] [outline-offset:var(--spacing-0-5)]\">Focus</Button>",
            "preview": {
              "id": "ui:button:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<Button className=\"bg-[--active]\">Active</Button>",
            "preview": {
              "id": "ui:button:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Button disabled>Disabled</Button>",
            "preview": {
              "id": "ui:button:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Button loading>Loading</Button>",
            "preview": {
              "id": "ui:button:state:loading"
            }
          }
        ]
      },
      {
        "id": "icon-button",
        "name": "IconButton",
        "description": "Size, variant, and state coverage",
        "kind": "primitive",
        "tags": [
          "button",
          "icon"
        ],
        "props": [
          {
            "name": "variant",
            "type": "\"primary\" | \"secondary\" | \"ghost\"",
            "description": "Visual treatment of the button. Choose \"ghost\", \"secondary\", or \"primary\"."
          },
          {
            "name": "size",
            "type": "\"sm\" | \"md\" | \"lg\" | \"xl\""
          },
          {
            "name": "loading",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "axes": [
          {
            "id": "variant",
            "label": "Variant",
            "type": "variant",
            "values": [
              {
                "value": "Ghost"
              },
              {
                "value": "Secondary"
              },
              {
                "value": "Primary"
              }
            ]
          },
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus"
              },
              {
                "value": "Active"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              },
              {
                "value": "Primary"
              },
              {
                "value": "Primary Hover"
              },
              {
                "value": "Primary Active"
              }
            ]
          }
        ],
        "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <IconButton size=\"sm\" variant=\"ghost\" aria-label=\"Add item sm\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"md\" variant=\"ghost\" aria-label=\"Add item md\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"lg\" variant=\"ghost\" aria-label=\"Add item lg\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"xl\" variant=\"ghost\" aria-label=\"Add item xl\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"md\" variant=\"secondary\" aria-label=\"Add item secondary\">\n      <Plus />\n    </IconButton>\n    <IconButton size=\"md\" variant=\"primary\" aria-label=\"Add item primary\">\n      <Plus />\n    </IconButton>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <IconButton aria-label=\"Default\">\n      <Plus />\n    </IconButton>\n    <IconButton className=\"bg-[--hover]\" aria-label=\"Hover\">\n      <Plus />\n    </IconButton>\n    <IconButton className=\"ring-2 ring-[var(--focus)]\" aria-label=\"Focus\">\n      <Plus />\n    </IconButton>\n    <IconButton\n      className=\"bg-[--active]\"\n      aria-pressed\n      aria-label=\"Active\"\n    >\n      <Plus />\n    </IconButton>\n    <IconButton disabled aria-label=\"Disabled\">\n      <Plus />\n    </IconButton>\n    <IconButton loading aria-label=\"Loading\">\n      <Plus />\n    </IconButton>\n  </div>\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <IconButton variant=\"primary\" aria-label=\"Primary\">\n      <Plus />\n    </IconButton>\n    <IconButton\n      className=\"bg-[--hover] shadow-[var(--shadow-neon-strong)]\"\n      variant=\"primary\"\n      aria-label=\"Primary hover\"\n    >\n      <Plus />\n    </IconButton>\n    <IconButton\n      className=\"bg-[--active] shadow-[var(--shadow-inset-contrast),var(--shadow-neon-soft)]\"\n      variant=\"primary\"\n      aria-label=\"Primary active\"\n      aria-pressed\n    >\n      <Plus />\n    </IconButton>\n  </div>\n</div>",
        "preview": {
          "id": "ui:icon-button:matrix"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<IconButton aria-label=\"Default\">\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<IconButton className=\"bg-[--hover]\" aria-label=\"Hover\">\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus",
            "code": "<IconButton className=\"ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)] [outline:var(--spacing-0-5)_solid_var(--ring-contrast)] [outline-offset:var(--spacing-0-5)]\" aria-label=\"Focus\">\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<IconButton\n  className=\"bg-[--active]\"\n  aria-label=\"Active\"\n  aria-pressed\n>\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<IconButton disabled aria-label=\"Disabled\">\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<IconButton loading aria-label=\"Loading\">\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:loading"
            }
          },
          {
            "id": "primary",
            "name": "Primary",
            "code": "<IconButton variant=\"primary\" aria-label=\"Primary\">\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:primary"
            }
          },
          {
            "id": "primary-hover",
            "name": "Primary Hover",
            "code": "<IconButton\n  className=\"bg-[--hover] shadow-[var(--shadow-neon-strong)]\"\n  variant=\"primary\"\n  aria-label=\"Primary hover\"\n>\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:primary-hover"
            }
          },
          {
            "id": "primary-active",
            "name": "Primary Active",
            "code": "<IconButton\n  className=\"bg-[--active] shadow-[var(--shadow-inset-contrast),var(--shadow-neon-soft)]\"\n  variant=\"primary\"\n  aria-label=\"Primary active\"\n  aria-pressed\n>\n  <Plus />\n</IconButton>",
            "preview": {
              "id": "ui:icon-button:state:primary-active"
            }
          }
        ]
      },
      {
        "id": "segmented-button",
        "name": "SegmentedButton",
        "description": "Inline segmented action with pressed and loading states",
        "kind": "primitive",
        "tags": [
          "button",
          "segmented"
        ],
        "props": [
          {
            "name": "as",
            "type": "React.ElementType"
          },
          {
            "name": "href",
            "type": "string"
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "loading",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Active"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Disabled link"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<div className=\"flex flex-wrap gap-[var(--space-2)]\">\n  <SegmentedButton>Default</SegmentedButton>\n  <SegmentedButton className=\"[--hover:var(--seg-hover-base)] bg-[--hover] text-[hsl(var(--foreground))] [text-shadow:0_0_calc(var(--space-2)-var(--spacing-0-5))_hsl(var(--accent)/0.25)]\">Hover</SegmentedButton>\n  <SegmentedButton selected>Active</SegmentedButton>\n  <SegmentedButton className=\"ring-2 ring-[--theme-ring] ring-offset-0 outline-none\">Focus-visible</SegmentedButton>\n  <SegmentedButton disabled>Disabled</SegmentedButton>\n  <SegmentedButton as=\"a\" href=\"#\" disabled>Disabled link</SegmentedButton>\n  <SegmentedButton loading>Loading</SegmentedButton>\n</div>",
        "preview": {
          "id": "ui:segmented-button:states"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<SegmentedButton>Default</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<SegmentedButton className=\"[--hover:var(--seg-hover-base)] bg-[--hover] text-[hsl(var(--foreground))] [text-shadow:0_0_calc(var(--space-2)-var(--spacing-0-5))_hsl(var(--accent)/0.25)]\">Hover</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:hover"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<SegmentedButton selected>Active</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:active"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<SegmentedButton className=\"ring-2 ring-[--theme-ring] ring-offset-0 outline-none\">Focus-visible</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:focus-visible"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<SegmentedButton disabled>Disabled</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:disabled"
            }
          },
          {
            "id": "disabled-link",
            "name": "Disabled link",
            "code": "<SegmentedButton as=\"a\" href=\"#\" disabled>Disabled link</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:disabled-link"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<SegmentedButton loading>Loading</SegmentedButton>",
            "preview": {
              "id": "ui:segmented-button:state:loading"
            }
          }
        ]
      },
      {
        "id": "label",
        "name": "Label",
        "description": "Text label paired with inputs for accessible forms",
        "kind": "primitive",
        "tags": [
          "label",
          "input"
        ],
        "props": [
          {
            "name": "htmlFor",
            "type": "string"
          },
          {
            "name": "className",
            "type": "string"
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Disabled"
              }
            ]
          }
        ],
        "code": "<div className=\"w-[calc(var(--space-8)*4)] space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"label-default\">Email</Label>\n    <Input id=\"label-default\" placeholder=\"player@example.gg\" />\n  </div>\n  <div className=\"opacity-80\">\n    <Label htmlFor=\"label-disabled\">Disabled</Label>\n    <Input id=\"label-disabled\" placeholder=\"Disabled input\" disabled />\n  </div>\n</div>",
        "preview": {
          "id": "ui:label:pairing"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<div className=\"flex flex-col gap-[var(--space-1)]\">\n  <Label htmlFor=\"label-state-default\">Email</Label>\n  <Input id=\"label-state-default\" placeholder=\"player@example.gg\" />\n</div>",
            "preview": {
              "id": "ui:label:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<div className=\"flex flex-col gap-[var(--space-1)]\">\n  <Label htmlFor=\"label-state-hover\" className=\"text-accent transition-colors\">Email</Label>\n  <Input\n    id=\"label-state-hover\"\n    placeholder=\"player@example.gg\"\n    className=\"border-primary/60\"\n  />\n</div>",
            "preview": {
              "id": "ui:label:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<div className=\"flex flex-col gap-[var(--space-1)]\">\n  <Label htmlFor=\"label-state-focus\" className=\"text-ring transition-colors\">Email</Label>\n  <Input\n    id=\"label-state-focus\"\n    placeholder=\"player@example.gg\"\n    className=\"ring-2 ring-[var(--ring)] ring-offset-2 ring-offset-[var(--surface-2)] focus-visible:ring-2 focus-visible:ring-[var(--ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--surface-2)]\"\n  />\n</div>",
            "preview": {
              "id": "ui:label:state:focus-visible"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<div className=\"flex flex-col gap-[var(--space-1)] opacity-80\">\n  <Label htmlFor=\"label-state-disabled\">Email</Label>\n  <Input id=\"label-state-disabled\" placeholder=\"player@example.gg\" disabled />\n</div>",
            "preview": {
              "id": "ui:label:state:disabled"
            }
          }
        ]
      },
      {
        "id": "select",
        "name": "Select",
        "description": "Animated trigger with native fallback",
        "kind": "primitive",
        "tags": [
          "select",
          "input"
        ],
        "props": [
          {
            "name": "items",
            "type": "readonly { value: string; label: React.ReactNode }[]",
            "required": true
          },
          {
            "name": "value",
            "type": "string | undefined"
          },
          {
            "name": "onChange",
            "type": "(value: string) => void"
          },
          {
            "name": "placeholder",
            "type": "string"
          },
          {
            "name": "variant",
            "type": "\"animated\" | \"native\"",
            "defaultValue": "\"animated\""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "axes": [
          {
            "id": "variant",
            "label": "Variant",
            "type": "variant",
            "values": [
              {
                "value": "Animated"
              },
              {
                "value": "Native"
              }
            ]
          },
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Active"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "import { cn } from \"@/lib/utils\";\n\nconst items = [\n  { value: \"one\", label: \"One\" },\n  { value: \"two\", label: \"Two\" },\n  { value: \"three\", label: \"Three\" },\n];\n\n  const SELECT_STATES = [\n    { label: \"Default\" },\n    { label: \"Hover\", buttonClassName: \"bg-[--hover]\" },\n    {\n      label: \"Focus-visible\",\n      className: \"rounded-[var(--control-radius)] ring-2 ring-[hsl(var(--ring))] ring-offset-0\",\n    },\n    { label: \"Active\", buttonClassName: \"bg-[--active]\" },\n    { label: \"Disabled\", props: { disabled: true } },\n    {\n      label: \"Loading\",\n      buttonClassName: \"pointer-events-none opacity-loading\",\n    },\n  ];\n\nconst [value, setValue] = React.useState(items[0]?.value ?? \"\");\n\n<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <div className=\"grid grid-cols-1 gap-[var(--space-3)] sm:grid-cols-2\">\n    <Select\n      items={items}\n      value={value}\n      onChange={setValue}\n      placeholder=\"Animated select\"\n      className=\"w-full sm:w-auto\"\n    />\n    <Select\n      items={items}\n      variant=\"native\"\n      value={value}\n      onChange={setValue}\n      aria-label=\"Native select\"\n      className=\"w-full sm:w-auto\"\n    />\n  </div>\n  <div className=\"flex flex-col gap-[var(--space-2)]\">\n    <p className=\"text-caption text-muted-foreground\">States</p>\n    <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n        {SELECT_STATES.map(({ label, buttonClassName, className, props }) => {\n          const { items: stateItems, ...restProps } = props ?? {};\n          const sampleItems = stateItems ?? items;\n          const baseClassName = \"w-full sm:w-auto\";\n          const finalClassName = cn(baseClassName, className);\n\n          return (\n            <Select\n              key={label}\n              items={[...sampleItems]}\n              placeholder={label}\n              ariaLabel={label}\n              buttonClassName={buttonClassName}\n              className={finalClassName}\n              {...restProps}\n            />\n          );\n        })}\n    </div>\n  </div>\n</div>",
        "preview": {
          "id": "ui:select:variants"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<Select placeholder=\"Animated select\" items={items} />",
            "preview": {
              "id": "ui:select:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<Select buttonClassName=\"bg-[--hover]\" placeholder=\"Hover\" items={items} />",
            "preview": {
              "id": "ui:select:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<Select className=\"rounded-[var(--control-radius)] ring-2 ring-[hsl(var(--ring))] ring-offset-0\" placeholder=\"Focus-visible\" items={items} />",
            "preview": {
              "id": "ui:select:state:focus-visible"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<Select buttonClassName=\"bg-[--active]\" placeholder=\"Active\" items={items} />",
            "preview": {
              "id": "ui:select:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Select placeholder=\"Disabled\" disabled items={items} />",
            "preview": {
              "id": "ui:select:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Select buttonClassName=\"pointer-events-none opacity-loading\" placeholder=\"Loading\" items={items} />",
            "preview": {
              "id": "ui:select:state:loading"
            }
          }
        ]
      },
      {
        "id": "field",
        "name": "Field",
        "description": "Composable shell for custom inputs, search, and selects",
        "kind": "primitive",
        "tags": [
          "field",
          "input"
        ],
        "props": [
          {
            "name": "height",
            "type": "\"sm\" | \"md\" | \"lg\" | \"xl\" | number",
            "defaultValue": "\"md\""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "invalid",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "loading",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "readOnly",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "helper",
            "type": "React.ReactNode"
          },
          {
            "name": "helperTone",
            "type": "\"muted\" | \"danger\" | \"success\""
          },
          {
            "name": "counter",
            "type": "React.ReactNode"
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Focus visible"
              },
              {
                "value": "Invalid"
              },
              {
                "value": "Loading"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "With counter"
              },
              {
                "value": "Select"
              },
              {
                "value": "Search"
              }
            ]
          }
        ],
        "code": "const [search, setSearch] = React.useState(\"Scouting\");\n\n<Field.Root helper=\"Compose primitives\">\n  <Field.Input placeholder=\"Default field\" />\n</Field.Root>\n<Field.Root\n  className=\"ring-2 ring-[hsl(var(--ring))]\"\n  helper=\"Helper text aligns with counter\"\n  helperId=\"field-focus-helper\"\n  counter=\"64 / 100\"\n  counterId=\"field-focus-counter\"\n>\n  <Field.Input\n    aria-describedby=\"field-focus-helper field-focus-counter\"\n    placeholder=\"Forced focus ring\"\n  />\n</Field.Root>\n<Field.Root invalid helper=\"Incorrect format\" helperTone=\"danger\">\n  <Field.Input placeholder=\"Invalid field\" aria-invalid />\n</Field.Root>\n<Field.Root loading helper=\"Loading state\">\n  <Field.Input placeholder=\"Loading field\" />\n</Field.Root>\n<Field.Root disabled helper=\"Disabled field\">\n  <Field.Input placeholder=\"Disabled field\" disabled />\n</Field.Root>\n<Field.Root\n  counter=\"120 / 200\"\n  counterId=\"field-counter\"\n  helper=\"Helper with counter\"\n  helperId=\"field-helper\"\n>\n  <Field.Textarea\n    aria-describedby=\"field-helper field-counter\"\n    placeholder=\"Textarea within a field\"\n    rows={3}\n  />\n</Field.Root>\n<Field.Root>\n  <Field.Select defaultValue=\"one\">\n    <option value=\"one\">One</option>\n    <option value=\"two\">Two</option>\n  </Field.Select>\n</Field.Root>\n<Field.Root>\n  <Field.Search\n    value={search}\n    onChange={(event) => setSearch(event.target.value)}\n    placeholder=\"Search fields\"\n    clearLabel=\"Clear search\"\n  />\n</Field.Root>",
        "preview": {
          "id": "ui:field:states"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<Field.Root helper=\"Compose primitives\">\n  <Field.Input placeholder=\"Default field\" />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:default"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus visible",
            "code": "<Field.Root\n  className=\"ring-2 ring-[hsl(var(--ring))]\"\n  helper=\"Helper text aligns with counter\"\n  helperId=\"field-focus-helper\"\n  counter=\"64 / 100\"\n  counterId=\"field-focus-counter\"\n>\n  <Field.Input\n    aria-describedby=\"field-focus-helper field-focus-counter\"\n    placeholder=\"Forced focus ring\"\n  />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:focus-visible"
            }
          },
          {
            "id": "invalid",
            "name": "Invalid",
            "code": "<Field.Root invalid helper=\"Incorrect format\" helperTone=\"danger\">\n  <Field.Input placeholder=\"Invalid field\" aria-invalid />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:invalid"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Field.Root loading helper=\"Loading state\">\n  <Field.Input placeholder=\"Loading field\" />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:loading"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Field.Root disabled helper=\"Disabled field\">\n  <Field.Input placeholder=\"Disabled field\" disabled />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:disabled"
            }
          },
          {
            "id": "with-counter",
            "name": "With counter",
            "code": "<Field.Root\n  counter=\"120 / 200\"\n  counterId=\"field-counter\"\n  helper=\"Helper with counter\"\n  helperId=\"field-helper\"\n>\n  <Field.Textarea\n    aria-describedby=\"field-helper field-counter\"\n    placeholder=\"Textarea within a field\"\n    rows={3}\n  />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:with-counter"
            }
          },
          {
            "id": "select",
            "name": "Select",
            "code": "const options = [\n  { value: \"one\", label: \"One\" },\n  { value: \"two\", label: \"Two\" },\n];\n\n<Field.Root>\n  <Field.Select defaultValue=\"one\">\n    {options.map((option) => (\n      <option key={option.value} value={option.value}>\n        {option.label}\n      </option>\n    ))}\n  </Field.Select>\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:select"
            }
          },
          {
            "id": "search",
            "name": "Search",
            "code": "const [search, setSearch] = React.useState(\"Scouting\");\n\n<Field.Root>\n  <Field.Search\n    value={search}\n    onChange={(event) => setSearch(event.target.value)}\n    placeholder=\"Search fields\"\n    clearLabel=\"Clear search\"\n  />\n</Field.Root>",
            "preview": {
              "id": "ui:field:state:search"
            }
          }
        ]
      },
      {
        "id": "input",
        "name": "Input",
        "description": "Standard text input with semantic states",
        "kind": "primitive",
        "tags": [
          "input",
          "text"
        ],
        "props": [
          {
            "name": "placeholder",
            "type": "string"
          },
          {
            "name": "height",
            "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
            "defaultValue": "\"md\""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "data-loading",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus"
              },
              {
                "value": "Active"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<div className=\"flex flex-col gap-[var(--space-2)]\">\n  <Input placeholder=\"Default\" />\n  <Input placeholder=\"Hover\" className=\"bg-[--hover]\" />\n  <Input placeholder=\"Focus\" className=\"ring-2 ring-[var(--focus)]\" />\n  <Input placeholder=\"Active\" className=\"bg-[--active]\" />\n  <Input placeholder=\"Disabled\" disabled />\n  <Input placeholder=\"Loading\" data-loading />\n</div>",
        "preview": {
          "id": "ui:input:states"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<Input placeholder=\"Default\" />",
            "preview": {
              "id": "ui:input:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<Input className=\"bg-[--hover]\" placeholder=\"Hover\" />",
            "preview": {
              "id": "ui:input:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus",
            "code": "<Input className=\"ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)] [outline:var(--spacing-0-5)_solid_var(--ring-contrast)] [outline-offset:var(--spacing-0-5)]\" placeholder=\"Focus\" />",
            "preview": {
              "id": "ui:input:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<Input className=\"bg-[--active]\" placeholder=\"Active\" />",
            "preview": {
              "id": "ui:input:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Input placeholder=\"Disabled\" disabled />",
            "preview": {
              "id": "ui:input:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Input placeholder=\"Loading\" data-loading />",
            "preview": {
              "id": "ui:input:state:loading"
            }
          }
        ]
      },
      {
        "id": "search-bar",
        "name": "SearchBar",
        "description": "Debounced search input with optional label and slots",
        "kind": "primitive",
        "tags": [
          "search",
          "input"
        ],
        "props": [
          {
            "name": "value",
            "type": "string",
            "required": true
          },
          {
            "name": "onValueChange",
            "type": "(value: string) => void"
          },
          {
            "name": "placeholder",
            "type": "string"
          },
          {
            "name": "label",
            "type": "React.ReactNode"
          },
          {
            "name": "right",
            "type": "React.ReactNode"
          },
          {
            "name": "loading",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "variant",
            "type": "\"default\" | \"neo\"",
            "defaultValue": "\"default\""
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "With label"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Active"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "const [query, setQuery] = React.useState(\"Champion counters\");\nconst handleNoop = React.useCallback((_value: string) => {}, []);\n\n<SearchBar\n  value={query}\n  onValueChange={setQuery}\n  placeholder=\"Search components\"\n/>\n<SearchBar\n  value=\"\"\n  onValueChange={handleNoop}\n  label=\"Search library\"\n  placeholder=\"With label\"\n  right={<Button size=\"sm\">Filters</Button>}\n/>\n<SearchBar\n  value=\"Hover\"\n  onValueChange={handleNoop}\n  placeholder=\"Hover\"\n  fieldClassName=\"bg-[--hover]\"\n/>\n<SearchBar\n  value=\"Focus-visible\"\n  onValueChange={handleNoop}\n  placeholder=\"Focus-visible\"\n  fieldClassName=\"ring-2 ring-[hsl(var(--ring))] ring-offset-0 ring-offset-[hsl(var(--bg))]\"\n/>\n<SearchBar\n  value=\"Active\"\n  onValueChange={handleNoop}\n  placeholder=\"Active\"\n  fieldClassName=\"bg-[--active]\"\n/>\n<SearchBar\n  value=\"Disabled\"\n  onValueChange={handleNoop}\n  placeholder=\"Disabled\"\n  disabled\n/>\n<SearchBar\n  value=\"Loading\"\n  onValueChange={handleNoop}\n  placeholder=\"Loading\"\n  loading\n/>",
        "preview": {
          "id": "ui:search-bar:states"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<SearchBar value={query} onValueChange={setQuery} placeholder=\"Search components\" />",
            "preview": {
              "id": "ui:search-bar:state:default"
            }
          },
          {
            "id": "with-label",
            "name": "With label",
            "code": "<SearchBar label=\"Search library\" right={<Button size=\"sm\">Filters</Button>} />",
            "preview": {
              "id": "ui:search-bar:state:with-label"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<SearchBar fieldClassName=\"bg-[--hover]\" placeholder=\"Hover\" />",
            "preview": {
              "id": "ui:search-bar:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<SearchBar fieldClassName=\"ring-2 ring-[hsl(var(--ring))] ring-offset-0 ring-offset-[hsl(var(--bg))]\" placeholder=\"Focus-visible\" />",
            "preview": {
              "id": "ui:search-bar:state:focus-visible"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<SearchBar fieldClassName=\"bg-[--active]\" placeholder=\"Active\" />",
            "preview": {
              "id": "ui:search-bar:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<SearchBar placeholder=\"Disabled\" disabled />",
            "preview": {
              "id": "ui:search-bar:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<SearchBar placeholder=\"Loading\" loading />",
            "preview": {
              "id": "ui:search-bar:state:loading"
            }
          }
        ]
      },
      {
        "id": "textarea",
        "name": "Textarea",
        "description": "Multi-line text input with Field styling",
        "kind": "primitive",
        "tags": [
          "textarea",
          "input"
        ],
        "props": [
          {
            "name": "placeholder",
            "type": "string"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "readOnly",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "aria-invalid",
            "type": "boolean | \"grammar\" | \"spelling\" | undefined"
          },
          {
            "name": "data-loading",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "resize",
            "type": "string"
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Active"
              },
              {
                "value": "Invalid"
              },
              {
                "value": "Read-only"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<Textarea placeholder=\"Share your thoughts\" />\n<Textarea placeholder=\"Hover\" className=\"bg-[--hover]\" />\n<Textarea placeholder=\"Focus-visible\" className=\"ring-2 ring-[hsl(var(--ring))]\" />\n<Textarea placeholder=\"Active\" className=\"bg-[--active]\" />\n<Textarea\n  placeholder=\"Needs attention\"\n  className=\"ring-2 ring-[hsl(var(--danger))]\"\n  aria-invalid\n/> \n<Textarea\n  placeholder=\"Read-only\"\n  className=\"bg-[hsl(var(--card)/0.72)]\"\n  textareaClassName=\"text-muted-foreground\"\n  readOnly\n/> \n<Textarea placeholder=\"Disabled\" disabled />\n<Textarea placeholder=\"Loading\" data-loading />\n<Textarea placeholder=\"Resizable textarea\" resize=\"resize-y\" aria-label=\"Resizable textarea\" />",
        "preview": {
          "id": "ui:textarea:states"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<Textarea placeholder=\"Share your thoughts\" />",
            "preview": {
              "id": "ui:textarea:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<Textarea className=\"bg-[--hover]\" placeholder=\"Hover\" />",
            "preview": {
              "id": "ui:textarea:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<Textarea className=\"ring-2 ring-[hsl(var(--ring))]\" placeholder=\"Focus-visible\" />",
            "preview": {
              "id": "ui:textarea:state:focus-visible"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<Textarea className=\"bg-[--active]\" placeholder=\"Active\" />",
            "preview": {
              "id": "ui:textarea:state:active"
            }
          },
          {
            "id": "invalid",
            "name": "Invalid",
            "code": "<Textarea\n  className=\"ring-2 ring-[hsl(var(--danger))]\"\n  placeholder=\"Needs attention\"\n  aria-invalid\n/>",
            "preview": {
              "id": "ui:textarea:state:invalid"
            }
          },
          {
            "id": "read-only",
            "name": "Read-only",
            "code": "<Textarea\n  className=\"bg-[hsl(var(--card)/0.72)]\"\n  textareaClassName=\"text-muted-foreground\"\n  readOnly\n  placeholder=\"Read-only\"\n/>",
            "preview": {
              "id": "ui:textarea:state:read-only"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Textarea placeholder=\"Disabled\" disabled />",
            "preview": {
              "id": "ui:textarea:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Textarea placeholder=\"Loading\" data-loading />",
            "preview": {
              "id": "ui:textarea:state:loading"
            }
          }
        ]
      },
      {
        "id": "progress",
        "name": "Progress",
        "tags": [
          "progress"
        ],
        "kind": "primitive",
        "code": "<Progress value={33} />",
        "preview": {
          "id": "prompts:feedback:progress"
        }
      },
      {
        "id": "outline-glow",
        "name": "OutlineGlowDemo",
        "description": "Focus ring glow tokens and disabled outline states.",
        "tags": [
          "focus",
          "state",
          "demo"
        ],
        "kind": "primitive",
        "code": "<div className=\"flex gap-[var(--space-2)]\">\n  <button\n    type=\"button\"\n    className=\"inline-flex items-center justify-center rounded-card r-card-md border px-[var(--space-3)] py-[var(--space-2)] [--focus:var(--focus)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)] hover:bg-surface-2 active:bg-surface\"\n  >\n    Focus me to see the glow\n  </button>\n  <button\n    type=\"button\"\n    disabled\n    className=\"inline-flex items-center justify-center rounded-card r-card-md border px-[var(--space-3)] py-[var(--space-2)] [--focus:var(--focus)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)] hover:bg-surface-2 active:bg-surface disabled:cursor-not-allowed\"\n  >\n    Disabled example\n  </button>\n</div>",
        "preview": {
          "id": "prompts:feedback:outline-glow"
        }
      },
      {
        "id": "snackbar",
        "name": "Snackbar",
        "tags": [
          "snackbar",
          "feedback"
        ],
        "kind": "primitive",
        "code": "<Snackbar message=\"Saved\" actionLabel=\"Undo\" onAction={() => {}} />",
        "preview": {
          "id": "prompts:feedback:snackbar"
        }
      },
      {
        "id": "toast-demo",
        "name": "Toast",
        "tags": [
          "toast",
          "feedback"
        ],
        "kind": "primitive",
        "code": "<Button size=\"sm\">Show</Button>\n<Toast open closable showProgress><p className=\"text-ui\">Toast message</p></Toast>",
        "preview": {
          "id": "prompts:feedback:toast-demo"
        }
      },
      {
        "id": "skeleton",
        "name": "Skeleton",
        "description": "Shimmer placeholder for loading layouts.",
        "tags": [
          "skeleton",
          "loading",
          "feedback"
        ],
        "kind": "primitive",
        "code": "<div className=\"space-y-2\">\n  <Skeleton\n    ariaHidden={false}\n    role=\"status\"\n    aria-label=\"Loading primary title\"\n    className=\"h-6 w-2/5 sm:w-1/3\"\n    radius=\"card\"\n  />\n  <Skeleton className=\"w-3/4\" />\n  <Skeleton radius=\"full\" className=\"h-10 w-10\" />\n</div>",
        "preview": {
          "id": "prompts:feedback:skeleton"
        }
      },
      {
        "id": "spinner",
        "name": "Spinner",
        "tags": [
          "spinner",
          "loading"
        ],
        "kind": "primitive",
        "code": "<Spinner size=\"xl\" />",
        "preview": {
          "id": "prompts:feedback:spinner"
        }
      },
      {
        "id": "toggle",
        "name": "Toggle",
        "tags": [
          "toggle"
        ],
        "kind": "primitive",
        "code": "const [value, setValue] = React.useState<\"Left\" | \"Right\">(\"Left\");\n<Toggle value={value} onChange={setValue} />",
        "preview": {
          "id": "prompts:toggles:toggle"
        }
      },
      {
        "id": "animation-toggle",
        "name": "AnimationToggle",
        "tags": [
          "toggle",
          "animation"
        ],
        "kind": "primitive",
        "code": "<AnimationToggle />\n<AnimationToggle loading />",
        "preview": {
          "id": "prompts:toggles:animation-toggle"
        }
      },
      {
        "id": "check-circle",
        "name": "CheckCircle",
        "tags": [
          "checkbox",
          "toggle"
        ],
        "kind": "primitive",
        "code": "<CheckCircle\n  aria-label=\"Enable notifications\"\n  checked={false}\n  onChange={() => {}}\n  size=\"md\"\n/>\n<CheckCircle\n  aria-label=\"Enable notifications\"\n  checked\n  onChange={() => {}}\n  size=\"md\"\n/>",
        "preview": {
          "id": "prompts:toggles:check-circle"
        }
      },
      {
        "id": "tab-bar",
        "name": "TabBar",
        "description": "Segmented tab navigation with preset variants",
        "kind": "primitive",
        "tags": [
          "tabs",
          "navigation"
        ],
        "axes": [
          {
            "id": "variant",
            "label": "Variant",
            "type": "variant",
            "values": [
              {
                "value": "Filters"
              },
              {
                "value": "Default"
              },
              {
                "value": "Navigation"
              }
            ]
          },
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Active"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<TabBar\n  items={[\n    { key: \"all\", label: \"All\", icon: <Circle aria-hidden=\"true\" /> },\n    { key: \"active\", label: \"Active\", icon: <CircleDot aria-hidden=\"true\" /> },\n    { key: \"done\", label: \"Done\", icon: <CircleCheck aria-hidden=\"true\" /> },\n    {\n      key: \"focus\",\n      label: \"Focus-visible\",\n      icon: <Circle aria-hidden=\"true\" />,\n      className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\",\n    },\n  ]}\n  value=\"active\"\n  onValueChange={() => {}}\n  ariaLabel=\"Filter goals\"\n/>\n\n<TabBar\n  items={[\n    { key: \"a\", label: \"A\" },\n    { key: \"b\", label: \"B\" },\n    { key: \"focus\", label: \"Focus-visible\", className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\" },\n    { key: \"c\", label: \"Disabled\", disabled: true },\n    { key: \"d\", label: \"Syncing\", loading: true },\n  ]}\n  value=\"a\"\n  onValueChange={() => {}}\n  ariaLabel=\"Example tabs\"\n/>\n\n<TabBar\n  items={[\n    { key: \"reviews\", label: \"Reviews\" },\n    { key: \"planner\", label: \"Planner\" },\n    { key: \"goals\", label: \"Goals\" },\n    { key: \"focus\", label: \"Focus-visible\", className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\" },\n  ]}\n  value=\"reviews\"\n  onValueChange={() => {}}\n  ariaLabel=\"Planner areas\"\n/>",
        "preview": {
          "id": "ui:tab-bar:variants"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"upcoming\", label: \"Upcoming\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
            "preview": {
              "id": "ui:tab-bar:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"hover\", label: \"Hover\", className: \"text-foreground bg-[--hover] shadow-[var(--tab-shadow-hover,var(--tab-shadow))]\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
            "preview": {
              "id": "ui:tab-bar:state:hover"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"active\", label: \"Active\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"active\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
            "preview": {
              "id": "ui:tab-bar:state:active"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"focus\", label: \"Focus-visible\", className: \"outline-[var(--spacing-0-5)_solid_var(--ring-contrast)] outline-offset-[var(--spacing-0-5)] ring-2 ring-[var(--ring-contrast)] shadow-[var(--shadow-glow-md)]\" },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
            "preview": {
              "id": "ui:tab-bar:state:focus-visible"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"disabled\", label: \"Disabled\", disabled: true },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
            "preview": {
              "id": "ui:tab-bar:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<TabBar\n  items={[\n    { key: \"today\", label: \"Today\" },\n    { key: \"loading\", label: \"Loading\", loading: true },\n    { key: \"backlog\", label: \"Backlog\" },\n  ]}\n  value=\"today\"\n  onValueChange={() => {}}\n  ariaLabel=\"Tab state preview\"\n/>",
            "preview": {
              "id": "ui:tab-bar:state:loading"
            }
          }
        ]
      },
      {
        "id": "tabs",
        "name": "Tabs",
        "description": "Context provider that links TabList controls with TabPanel content.",
        "kind": "primitive",
        "tags": [
          "tabs",
          "navigation"
        ],
        "axes": [
          {
            "id": "layout",
            "label": "Layout",
            "type": "variant",
            "values": [
              {
                "value": "Panels"
              },
              {
                "value": "Controlled list"
              }
            ]
          },
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Active"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<Tabs defaultValue=\"overview\">\n  <div className=\"space-y-[var(--space-3)]\">\n    <TabList\n      items={[\n        { key: \"overview\", label: \"Overview\" },\n        { key: \"activity\", label: \"Activity\" },\n        { key: \"files\", label: \"Files\" },\n      ]}\n      ariaLabel=\"Project sections\"\n    />\n    <TabPanel value=\"overview\">\n      <Card className=\"space-y-[var(--space-2)]\">\n        <p className=\"text-title font-semibold tracking-[-0.01em]\">Overview</p>\n        <p className=\"text-ui text-muted-foreground\">\n          Keep a high-level summary of the plan visible for the team.\n        </p>\n      </Card>\n    </TabPanel>\n    <TabPanel value=\"activity\">\n      <Card className=\"space-y-[var(--space-2)]\">\n        <p className=\"text-title font-semibold tracking-[-0.01em]\">Activity</p>\n        <p className=\"text-ui text-muted-foreground\">\n          Show chronological activity without leaving the workspace.\n        </p>\n      </Card>\n    </TabPanel>\n    <TabPanel value=\"files\">\n      <Card className=\"space-y-[var(--space-2)]\">\n        <p className=\"text-title font-semibold tracking-[-0.01em]\">Files</p>\n        <p className=\"text-ui text-muted-foreground\">\n          Store briefs, shared assets, and notes alongside the plan.\n        </p>\n      </Card>\n    </TabPanel>\n  </div>\n</Tabs>\n\n<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <div className=\"space-y-[var(--space-3)]\">\n    <TabList\n      ariaLabel=\"Notification filters\"\n      items={[\n        { key: \"inbox\", label: \"Inbox\" },\n        {\n          key: \"updates\",\n          label: \"Updates\",\n          className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\",\n        },\n        { key: \"archive\", label: \"Archive\" },\n        { key: \"disabled\", label: \"Disabled\", disabled: true },\n        { key: \"sync\", label: \"Syncing\", loading: true },\n      ]}\n      linkPanels={false}\n      showBaseline\n    />\n    <Card className=\"text-ui text-muted-foreground\">\n      Active tab: <span className=\"font-medium text-foreground\">Inbox</span>\n    </Card>\n  </div>\n</Tabs>",
        "preview": {
          "id": "ui:tabs:wiring"
        },
        "states": [
          {
            "id": "active",
            "name": "Active",
            "code": "<Tabs value=\"updates\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      { key: \"updates\", label: \"Updates\" },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
            "preview": {
              "id": "ui:tabs:state:active"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      {\n        key: \"updates\",\n        label: \"Updates\",\n        className: \"text-foreground bg-[--hover] shadow-[var(--tab-shadow-hover,var(--tab-shadow))]\",\n      },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
            "preview": {
              "id": "ui:tabs:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      {\n        key: \"updates\",\n        label: \"Updates\",\n        className: \"ring-2 ring-[var(--theme-ring)] ring-offset-0 outline-none\",\n      },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
            "preview": {
              "id": "ui:tabs:state:focus-visible"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      { key: \"disabled\", label: \"Disabled\", disabled: true },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
            "preview": {
              "id": "ui:tabs:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Tabs value=\"inbox\" onValueChange={() => {}}>\n  <TabList\n    ariaLabel=\"Tab state preview\"\n    items={[\n      { key: \"inbox\", label: \"Inbox\" },\n      { key: \"sync\", label: \"Syncing\", loading: true },\n    ]}\n    linkPanels={false}\n    showBaseline\n  />\n</Tabs>",
            "preview": {
              "id": "ui:tabs:state:loading"
            }
          }
        ]
      },
      {
        "id": "toggle",
        "name": "Toggle",
        "description": "Binary switch with hover, focus, active, disabled, and loading states",
        "kind": "primitive",
        "tags": [
          "toggle",
          "switch"
        ],
        "props": [
          {
            "name": "leftLabel",
            "type": "string"
          },
          {
            "name": "rightLabel",
            "type": "string"
          },
          {
            "name": "value",
            "type": "\"Left\" | \"Right\"",
            "defaultValue": "\"Left\""
          },
          {
            "name": "onChange",
            "type": "(value: \"Left\" | \"Right\") => void"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "loading",
            "type": "boolean",
            "defaultValue": "false"
          },
          {
            "name": "className",
            "type": "string"
          }
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Default"
              },
              {
                "value": "Hover"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Active"
              },
              {
                "value": "Disabled"
              },
              {
                "value": "Loading"
              }
            ]
          }
        ],
        "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <Toggle leftLabel=\"Strategy\" rightLabel=\"Execute\" />\n  <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-hover-surface]\" />\n    <Toggle\n      leftLabel=\"Left\"\n      rightLabel=\"Right\"\n      className=\"ring-2 ring-[var(--toggle-focus-ring)] ring-offset-2 ring-offset-[var(--surface-2)] shadow-[var(--toggle-focus-glow)] focus-visible:ring-2 focus-visible:ring-[var(--toggle-focus-ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--surface-2)]\"\n    />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-active-surface]\" />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" disabled />\n    <Toggle leftLabel=\"Left\" rightLabel=\"Right\" loading />\n  </div>\n</div>",
        "preview": {
          "id": "ui:toggle:interactive"
        },
        "states": [
          {
            "id": "default",
            "name": "Default",
            "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" />",
            "preview": {
              "id": "ui:toggle:state:default"
            }
          },
          {
            "id": "hover",
            "name": "Hover",
            "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-hover-surface]\" />",
            "preview": {
              "id": "ui:toggle:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Focus-visible",
            "code": "<Toggle\n  leftLabel=\"Left\"\n  rightLabel=\"Right\"\n  className=\"ring-2 ring-[var(--toggle-focus-ring)] ring-offset-2 ring-offset-[var(--surface-2)] shadow-[var(--toggle-focus-glow)] focus-visible:ring-2 focus-visible:ring-[var(--toggle-focus-ring)] focus-visible:ring-offset-2 focus-visible:ring-offset-[var(--surface-2)]\"\n/>",
            "preview": {
              "id": "ui:toggle:state:focus-visible"
            }
          },
          {
            "id": "active",
            "name": "Active",
            "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" className=\"bg-[--toggle-active-surface]\" />",
            "preview": {
              "id": "ui:toggle:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" disabled />",
            "preview": {
              "id": "ui:toggle:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "code": "<Toggle leftLabel=\"Left\" rightLabel=\"Right\" loading />",
            "preview": {
              "id": "ui:toggle:state:loading"
            }
          }
        ]
      }
    ],
    "component": [
      {
        "id": "prompt-list",
        "name": "PromptList",
        "description": "Prompt filtering",
        "tags": [
          "prompt",
          "list"
        ],
        "kind": "component",
        "code": "<PromptList prompts={demoPrompts} query=\"\" />",
        "usage": [
          {
            "kind": "do",
            "title": "Match skeleton rhythm to saved cards",
            "description": "Align placeholder spacing with prompt titles and bodies so loading feels stable."
          },
          {
            "kind": "do",
            "title": "Confirm empty states with guidance",
            "description": "Surface contextual copy that explains whether no prompts exist or filters removed results."
          },
          {
            "kind": "dont",
            "title": "Avoid blank panels",
            "description": "Never leave the list empty without skeletons or helper text; it reads as a rendering failure."
          }
        ],
        "preview": {
          "id": "prompts:prompts:prompt-list"
        },
        "states": [
          {
            "id": "loading",
            "name": "Loading",
            "description": "Skeleton cards preserve the prompt layout while entries sync from storage.",
            "code": "const PROMPT_LIST_LOADING_KEYS = [\n  \"prompt-loading-1\",\n  \"prompt-loading-2\",\n  \"prompt-loading-3\",\n];\n\n<ul className=\"mt-[var(--space-4)] space-y-[var(--space-3)]\">\n  {PROMPT_LIST_LOADING_KEYS.map((itemKey) => (\n    <li key={itemKey}>\n      <Card className=\"space-y-[var(--space-3)] p-[var(--space-3)]\">\n        <div className=\"flex items-center justify-between\">\n          <Skeleton\n            ariaHidden={false}\n            role=\"status\"\n            aria-label=\"Loading prompt title\"\n            className=\"h-[var(--space-5)] w-[calc(100%-var(--space-6))]\"\n            radius=\"sm\"\n          />\n          <Skeleton\n            className=\"h-[var(--space-4)] w-[calc(var(--space-8)*1.5)]\"\n            radius=\"sm\"\n          />\n        </div>\n        <div className=\"space-y-[var(--space-2)]\">\n          <Skeleton className=\"w-full\" />\n          <Skeleton className=\"w-[calc(100%-var(--space-6))]\" />\n        </div>\n      </Card>\n    </li>\n  ))}\n</ul>",
            "preview": {
              "id": "prompts:prompts:prompt-list:state:loading"
            }
          },
          {
            "id": "empty",
            "name": "Empty",
            "description": "Muted guidance keeps the workspace clear when no prompts have been saved yet.",
            "code": "<PromptList prompts={[]} query=\"\" />",
            "preview": {
              "id": "prompts:prompts:prompt-list:state:empty"
            }
          }
        ]
      },
      {
        "id": "prompts-header",
        "name": "PromptsHeader",
        "description": "Prompts workspace header with search, chips, and save action.",
        "tags": [
          "prompts",
          "header",
          "search"
        ],
        "kind": "component",
        "code": "function PromptsHeaderDemo() {\n  const [saved, setSaved] = React.useState(6);\n  const [query, setQuery] = React.useState(\"focus\");\n\n  return (\n    <PromptsHeader\n      count={saved}\n      query={query}\n      onQueryChange={setQuery}\n      onSave={() => setSaved((prev) => prev + 1)}\n      disabled={query.trim().length === 0}\n    />\n  );\n}",
        "preview": {
          "id": "prompts:prompts:prompts-header"
        },
        "states": [
          {
            "id": "chip-hover",
            "name": "Chip hover",
            "description": "The muted overlay token appears on hover so filter chips advertise interactivity without shifting layout.",
            "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge interactive className=\"bg-muted/28\">\n    Hover\n  </Badge>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:chip-hover"
            }
          },
          {
            "id": "chip-focus-visible",
            "name": "Chip focus-visible",
            "description": "Focus rings use the global `--focus` token to keep keyboard navigation visible across themed surfaces.",
            "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge\n    interactive\n    className=\"ring-2 ring-[var(--focus)] ring-offset-2 ring-offset-[hsl(var(--surface-2))] outline-none\"\n  >\n    Focus visible\n  </Badge>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:chip-focus-visible"
            }
          },
          {
            "id": "chip-pressed",
            "name": "Chip pressed",
            "description": "Pressed chips dip by `var(--space-1)` and deepen the muted overlay so selection feedback remains tactile.",
            "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge\n    interactive\n    aria-pressed=\"true\"\n    className=\"bg-muted/36 translate-y-[var(--space-1)] shadow-outline-subtle\"\n  >\n    Pressed\n  </Badge>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:chip-pressed"
            }
          },
          {
            "id": "chip-disabled",
            "name": "Chip disabled",
            "description": "Disabled chips lean on the shared opacity token so unavailable filters fade without breaking rhythm.",
            "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge interactive disabled>\n    Disabled\n  </Badge>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:chip-disabled"
            }
          },
          {
            "id": "chip-loading",
            "name": "Chip loading",
            "description": "While sync runs the badge disables interaction and shows an accent spinner anchored by the spacing scale.",
            "code": "<div className=\"flex flex-wrap items-center gap-[var(--space-2)]\">\n  <Badge interactive>Default</Badge>\n  <Badge\n    interactive\n    disabled\n    className=\"pointer-events-none\"\n  >\n    Loading\n    <Spinner\n      size=\"sm\"\n      className=\"ml-[var(--space-2)] border-[hsl(var(--ring))] border-t-transparent\"\n    />\n  </Badge>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:chip-loading"
            }
          },
          {
            "id": "search-hover",
            "name": "Search hover",
            "description": "Hovering the header search lifts the hairline shadow using the shared highlight token.",
            "code": "<Field.Root\n  className=\"max-w-[min(100%,var(--space-72))] shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.12),inset_0_calc(var(--hairline-w)*-1)_0_hsl(var(--border)/0.45)]\"\n>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Focus cues\"\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-hover"
            }
          },
          {
            "id": "search-focus-visible",
            "name": "Search focus-visible",
            "description": "Auto focus applies the planner ring token so keyboard users keep orientation while filtering.",
            "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\">\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Focus cues\"\n    autoFocus\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-focus-visible"
            }
          },
          {
            "id": "search-active",
            "name": "Search active",
            "description": "Typing a query reveals the clear affordance so the chip filters and search stay in sync.",
            "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\">\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Reaction windows\"\n    clearable\n    onClear={() => {}}\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-active"
            }
          },
          {
            "id": "search-disabled",
            "name": "Search disabled",
            "description": "When search is disabled, tokens desaturate the field and the clear control stays hidden.",
            "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\" disabled>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Focus cues\"\n    disabled\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-disabled"
            }
          },
          {
            "id": "search-loading",
            "name": "Search loading",
            "description": "The loading state locks the field and shows the inline spinner supplied by the field primitive.",
            "code": "<Field.Root className=\"max-w-[min(100%,var(--space-72))]\" loading>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Syncing prompts\"\n    loading\n    aria-label=\"Search prompts\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-loading"
            }
          },
          {
            "id": "search-error",
            "name": "Search error",
            "description": "Danger helpers and border tokens communicate empty matches without collapsing the layout.",
            "code": "<Field.Root\n  className=\"max-w-[min(100%,var(--space-72))]\"\n  invalid\n  helper=\"No prompts match \"reaction windows\".\"\n  helperTone=\"danger\"\n  helperId=\"search-error\"\n>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    defaultValue=\"Reaction windows\"\n    aria-label=\"Search prompts\"\n    aria-describedby=\"search-error\"\n    aria-invalid=\"true\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-error"
            }
          },
          {
            "id": "search-empty",
            "name": "Search empty",
            "description": "An empty helper keeps guidance visible when no query is applied yet.",
            "code": "<Field.Root\n  className=\"max-w-[min(100%,var(--space-72))]\"\n  helper=\"Type to filter saved prompts.\"\n  helperId=\"search-helper\"\n>\n  <Field.Search\n    placeholder=\"Search prompts…\"\n    aria-label=\"Search prompts\"\n    aria-describedby=\"search-helper\"\n  />\n</Field.Root>",
            "preview": {
              "id": "prompts:prompts:prompts-header:state:search-empty"
            }
          }
        ]
      },
      {
        "id": "prompts-compose-panel",
        "name": "PromptsComposePanel",
        "description": "Compose prompts with labelled title and textarea controls.",
        "tags": [
          "prompts",
          "form"
        ],
        "kind": "component",
        "code": "function PromptsComposePanelDemo() {\n  const [title, setTitle] = React.useState(\"Review after scrims\");\n  const [text, setText] = React.useState(\n    \"Summarize three high-impact plays and next steps.\",\n  );\n\n  return (\n    <PromptsComposePanel\n      title={title}\n      onTitleChange={setTitle}\n      text={text}\n      onTextChange={setText}\n    />\n  );\n}",
        "preview": {
          "id": "prompts:prompts:prompts-compose-panel"
        },
        "states": [
          {
            "id": "compose-hover",
            "name": "Compose hover",
            "description": "Hovering either field lifts the shared highlight shadow while preserving the matte prompt shell.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.12),inset_0_calc(var(--hairline-w)*-1)_0_hsl(var(--border)/0.45)]\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.12),inset_0_calc(var(--hairline-w)*-1)_0_hsl(var(--border)/0.45)]\"\n    />\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-hover"
            }
          },
          {
            "id": "compose-focus-visible",
            "name": "Compose focus-visible",
            "description": "Focus-visible rings lean on the planner ring token so keyboard users keep context while editing prompts.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      autoFocus\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n    />\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-focus-visible"
            }
          },
          {
            "id": "compose-active",
            "name": "Compose active",
            "description": "Active editing introduces a subtle inset highlight so long-form prompts feel anchored while typing.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.08)]\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      className=\"shadow-[inset_0_var(--hairline-w)_0_hsl(var(--highlight)/0.08)]\"\n    />\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-active"
            }
          },
          {
            "id": "compose-disabled",
            "name": "Compose disabled",
            "description": "Disabled compose fields lean on the shared disabled opacity and remove pointer cues while saves settle.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      disabled\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      disabled\n    />\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-disabled"
            }
          },
          {
            "id": "compose-loading",
            "name": "Compose loading",
            "description": "Loading states trigger the field spinner via `data-loading` so writers know saves are in progress.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      defaultValue=\"Review after scrims\"\n      data-loading\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      resize=\"resize-y\"\n      data-loading\n    />\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-loading"
            }
          },
          {
            "id": "compose-error",
            "name": "Compose error",
            "description": "Danger helpers communicate required titles, keeping validation inline with the prompt scaffold.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n      aria-invalid=\"true\"\n      aria-describedby=\"prompt-title-error\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p\n      id=\"prompt-title-error\"\n      className=\"mt-[var(--space-1)] text-label text-danger\"\n    >\n      Title is required before saving.\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      defaultValue=\"Summarize three high-impact plays and next steps.\"\n      aria-invalid=\"true\"\n      resize=\"resize-y\"\n    />\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-error"
            }
          },
          {
            "id": "compose-empty",
            "name": "Compose empty",
            "description": "Empty compose fields keep helper copy visible so players know what to write before saving.",
            "code": "<div className=\"space-y-[var(--space-3)]\">\n  <div>\n    <Label htmlFor=\"prompt-title\">Title</Label>\n    <Input\n      id=\"prompt-title\"\n      placeholder=\"Title\"\n    >\n      <CheckIcon\n        aria-hidden=\"true\"\n        className=\"absolute right-[var(--space-3)] top-1/2 -translate-y-1/2 h-[var(--space-4)] w-[var(--space-4)]\"\n      />\n    </Input>\n    <p className=\"mt-[var(--space-1)] text-label text-muted-foreground\">\n      Add a short title\n    </p>\n  </div>\n  <div>\n    <Label htmlFor=\"prompt-body\">Prompt</Label>\n    <Textarea\n      id=\"prompt-body\"\n      placeholder=\"Write your prompt or snippet…\"\n      aria-describedby=\"prompt-body-helper\"\n      resize=\"resize-y\"\n    />\n    <p\n      id=\"prompt-body-helper\"\n      className=\"mt-[var(--space-1)] text-label text-muted-foreground\"\n    >\n      Describe the context or goal for this prompt.\n    </p>\n  </div>\n</div>",
            "preview": {
              "id": "prompts:prompts:prompts-compose-panel:state:compose-empty"
            }
          }
        ]
      },
      {
        "id": "prompts-demos",
        "name": "PromptsDemos",
        "description": "Comprehensive component playground for prompts surfaces.",
        "tags": [
          "prompts",
          "gallery",
          "demo"
        ],
        "kind": "component",
        "code": "<PromptsDemos />",
        "preview": {
          "id": "prompts:prompts:prompts-demos"
        }
      },
      {
        "id": "card-demo",
        "name": "Card",
        "description": "Standard card surface with header spacing set to the space-2 token for consistent vertical rhythm.",
        "tags": [
          "card",
          "layout"
        ],
        "kind": "component",
        "code": "<Card>\n  <CardHeader>\n    <CardTitle>Title</CardTitle>\n    <CardDescription>Description</CardDescription>\n  </CardHeader>\n  <CardContent>\n    <p className=\"text-ui\">Body</p>\n  </CardContent>\n  <CardFooter>\n    <Button size=\"sm\">Action</Button>\n  </CardFooter>\n</Card>",
        "usage": [
          {
            "kind": "do",
            "title": "Use skeletons for async fetches",
            "description": "Mirror the content hierarchy with Skeleton components so loading feels intentional and steady."
          },
          {
            "kind": "do",
            "title": "Keep messaging concise",
            "description": "Card headlines should be short and scannable to reinforce the surrounding dashboard context."
          },
          {
            "kind": "dont",
            "title": "Do not mix button tones",
            "description": "Cards should avoid multiple competing button tones; reserve the primary action for the footer."
          }
        ],
        "preview": {
          "id": "prompts:cards:card-demo"
        },
        "states": [
          {
            "id": "loading",
            "name": "Loading",
            "description": "Skeleton placeholders mirror card layout to communicate asynchronous loading.",
            "code": "<Card>\n  <CardContent className=\"space-y-[var(--space-4)]\">\n    <div className=\"space-y-[var(--space-2)]\">\n      <Skeleton\n        ariaHidden={false}\n        role=\"status\"\n        aria-label=\"Loading summary\"\n        className=\"h-[var(--space-6)] w-3/4\"\n        radius=\"sm\"\n      />\n      <Skeleton className=\"w-full\" />\n      <Skeleton className=\"w-4/5\" />\n    </div>\n    <div className=\"flex items-center gap-[var(--space-3)]\">\n      <Skeleton\n        className=\"h-[var(--space-7)] w-[var(--space-7)] flex-none\"\n        radius=\"full\"\n      />\n      <div className=\"flex-1 space-y-[var(--space-2)]\">\n        <Skeleton className=\"w-3/4\" />\n        <Skeleton className=\"w-2/3\" />\n      </div>\n    </div>\n  </CardContent>\n</Card>",
            "preview": {
              "id": "prompts:cards:card-demo:state:loading"
            }
          },
          {
            "id": "error",
            "name": "Error",
            "description": "Snackbar feedback surfaces failure messaging with a retry action inside the card shell.",
            "code": "<Card>\n  <CardContent className=\"space-y-[var(--space-3)]\">\n    <div className=\"space-y-[var(--space-1)]\">\n      <h4 className=\"text-ui font-semibold tracking-[-0.01em]\">\n        Data unavailable\n      </h4>\n      <p className=\"text-label text-muted-foreground\">\n        Refresh to request the latest match insights.\n      </p>\n    </div>\n    <Snackbar\n      message=\"Sync failed\"\n      actionLabel=\"Retry\"\n      onAction={() => {}}\n      tone=\"danger\"\n      width=\"full\"\n    />\n  </CardContent>\n</Card>",
            "preview": {
              "id": "prompts:cards:card-demo:state:error"
            }
          }
        ]
      },
      {
        "id": "neo-card-demo",
        "name": "NeoCard",
        "tags": [
          "card",
          "overlay",
          "layout"
        ],
        "kind": "component",
        "code": "<NeoCard\n  overlay={<div className=\"neo-card__overlay\" />}\n>\n  <p className=\"text-ui\">Body</p>\n</NeoCard>",
        "usage": [
          {
            "kind": "do",
            "title": "Use overlays for featured content",
            "description": "Neo cards work best when highlighting premium or hero content that benefits from glow and depth."
          },
          {
            "kind": "dont",
            "title": "Avoid dense layouts",
            "description": "Do not overload Neo cards with complex forms; reserve them for concise summaries or highlights."
          }
        ],
        "preview": {
          "id": "prompts:cards:neo-card-demo"
        },
        "states": [
          {
            "id": "loading",
            "name": "Loading",
            "description": "Neo shell supports skeletons while preserving raised lighting cues.",
            "code": "<NeoCard className=\"p-[var(--space-4)]\">\n  <div className=\"space-y-[var(--space-4)]\">\n    <div className=\"space-y-[var(--space-2)]\">\n      <Skeleton\n        ariaHidden={false}\n        role=\"status\"\n        aria-label=\"Loading summary\"\n        className=\"h-[var(--space-6)] w-3/4\"\n        radius=\"sm\"\n      />\n      <Skeleton className=\"w-full\" />\n      <Skeleton className=\"w-4/5\" />\n    </div>\n    <div className=\"flex items-center gap-[var(--space-3)]\">\n      <Skeleton\n        className=\"h-[var(--space-7)] w-[var(--space-7)] flex-none\"\n        radius=\"full\"\n      />\n      <div className=\"flex-1 space-y-[var(--space-2)]\">\n        <Skeleton className=\"w-3/4\" />\n        <Skeleton className=\"w-2/3\" />\n      </div>\n    </div>\n  </div>\n</NeoCard>",
            "preview": {
              "id": "prompts:cards:neo-card-demo:state:loading"
            }
          },
          {
            "id": "error",
            "name": "Error",
            "description": "Surface retry messaging within the Neo overlay while maintaining blend effects.",
            "code": "<NeoCard className=\"p-[var(--space-4)]\">\n  <div className=\"space-y-[var(--space-3)]\">\n    <div className=\"space-y-[var(--space-1)]\">\n      <h4 className=\"text-ui font-semibold tracking-[-0.01em]\">\n        Overlay unavailable\n      </h4>\n      <p className=\"text-label text-muted-foreground\">\n        Refresh to retry the sync and restore overlay content.\n      </p>\n    </div>\n    <Snackbar\n      message=\"Sync failed\"\n      actionLabel=\"Retry\"\n      onAction={() => {}}\n      tone=\"danger\"\n      width=\"full\"\n    />\n  </div>\n</NeoCard>",
            "preview": {
              "id": "prompts:cards:neo-card-demo:state:error"
            }
          }
        ]
      },
      {
        "id": "section-card-variants",
        "name": "SectionCard Variants",
        "tags": [
          "section",
          "card"
        ],
        "kind": "component",
        "code": "<div className=\"flex flex-col gap-[var(--space-4)]\">\n  <SectionCard>\n    <SectionCard.Header title=\"Neo (default)\" />\n    <SectionCard.Body>Content</SectionCard.Body>\n  </SectionCard>\n  <SectionCard variant=\"plain\">\n    <SectionCard.Header title=\"Plain\" />\n    <SectionCard.Body>Content</SectionCard.Body>\n  </SectionCard>\n</div>",
        "preview": {
          "id": "prompts:cards:section-card-variants"
        }
      },
      {
        "id": "page-shell",
        "name": "PageShell",
        "description": "Responsive page container. Enable the grid prop and wrap sections in col-span-* to align to the shell template.",
        "tags": [
          "layout",
          "shell"
        ],
        "kind": "component",
        "code": "<PageShell\n  grid\n  className=\"py-[var(--space-6)]\"\n  contentClassName=\"items-start\"\n>\n  <div className=\"col-span-full text-label font-semibold tracking-[0.02em] text-muted-foreground md:col-span-7\">\n    Page shell content\n  </div>\n  <div className=\"col-span-full flex items-center justify-end gap-[var(--space-3)] md:col-span-5 md:justify-self-end\">\n    <Button size=\"sm\">Primary</Button>\n    <Button size=\"sm\" variant=\"ghost\">\n      Secondary\n    </Button>\n  </div>\n</PageShell>",
        "preview": {
          "id": "prompts:layout:page-shell"
        }
      },
      {
        "id": "sheet-demo",
        "name": "Sheet",
        "tags": [
          "sheet",
          "overlay"
        ],
        "kind": "component",
        "code": "<Button size=\"sm\">Open</Button>\n<Sheet open>\n  <Card>\n    <CardHeader>\n      <CardTitle>Sheet</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <p className=\"text-ui\">Content</p>\n    </CardContent>\n  </Card>\n</Sheet>",
        "preview": {
          "id": "prompts:layout:sheet-demo"
        },
        "states": [
          {
            "id": "closed",
            "name": "Closed",
            "description": "Trigger rests on the base layer with the outline elevation token before the sheet opens.",
            "code": "<Card className=\"max-w-sm space-y-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n  <CardHeader>\n    <CardTitle>Sheet closed</CardTitle>\n    <CardDescription>\n      Use the trigger to lift the overlay from the base elevation.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      className=\"shadow-[var(--shadow-control)] focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n    >\n      Open sheet\n    </Button>\n  </CardContent>\n</Card>",
            "preview": {
              "id": "prompts:layout:sheet-demo:state:closed"
            }
          },
          {
            "id": "opening",
            "name": "Opening / loading",
            "description": "Soft elevation token and spinner communicate progress while the sheet animates in.",
            "code": "<Sheet\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-soft)]\"\n>\n  <CardHeader>\n    <CardTitle>Syncing tasks</CardTitle>\n    <CardDescription>\n      Keep content visible while the sheet animates into place.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-3)] rounded-card border border-border/40 bg-surface-2 p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n    <Spinner size=\"md\" />\n    <span className=\"text-ui text-muted-foreground\">Loading dashboard</span>\n  </CardContent>\n</Sheet>",
            "preview": {
              "id": "prompts:layout:sheet-demo:state:opening"
            }
          },
          {
            "id": "focus-trap",
            "name": "Focus trapped",
            "description": "Focus ring token highlights the primary action while the dialog trap holds keyboard focus.",
            "code": "const primaryActionRef = React.useRef<HTMLButtonElement | null>(null);\nReact.useEffect(() => {\n  primaryActionRef.current?.focus({ preventScroll: true });\n}, []);\n\n<Sheet\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-strong)]\"\n>\n  <CardHeader>\n    <CardTitle>Focus trapped</CardTitle>\n    <CardDescription>\n      Keyboard focus stays inside the sheet while it is open.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <p className=\"text-ui text-muted-foreground\">\n      Tab navigation cycles through the available controls.\n    </p>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      ref={primaryActionRef}\n      size=\"sm\"\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Save\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Cancel\n    </Button>\n  </CardFooter>\n</Sheet>",
            "preview": {
              "id": "prompts:layout:sheet-demo:state:focus-trap"
            }
          },
          {
            "id": "confirm-disabled",
            "name": "Confirm disabled",
            "description": "Primary confirmation remains disabled until supporting requirements are met.",
            "code": "<Sheet\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo)]\"\n>\n  <CardHeader>\n    <CardTitle>Archive reminders</CardTitle>\n    <CardDescription>\n      Keep confirm disabled until all checklist items are reviewed.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <div className=\"rounded-card border border-border/40 bg-surface p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n      <p className=\"text-ui text-muted-foreground\">\n        Archive includes 3 completed reminders.\n      </p>\n      <p className=\"text-ui text-muted-foreground\">\n        Complete the checklist to enable confirmation.\n      </p>\n    </div>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      disabled\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Confirm\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Cancel\n    </Button>\n  </CardFooter>\n</Sheet>",
            "preview": {
              "id": "prompts:layout:sheet-demo:state:confirm-disabled"
            }
          }
        ]
      },
      {
        "id": "modal-demo",
        "name": "Modal",
        "tags": [
          "modal",
          "overlay"
        ],
        "kind": "component",
        "code": "<Button size=\"sm\">Open</Button>\n<Modal open>\n  <Card>\n    <CardHeader>\n      <CardTitle>Modal</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <p className=\"text-ui\">Content</p>\n    </CardContent>\n    <CardFooter>\n      <Button size=\"sm\">Close</Button>\n    </CardFooter>\n  </Card>\n</Modal>",
        "preview": {
          "id": "prompts:layout:modal-demo"
        },
        "states": [
          {
            "id": "closed",
            "name": "Closed",
            "description": "Trigger sits on the outline elevation token until the modal is invoked.",
            "code": "<Card className=\"max-w-sm space-y-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n  <CardHeader>\n    <CardTitle>Modal closed</CardTitle>\n    <CardDescription>\n      Trigger sits idle at the base elevation until needed.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      className=\"shadow-[var(--shadow-control)] focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n    >\n      Open modal\n    </Button>\n  </CardContent>\n</Card>",
            "preview": {
              "id": "prompts:layout:modal-demo:state:closed"
            }
          },
          {
            "id": "loading",
            "name": "Opening / loading",
            "description": "Soft elevation token pairs with a spinner while the dialog content hydrates.",
            "code": "<Modal\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-soft)]\"\n>\n  <CardHeader>\n    <CardTitle>Confirm selection</CardTitle>\n    <CardDescription>\n      Surface a loader while the dialog hydrates.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"flex items-center gap-[var(--space-3)] rounded-card border border-border/40 bg-surface-2 p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n    <Spinner size=\"md\" />\n    <span className=\"text-ui text-muted-foreground\">Syncing choices...</span>\n  </CardContent>\n</Modal>",
            "preview": {
              "id": "prompts:layout:modal-demo:state:loading"
            }
          },
          {
            "id": "focus-trap",
            "name": "Focus trapped",
            "description": "Primary action receives the focus ring token while the trap keeps keyboard users inside the modal.",
            "code": "const confirmRef = React.useRef<HTMLButtonElement | null>(null);\nReact.useEffect(() => {\n  confirmRef.current?.focus({ preventScroll: true });\n}, []);\n\n<Modal\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo-strong)]\"\n>\n  <CardHeader>\n    <CardTitle>Keyboard locked in</CardTitle>\n    <CardDescription>\n      Focus moves to the primary action while the trap is active.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <p className=\"text-ui text-muted-foreground\">\n      Tab keeps focus within the modal until it closes.\n    </p>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      ref={confirmRef}\n      size=\"sm\"\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Confirm\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Back\n    </Button>\n  </CardFooter>\n</Modal>",
            "preview": {
              "id": "prompts:layout:modal-demo:state:focus-trap"
            }
          },
          {
            "id": "confirm-disabled",
            "name": "Confirm disabled",
            "description": "Destructive confirmation stays disabled until the warning is acknowledged.",
            "code": "<Modal\n  open\n  onClose={() => {}}\n  className=\"shadow-[var(--shadow-neo)]\"\n>\n  <CardHeader>\n    <CardTitle>Delete board</CardTitle>\n    <CardDescription>\n      Keep destructive confirmations disabled until acknowledged.\n    </CardDescription>\n  </CardHeader>\n  <CardContent className=\"space-y-[var(--space-2)]\">\n    <div className=\"rounded-card border border-border/40 bg-surface p-[var(--space-3)] shadow-[var(--shadow-outline-subtle)]\">\n      <p className=\"text-ui text-muted-foreground\">\n        Deleting removes all tasks and cannot be undone.\n      </p>\n    </div>\n  </CardContent>\n  <CardFooter className=\"flex justify-end gap-[var(--space-2)]\">\n    <Button\n      size=\"sm\"\n      disabled\n      className=\"focus-visible:ring-2 focus-visible:ring-[var(--focus)] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--surface-2))]\"\n    >\n      Delete\n    </Button>\n    <Button variant=\"ghost\" size=\"sm\" className=\"order-first\">\n      Cancel\n    </Button>\n  </CardFooter>\n</Modal>",
            "preview": {
              "id": "prompts:layout:modal-demo:state:confirm-disabled"
            }
          }
        ]
      },
      {
        "id": "split",
        "name": "Split",
        "tags": [
          "split",
          "layout",
          "theme"
        ],
        "kind": "component",
        "code": "<Split left={<div>Left</div>} right={<div>Right</div>} />",
        "preview": {
          "id": "prompts:layout:split"
        }
      },
      {
        "id": "title-bar",
        "name": "TitleBar",
        "tags": [
          "title",
          "bar"
        ],
        "kind": "component",
        "code": "<TitleBar label=\"Title\" />",
        "preview": {
          "id": "prompts:layout:title-bar"
        }
      },
      {
        "id": "header-tabs",
        "name": "HeaderTabs",
        "description": "Neomorphic segmented control used within headers",
        "kind": "component",
        "tags": [
          "tabs",
          "navigation"
        ],
        "axes": [
          {
            "id": "state",
            "label": "State",
            "type": "state",
            "values": [
              {
                "value": "Active"
              },
              {
                "value": "Inactive"
              },
              {
                "value": "Focus-visible"
              },
              {
                "value": "Disabled"
              }
            ]
          }
        ],
        "code": "<HeaderTabs\n  items={[\n    { key: \"plan\", label: \"Plan\", icon: <Circle aria-hidden=\"true\" /> },\n    {\n      key: \"review\",\n      label: \"Review\",\n      icon: <CircleDot aria-hidden=\"true\" />,\n      className: \"data-[state=inactive]:shadow-[0_0_0_calc(var(--hairline-w)*3)_hsl(var(--ring)/0.55)] data-[state=inactive]:outline-none\",\n    },\n    {\n      key: \"archive\",\n      label: \"Archive\",\n      icon: <CircleCheck aria-hidden=\"true\" />,\n      disabled: true,\n    },\n  ]}\n  value=\"plan\"\n  onChange={() => {}}\n  ariaLabel=\"Header tab demo\"\n/>",
        "preview": {
          "id": "ui:header-tabs:control"
        }
      },
      {
        "id": "header",
        "name": "Header",
        "description": "Workspace header with sticky support and segmented tabs",
        "kind": "component",
        "tags": [
          "header",
          "navigation"
        ],
        "axes": [
          {
            "id": "tab-state",
            "label": "Tab state",
            "type": "state",
            "values": [
              {
                "value": "Active"
              },
              {
                "value": "Inactive"
              },
              {
                "value": "Disabled"
              }
            ]
          },
          {
            "id": "underline-tone",
            "label": "Underline tone",
            "type": "variant",
            "values": [
              {
                "value": "Neutral"
              },
              {
                "value": "Brand"
              }
            ]
          }
        ],
        "code": "<div className=\"grid gap-[var(--space-4)] lg:grid-cols-2\">\n  <div className=\"rounded-card border border-card-hairline-60 bg-panel/80 p-[var(--space-5)] shadow-[var(--shadow-outline-subtle)]\">\n    <p className=\"mb-[var(--space-3)] text-label font-medium text-muted-foreground\">\n      Neutral underline (default)\n    </p>\n    <Header\n      eyebrow=\"Workspace\"\n      heading=\"Header\"\n      subtitle=\"Segmented navigation anchored to the header\"\n      underlineTone=\"neutral\"\n      icon={\n        <Circle\n          aria-hidden=\"true\"\n          className=\"h-[var(--space-5)] w-[var(--space-5)] text-primary\"\n        />\n      }\n      tabs={{\n        items: [\n          {\n            key: \"summary\",\n            label: \"Summary\",\n            icon: (\n              <Circle\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"timeline\",\n            label: \"Timeline\",\n            icon: (\n              <CircleDot\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"insights\",\n            label: \"Insights\",\n            icon: (\n              <CircleCheck\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n            disabled: true,\n          },\n        ],\n        value: \"summary\",\n        onChange: () => {},\n        ariaLabel: \"Header demo tabs (neutral underline)\",\n        size: \"md\",\n      }}\n      sticky={false}\n      topClassName=\"top-0\"\n    >\n      <p className=\"text-ui text-muted-foreground\">\n        Viewing\n        <span className=\"ml-[var(--space-1)] font-medium text-foreground\">\n          Summary\n        </span>\n      </p>\n    </Header>\n    <div className=\"mt-[var(--space-4)] grid gap-[var(--space-3)] sm:grid-cols-2\">\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Next milestone</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Launch sprint\n        </p>\n      </div>\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Team focus</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Deep work block\n        </p>\n      </div>\n    </div>\n  </div>\n  <div className=\"rounded-card border border-card-hairline-60 bg-panel/80 p-[var(--space-5)] shadow-[var(--shadow-outline-subtle)]\">\n    <p className=\"mb-[var(--space-3)] text-label font-medium text-muted-foreground\">\n      Brand underline\n    </p>\n    <Header\n      eyebrow=\"Workspace\"\n      heading=\"Header\"\n      subtitle=\"Segmented navigation anchored to the header\"\n      underlineTone=\"brand\"\n      icon={\n        <Circle\n          aria-hidden=\"true\"\n          className=\"h-[var(--space-5)] w-[var(--space-5)] text-primary\"\n        />\n      }\n      tabs={{\n        items: [\n          {\n            key: \"summary\",\n            label: \"Summary\",\n            icon: (\n              <Circle\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"timeline\",\n            label: \"Timeline\",\n            icon: (\n              <CircleDot\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n          },\n          {\n            key: \"insights\",\n            label: \"Insights\",\n            icon: (\n              <CircleCheck\n                aria-hidden=\"true\"\n                className=\"h-[var(--space-4)] w-[var(--space-4)]\"\n              />\n            ),\n            disabled: true,\n          },\n        ],\n        value: \"summary\",\n        onChange: () => {},\n        ariaLabel: \"Header demo tabs (brand underline)\",\n        size: \"md\",\n      }}\n      sticky={false}\n      topClassName=\"top-0\"\n    >\n      <p className=\"text-ui text-muted-foreground\">\n        Viewing\n        <span className=\"ml-[var(--space-1)] font-medium text-foreground\">\n          Summary\n        </span>\n      </p>\n    </Header>\n    <div className=\"mt-[var(--space-4)] grid gap-[var(--space-3)] sm:grid-cols-2\">\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Next milestone</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Launch sprint\n        </p>\n      </div>\n      <div className=\"rounded-card border border-card-hairline-60 bg-surface px-[var(--space-4)] py-[var(--space-3)]\">\n        <p className=\"text-label text-muted-foreground\">Team focus</p>\n        <p className=\"mt-[var(--space-1)] text-ui font-medium text-foreground\">\n          Deep work block\n        </p>\n      </div>\n    </div>\n  </div>\n</div>",
        "preview": {
          "id": "ui:header:tabs"
        }
      },
      {
        "id": "neomorphic-hero-frame",
        "name": "NeomorphicHeroFrame",
        "description": "Composable neomorphic frame with semantic wrappers, tokenized spacing, and an action row for tabs, search, and buttons.",
        "tags": [
          "hero",
          "layout",
          "tokens"
        ],
        "kind": "component",
        "code": "<NeomorphicHeroFrame\n  as=\"header\"\n  slots={{\n    tabs: {\n      node: (\n        <TabBar\n          items={[\n            { key: \"missions\", label: \"Missions\" },\n            { key: \"briefings\", label: \"Briefings\" },\n            { key: \"archive\", label: \"Archive\", disabled: true },\n          ]}\n          value=\"missions\"\n          onValueChange={() => {}}\n          ariaLabel=\"Switch mission focus\"\n          showBaseline\n        />\n      ),\n      label: \"Switch mission focus\",\n    },\n    search: {\n      node: (\n        <SearchBar\n          value=\"\"\n          onValueChange={() => {}}\n          placeholder=\"Search mission intel…\"\n          aria-label=\"Search mission intel\"\n          loading\n        />\n      ),\n      label: \"Search mission intel\",\n    },\n    actions: {\n      node: (\n        <div className=\"flex items-center gap-[var(--space-2)]\">\n          <ThemeToggle ariaLabel=\"Toggle theme\" className=\"shrink-0\" />\n          <Button size=\"sm\" variant=\"primary\" loading>\n            Deploy\n          </Button>\n          <Button size=\"sm\" variant=\"ghost\" disabled>\n            Disabled\n          </Button>\n        </div>\n      ),\n      label: \"Mission quick actions\",\n    },\n  }}\n>\n  <HeroGrid>\n    <HeroCol span={7} className=\"space-y-[var(--space-3)]\">\n      <p className=\"text-ui text-muted-foreground\">\n        Default variant uses r-card-lg radius with px-6/md:px-7/lg:px-8 tokens and aligns content to the 12-column grid.\n      </p>\n    </HeroCol>\n  </HeroGrid>\n</NeomorphicHeroFrame>\n\n<NeomorphicHeroFrame as=\"nav\" variant=\"compact\" align=\"between\">\n  <HeroGrid variant=\"compact\">\n    <HeroCol span={6}>\n      <p className=\"text-ui text-muted-foreground\">\n        Compact variant swaps to r-card-md radius with px-4/md:px-5/lg:px-6 spacing.\n      </p>\n    </HeroCol>\n  </HeroGrid>\n</NeomorphicHeroFrame>",
        "preview": {
          "id": "prompts:page-header:neomorphic-hero-frame"
        },
        "states": [
          {
            "id": "hero-tabs-hover",
            "name": "Tabs — Hover",
            "description": "Simulated hover applies the shadow-neo-soft token to lift the inactive hero tab without changing selection.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      {\n        key: \"briefings\",\n        label: \"Briefings\",\n        className: \"shadow-neo-soft\",\n      },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Preview hero tabs hover\"\n    variant=\"neo\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-hover"
            }
          },
          {
            "id": "hero-tabs-focus",
            "name": "Tabs — Focus-visible",
            "description": "Focus preview layers the standard neon ring with shadow-neo-soft so the active hero tab reads clearly for keyboard users.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      {\n        key: \"missions\",\n        label: \"Missions\",\n        className:\n          \"shadow-neo-soft ring-2 ring-[hsl(var(--ring))] ring-offset-2 ring-offset-[hsl(var(--card)/0.72)]\",\n      },\n      { key: \"briefings\", label: \"Briefings\" },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Preview hero tabs focus\"\n    variant=\"neo\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-focus"
            }
          },
          {
            "id": "hero-tabs-loading",
            "name": "Tabs — Loading",
            "description": "Loading state taps the built-in spinner and keeps the hovered glow via shadow-neo-soft while data syncs.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      {\n        key: \"briefings\",\n        label: \"Briefings\",\n        loading: true,\n        className: \"shadow-neo-soft\",\n      },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Preview hero tabs loading\"\n    variant=\"neo\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-loading"
            }
          }
        ]
      },
      {
        "id": "page-header-demo",
        "name": "PageHeader",
        "description": "Neomorphic hero header that defaults to a calm single-frame layout, forwards standard HTML attributes, and can be remapped with the as prop.",
        "tags": [
          "hero",
          "header"
        ],
        "kind": "component",
        "code": "<PageHeaderDemo />",
        "preview": {
          "id": "prompts:page-header:page-header-demo"
        },
        "states": [
          {
            "id": "page-header-search-focus",
            "name": "Search — Focus-visible",
            "description": "Focus ring pairs with shadow-neo-soft on the search field so keyboard focus mirrors the hero shell.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <SearchBar\n    value=\"mission intel\"\n    onValueChange={() => {}}\n    placeholder=\"Search mission intel…\"\n    aria-label=\"Search mission intel\"\n    fieldClassName=\"!shadow-neo-soft hover:!shadow-neo-soft active:!shadow-neo-soft ring-2 ring-[hsl(var(--ring))] ring-offset-2 ring-offset-[hsl(var(--bg))]\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:page-header-demo:state:page-header-search-focus"
            }
          },
          {
            "id": "page-header-search-loading",
            "name": "Search — Loading",
            "description": "Loading state mutes interactions and keeps the neo hover glow so progress is obvious without jitter.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <SearchBar\n    value=\"briefings\"\n    onValueChange={() => {}}\n    placeholder=\"Search mission intel…\"\n    aria-label=\"Search mission intel\"\n    loading\n    fieldClassName=\"!shadow-neo-soft hover:!shadow-neo-soft active:!shadow-neo-soft\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:page-header-demo:state:page-header-search-loading"
            }
          },
          {
            "id": "page-header-search-disabled",
            "name": "Search — Disabled",
            "description": "Disabled search keeps the field readable with reduced contrast while preserving the rounded neo shell.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <SearchBar\n    value=\"\"\n    onValueChange={() => {}}\n    placeholder=\"Search mission intel…\"\n    aria-label=\"Search mission intel\"\n    disabled\n    fieldClassName=\"!shadow-neo-soft hover:!shadow-neo-soft active:!shadow-neo-soft\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:page-header-demo:state:page-header-search-disabled"
            }
          }
        ]
      },
      {
        "id": "demo-header",
        "name": "DemoHeader",
        "description": "Composite header, hero, banner, and review highlights wired together for hand-off demos.",
        "tags": [
          "header",
          "hero",
          "layout"
        ],
        "kind": "component",
        "code": "function DemoHeaderShowcase() {\n  const [role, setRole] = React.useState(\"MID\");\n  const [fruit, setFruit] = React.useState(\"apple\");\n\n  return (\n    <DemoHeader\n      role={role}\n      onRoleChange={setRole}\n      fruit={fruit}\n      onFruitChange={setFruit}\n    />\n  );\n}",
        "preview": {
          "id": "prompts:page-header:demo-header"
        },
        "states": [
          {
            "id": "demo-header-cta-hover",
            "name": "Primary CTA — Hover",
            "description": "Primary action lifts with shadow-neo-soft to reflect the hover state used across hero quick actions.",
            "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button size=\"sm\" variant=\"primary\" className=\"shadow-neo-soft\">\n    Launch event\n  </Button>\n</div>",
            "preview": {
              "id": "prompts:page-header:demo-header:state:demo-header-cta-hover"
            }
          },
          {
            "id": "demo-header-cta-focus",
            "name": "Primary CTA — Focus-visible",
            "description": "Focus-visible styling adds the shared neon ring on top of shadow-neo-soft so keyboard users get parity with hover.",
            "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button\n    size=\"sm\"\n    variant=\"primary\"\n    className=\"shadow-neo-soft ring-2 ring-[hsl(var(--ring))] ring-offset-2 ring-offset-[hsl(var(--card)/0.7)]\"\n  >\n    Focused deploy\n  </Button>\n</div>",
            "preview": {
              "id": "prompts:page-header:demo-header:state:demo-header-cta-focus"
            }
          },
          {
            "id": "demo-header-cta-loading",
            "name": "Primary CTA — Loading",
            "description": "Loading CTA keeps the raised hover shadow while dimming interactions so progress reads instantly.",
            "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button size=\"sm\" variant=\"primary\" loading className=\"shadow-neo-soft\">\n    Saving\n  </Button>\n</div>",
            "preview": {
              "id": "prompts:page-header:demo-header:state:demo-header-cta-loading"
            }
          },
          {
            "id": "demo-header-cta-disabled",
            "name": "Ghost CTA — Disabled",
            "description": "Disabled secondary action leans on the built-in opacity tokens so the hero still communicates availability clearly.",
            "code": "<div className=\"flex items-center gap-[var(--space-2)]\">\n  <Button size=\"sm\" variant=\"ghost\" disabled className=\"shadow-neo-soft\">\n    Disabled action\n  </Button>\n</div>",
            "preview": {
              "id": "prompts:page-header:demo-header:state:demo-header-cta-disabled"
            }
          }
        ]
      },
      {
        "id": "hero",
        "name": "Hero",
        "description": "Stacked hero shell with search and actions — default spacing plus frame-ready paddingless variant.",
        "tags": [
          "hero",
          "layout"
        ],
        "kind": "component",
        "code": "<Hero\n  heading=\"Hero\"\n  eyebrow=\"Eyebrow\"\n  subtitle=\"Subtitle\"\n  sticky={false}\n  search={{ value: \"\", onValueChange: () => {}, round: true }}\n  actions={<Button size=\"sm\">Action</Button>}\n>\n  <div className=\"text-ui text-muted-foreground\">Body content</div>\n</Hero>\n\n<NeomorphicHeroFrame variant=\"dense\">\n  <Hero\n    heading=\"Frame-ready hero\"\n    eyebrow=\"No padding\"\n    subtitle=\"Outer shell handles spacing\"\n    sticky={false}\n    tone=\"supportive\"\n    frame={false}\n    rail={false}\n    padding=\"none\"\n  >\n    <div className=\"text-ui text-muted-foreground\">Body content</div>\n  </Hero>\n</NeomorphicHeroFrame>",
        "preview": {
          "id": "prompts:page-header:hero"
        },
        "states": [
          {
            "id": "hero-tabs-selected",
            "name": "Sub tabs — Selected",
            "description": "Active hero tab uses the accent gradient while shadow-neo-soft keeps the pill lifted inside the frame.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      {\n        key: \"briefings\",\n        label: \"Briefings\",\n        className: \"shadow-neo-soft\",\n      },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"briefings\"\n    onValueChange={() => {}}\n    ariaLabel=\"Hero sub tab selected preview\"\n    variant=\"neo\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:hero:state:hero-tabs-selected"
            }
          },
          {
            "id": "hero-tabs-disabled",
            "name": "Sub tabs — Disabled",
            "description": "Disabled hero tab inherits the dimmed opacity tokens while the rest of the bar keeps the neo hover treatment.",
            "code": "<div className=\"rounded-card r-card-lg border border-border/45 bg-card/70 p-[var(--space-3)] shadow-neo-soft\">\n  <TabBar\n    items={[\n      { key: \"missions\", label: \"Missions\" },\n      { key: \"briefings\", label: \"Briefings\" },\n      { key: \"archive\", label: \"Archive\", disabled: true },\n    ]}\n    value=\"missions\"\n    onValueChange={() => {}}\n    ariaLabel=\"Hero sub tab disabled preview\"\n    variant=\"neo\"\n  />\n</div>",
            "preview": {
              "id": "prompts:page-header:hero:state:hero-tabs-disabled"
            }
          }
        ]
      },
      {
        "id": "cat-companion",
        "name": "CatCompanion",
        "tags": [
          "cat",
          "companion"
        ],
        "kind": "component",
        "code": "<CatCompanion />",
        "preview": {
          "id": "prompts:misc:cat-companion"
        }
      }
    ],
    "complex": [
      {
        "id": "week-picker",
        "name": "WeekPicker",
        "description": "Sticky hero shell preview showing week totals, mock chips, and the jump-to-top action.",
        "tags": [
          "planner",
          "navigation",
          "week"
        ],
        "kind": "complex",
        "code": "<WeekPickerDemo />",
        "usage": [
          {
            "kind": "do",
            "title": "Keep week totals visible",
            "description": "Pair the hero subtitle with aggregated task counts so the picker summarizes week progress at a glance."
          },
          {
            "kind": "do",
            "title": "Highlight today's chip",
            "description": "Use the accent token on the current day to anchor focus while other chips mock mixed completion states."
          }
        ],
        "preview": {
          "id": "prompts:planner:week-picker"
        }
      },
      {
        "id": "bottom-nav",
        "name": "BottomNav",
        "description": "Mobile Planner nav demo showing active, hover, focus-visible, disabled, and syncing tabs styled with tokens.",
        "tags": [
          "nav",
          "bottom"
        ],
        "kind": "complex",
        "code": "<BottomNavStatesDemo />",
        "preview": {
          "id": "prompts:planner:bottom-nav"
        },
        "states": [
          {
            "id": "active",
            "name": "Active tab",
            "description": "Accent text plus the theme ring token anchor the current Planner route.",
            "code": "<BottomNavStatesDemo mode=\"active\" />",
            "preview": {
              "id": "prompts:planner:bottom-nav:state:active"
            }
          },
          {
            "id": "hover",
            "name": "Hover tab",
            "description": "Cursor hover brightens the label and nudges the button using motion-safe elevation cues.",
            "code": "<BottomNavStatesDemo mode=\"hover\" />",
            "preview": {
              "id": "prompts:planner:bottom-nav:state:hover"
            }
          },
          {
            "id": "focus-visible",
            "name": "Keyboard focus",
            "description": "Press Tab to cycle across tabs; focus-visible:ring-[var(--theme-ring)] draws the accessible theme ring for keyboard travelers.",
            "code": "<BottomNavStatesDemo mode=\"focus-visible\" />",
            "preview": {
              "id": "prompts:planner:bottom-nav:state:focus-visible"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled tab",
            "description": "Muted foreground copy and the global disabled opacity token signal unavailable sections.",
            "code": "<BottomNavStatesDemo mode=\"disabled\" />",
            "preview": {
              "id": "prompts:planner:bottom-nav:state:disabled"
            }
          },
          {
            "id": "syncing",
            "name": "Syncing tab",
            "description": "A compact spinner with accent borders communicates background sync progress beside the label.",
            "code": "<BottomNavStatesDemo mode=\"syncing\" />",
            "preview": {
              "id": "prompts:planner:bottom-nav:state:syncing"
            }
          }
        ]
      },
      {
        "id": "dashboard-card",
        "name": "DashboardCard",
        "tags": [
          "dashboard",
          "card"
        ],
        "kind": "complex",
        "code": "<DashboardCard title=\"Demo\" />",
        "preview": {
          "id": "prompts:homepage:dashboard-card"
        }
      },
      {
        "id": "dashboard-list",
        "name": "DashboardList",
        "tags": [
          "dashboard",
          "list"
        ],
        "kind": "complex",
        "code": "<DashboardList\n  items={[\n    { id: \"sync\", title: \"Strategy sync\", meta: \"Today\" },\n    { id: \"retro\", title: \"Retro prep\", meta: \"Wed\" },\n  ]}\n  getKey={(item) => item.id}\n  itemClassName=\"flex justify-between text-ui\"\n  empty=\"No highlights\"\n  renderItem={(item) => (\n    <>\n      <span>{item.title}</span>\n      <span className=\"text-label text-muted-foreground\">{item.meta}</span>\n    </>\n  )}\n/>",
        "preview": {
          "id": "prompts:homepage:dashboard-list"
        }
      },
      {
        "id": "isometric-room",
        "name": "IsometricRoom",
        "tags": [
          "room",
          "3d"
        ],
        "kind": "complex",
        "code": "<IsometricRoom variant=\"aurora\" />",
        "preview": {
          "id": "prompts:homepage:isometric-room"
        }
      },
      {
        "id": "quick-action-grid",
        "name": "QuickActionGrid",
        "description": "Maps quick action configs to styled planner shortcuts",
        "tags": [
          "actions",
          "planner"
        ],
        "kind": "complex",
        "code": "<QuickActionGrid\n  actions={[\n    { href: \"/planner\", label: \"Planner Today\" },\n    { href: \"/goals\", label: \"New Goal\", tone: \"accent\" },\n    { href: \"/reviews\", label: \"New Review\", tone: \"accent\" },\n  ]}\n  layout=\"inline\"\n  buttonSize=\"lg\"\n  hoverLift\n/>",
        "preview": {
          "id": "prompts:homepage:quick-action-grid"
        }
      },
      {
        "id": "hero-planner-cards",
        "name": "HeroPlannerCards",
        "description": "Composite hero surface combining quick actions, overview metrics, and planner highlights for the landing page.",
        "tags": [
          "planner",
          "homepage",
          "hero"
        ],
        "kind": "complex",
        "code": "<SectionCard aria-labelledby=\"planner-overview-heading\">\n  <SectionCard.Header\n    id=\"planner-overview-heading\"\n    sticky={false}\n    title=\"Planner overview\"\n    titleAs=\"h2\"\n    titleClassName=\"text-title font-semibold tracking-[-0.01em]\"\n  />\n  <SectionCard.Body>\n    <HeroPlannerCards\n      variant=\"aurora\"\n      plannerOverviewProps={plannerOverviewProps}\n      highlights={weeklyHighlights}\n    />\n  </SectionCard.Body>\n</SectionCard>",
        "preview": {
          "id": "prompts:homepage:hero-planner-cards"
        }
      },
      {
        "id": "hero-portrait-frame",
        "name": "HeroPortraitFrame",
        "description": "Circular neumorphic portrait frame with lavender glow, glitch accent rim, and configurable `frame` toggle built from semantic tokens.",
        "tags": [
          "hero",
          "portrait",
          "glitch"
        ],
        "kind": "complex",
        "code": "<div className=\"flex flex-wrap items-center justify-center gap-[var(--space-3)]\">\n  <HeroPortraitFrame\n    imageSrc=\"/hero_image.png\"\n    imageAlt=\"Illustration of the Planner hero floating above a holographic dashboard with full frame treatment\"\n  />\n  <HeroPortraitFrame\n    frame={false}\n    imageSrc=\"/hero_image.png\"\n    imageAlt=\"Illustration of the Planner hero floating above a holographic dashboard without frame treatment\"\n  />\n</div>",
        "preview": {
          "id": "prompts:homepage:hero-portrait-frame"
        }
      },
      {
        "id": "welcome-hero-figure",
        "name": "WelcomeHeroFigure",
        "description": "Hero automation figure framed in a haloed neumorphic ring with eager loading tuned for the landing experience.",
        "tags": [
          "hero",
          "figure",
          "neomorphic"
        ],
        "kind": "complex",
        "code": "<WelcomeHeroFigure />",
        "preview": {
          "id": "prompts:homepage:welcome-hero-figure"
        }
      },
      {
        "id": "review-surface",
        "name": "ReviewSurface",
        "tags": [
          "review",
          "surface"
        ],
        "kind": "complex",
        "code": "<div className=\"w-[calc(var(--space-8)*3.5)]\">\n  <ReviewSurface padding=\"md\" tone=\"muted\">\n    <div className=\"text-ui text-foreground/70\">Surface content</div>\n  </ReviewSurface>\n</div>",
        "preview": {
          "id": "prompts:reviews:review-surface"
        }
      },
      {
        "id": "review-slider-track",
        "name": "ReviewSliderTrack",
        "tags": [
          "review",
          "slider"
        ],
        "kind": "complex",
        "code": "<div className=\"w-[calc(var(--space-8)*3.5)]\">\n  <ReviewSurface padding=\"inline\" className=\"relative h-[var(--control-h-lg)]\">\n    <ReviewSliderTrack value={7} tone=\"score\" variant=\"input\" />\n  </ReviewSurface>\n</div>",
        "preview": {
          "id": "prompts:reviews:review-slider-track"
        }
      },
      {
        "id": "score-meter",
        "name": "ScoreMeter",
        "tags": [
          "review",
          "slider",
          "summary"
        ],
        "kind": "complex",
        "code": "<div className=\"w-[calc(var(--space-8)*3.5)]\">\n  <ScoreMeter\n    label=\"Score\"\n    value={8}\n    detail={<span>Great positioning</span>}\n  />\n</div>",
        "preview": {
          "id": "prompts:reviews:score-meter"
        }
      },
      {
        "id": "review-list-item",
        "name": "ReviewListItem",
        "tags": [
          "review",
          "list"
        ],
        "kind": "complex",
        "code": "<ReviewListItem review={demoReview} />",
        "preview": {
          "id": "prompts:reviews:review-list-item"
        }
      },
      {
        "id": "lane-opponent-form",
        "name": "LaneOpponentForm",
        "tags": [
          "lane",
          "opponent"
        ],
        "kind": "complex",
        "code": "<LaneOpponentForm lane=\"Ashe/Lulu\" opponent=\"Draven/Thresh\" commitMeta={() => {}} />",
        "preview": {
          "id": "prompts:reviews:lane-opponent-form"
        }
      },
      {
        "id": "result-score-section",
        "name": "ResultScoreSection",
        "tags": [
          "result",
          "score"
        ],
        "kind": "complex",
        "code": "<ResultScoreSection result=\"Win\" score={5} commitMeta={() => {}} />",
        "preview": {
          "id": "prompts:reviews:result-score-section"
        }
      },
      {
        "id": "pillars-selector",
        "name": "PillarsSelector",
        "tags": [
          "pillars",
          "selector"
        ],
        "kind": "complex",
        "code": "<PillarsSelector pillars={[]} commitMeta={() => {}} />",
        "preview": {
          "id": "prompts:reviews:pillars-selector"
        }
      },
      {
        "id": "timestamp-markers",
        "name": "TimestampMarkers",
        "tags": [
          "timestamp",
          "marker"
        ],
        "kind": "complex",
        "code": "<TimestampMarkers markers={[]} commitMeta={() => {}} />",
        "preview": {
          "id": "prompts:reviews:timestamp-markers"
        }
      },
      {
        "id": "goals-progress",
        "name": "GoalsProgress",
        "tags": [
          "goals",
          "progress"
        ],
        "kind": "complex",
        "code": "<GoalsProgress total={3} pct={50} />",
        "preview": {
          "id": "prompts:goals:goals-progress"
        }
      },
      {
        "id": "goal-list-demo",
        "name": "GoalListDemo",
        "tags": [
          "goal",
          "list"
        ],
        "kind": "complex",
        "code": "<GoalListDemo />",
        "preview": {
          "id": "prompts:goals:goal-list-demo"
        }
      },
      {
        "id": "reminders-tab",
        "name": "RemindersTab",
        "tags": [
          "reminders",
          "tab"
        ],
        "kind": "complex",
        "code": "<RemindersProvider>\n  <RemindersTab />\n</RemindersProvider>",
        "preview": {
          "id": "prompts:goals:reminders-tab"
        }
      },
      {
        "id": "timer-ring",
        "name": "TimerRing",
        "tags": [
          "timer",
          "ring"
        ],
        "kind": "complex",
        "code": "<TimerRing pct={42} size=\"l\" />",
        "preview": {
          "id": "prompts:goals:timer-ring"
        }
      },
      {
        "id": "timer-tab",
        "name": "TimerTab",
        "tags": [
          "timer",
          "tab"
        ],
        "kind": "complex",
        "code": "<TimerTab />",
        "preview": {
          "id": "prompts:goals:timer-tab"
        }
      },
      {
        "id": "progress-ring-icon",
        "name": "ProgressRingIcon",
        "tags": [
          "icon",
          "progress"
        ],
        "kind": "complex",
        "code": "<ProgressRingIcon pct={50} size=\"m\" />",
        "preview": {
          "id": "prompts:goals:progress-ring-icon"
        }
      },
      {
        "id": "timer-ring-icon",
        "name": "TimerRingIcon",
        "tags": [
          "icon",
          "timer"
        ],
        "kind": "complex",
        "code": "<TimerRingIcon pct={75} size=\"l\" />",
        "preview": {
          "id": "prompts:goals:timer-ring-icon"
        }
      },
      {
        "id": "side-selector",
        "name": "SideSelector",
        "tags": [
          "side",
          "selector"
        ],
        "kind": "complex",
        "code": "<SideSelector />\n<SideSelector disabled />",
        "preview": {
          "id": "prompts:team:side-selector"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "The accent hover wash previews the flicker animation for pointer users before they commit to a side.",
            "code": "<SideSelector\n  value=\"Blue\"\n  onChange={() => {}}\n  className=\"bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:team:side-selector:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "Press Tab to land on the switch. The ring token outlines the control while Space/Enter flip teams and ← → choose Blue or Red directly.",
            "code": "<SideSelector\n  value=\"Blue\"\n  onChange={() => {}}\n  className=\"ring-2 ring-[var(--ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
            "preview": {
              "id": "prompts:team:side-selector:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "Selecting Red slides the indicator and lights the right label. Space toggles sides, and the arrow keys jump the indicator without flicker.",
            "code": "<SideSelector value=\"Red\" onChange={() => {}} />",
            "preview": {
              "id": "prompts:team:side-selector:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "The disabled opacity token keeps the rail visible while blocking Space, Enter, and arrow key input during lockouts.",
            "code": "<SideSelector value=\"Blue\" onChange={() => {}} disabled />",
            "preview": {
              "id": "prompts:team:side-selector:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "description": "While matchup data syncs, loading dims the selector and ignores toggles until the request resolves.",
            "code": "<SideSelector value=\"Blue\" onChange={() => {}} loading />",
            "preview": {
              "id": "prompts:team:side-selector:state:loading"
            }
          }
        ]
      },
      {
        "id": "champ-list-editor",
        "name": "ChampListEditor",
        "description": "Shared champion list editor with toggleable state.",
        "tags": [
          "champion",
          "editor"
        ],
        "kind": "complex",
        "code": "<ChampListEditor\n  list={list}\n  onChange={setList}\n  editing={editing}\n  emptyLabel=\"-\"\n  viewClassName=\"champ-badges mt-[var(--space-1)] flex flex-wrap gap-[var(--space-2)]\"\n/>",
        "preview": {
          "id": "prompts:team:champ-list-editor"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "Hovering a badge in edit mode lifts it with the hover token so you can see which champion tag you are about to change.",
            "code": "<ChampListEditor\n  list={[\"Ashe\", \"Lulu\"]}\n  onChange={() => {}}\n  editing\n  pillClassName=\"bg-[--hover] border-ring\"\n/>",
            "preview": {
              "id": "prompts:team:champ-list-editor:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "Press Tab into the inline input to reveal the theme-ring outline; Enter creates a new slot and Backspace clears empty fields.",
            "code": "<ChampListEditor\n  list={[\"Ashe\", \"Lulu\"]}\n  onChange={() => {}}\n  editing\n  inputClassName=\"ring-2 ring-[var(--theme-ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
            "preview": {
              "id": "prompts:team:champ-list-editor:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / editing",
            "description": "Toggling editing exposes the glitch pill inputs so you can adjust the roster without leaving the review.",
            "code": "<ChampListEditor\n  list={[\"Ashe\", \"Lulu\"]}\n  onChange={() => {}}\n  editing\n/>",
            "preview": {
              "id": "prompts:team:champ-list-editor:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "When a session locks, wrap the editor in the disabled opacity token to freeze both pointer and keyboard edits.",
            "code": "<div className=\"pointer-events-none opacity-disabled\">\n  <ChampListEditor\n    list={[\"Ashe\", \"Lulu\"]}\n    onChange={() => {}}\n    editing\n  />\n</div>",
            "preview": {
              "id": "prompts:team:champ-list-editor:state:disabled"
            }
          }
        ]
      },
      {
        "id": "pillar-badge",
        "name": "PillarBadge",
        "tags": [
          "pillar",
          "badge"
        ],
        "kind": "complex",
        "code": "<PillarBadge pillar=\"Wave\" />\n<PillarBadge pillar=\"Trading\" active />",
        "preview": {
          "id": "prompts:team:pillar-badge"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "Interactive badges lift with the neo shadow token on hover so the chip reads as clickable before you tap.",
            "code": "<PillarBadge\n  pillar=\"Vision\"\n  interactive\n  className=\"shadow-neo-strong\"\n/>",
            "preview": {
              "id": "prompts:team:pillar-badge:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "Press Tab to move onto a badge; the theme ring outline appears and Space or Enter toggles its active gradient.",
            "code": "<PillarBadge\n  pillar=\"Vision\"\n  interactive\n  className=\"ring-2 ring-[var(--theme-ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
            "preview": {
              "id": "prompts:team:pillar-badge:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "Active badges glow with the gradient overlay while `aria-pressed` stays in sync for assistive tech.",
            "code": "<PillarBadge pillar=\"Vision\" interactive active />",
            "preview": {
              "id": "prompts:team:pillar-badge:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "Disable the badge when the underlying pillar cannot change; opacity and pointer locks communicate the frozen state.",
            "code": "<PillarBadge pillar=\"Vision\" interactive disabled />",
            "preview": {
              "id": "prompts:team:pillar-badge:state:disabled"
            }
          }
        ]
      },
      {
        "id": "pillar-selector",
        "name": "PillarSelector",
        "tags": [
          "pillar",
          "selector"
        ],
        "kind": "complex",
        "code": "<PillarSelector />",
        "preview": {
          "id": "prompts:team:pillar-selector"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "Hovering a chip raises the group with the soft neo shadow so the upcoming selection is obvious to pointer users.",
            "code": "<PillarSelector\n  className=\"rounded-card p-[var(--space-2)] shadow-[var(--shadow-neo-soft)]\"\n/>",
            "preview": {
              "id": "prompts:team:pillar-selector:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "Press Tab to focus the selector; the ring token outlines the tray while Space toggles the focused badge and arrow keys move between pillars.",
            "code": "<PillarSelector\n  className=\"rounded-card p-[var(--space-2)] ring-2 ring-[var(--ring)] ring-offset-2 ring-offset-[var(--background)]\"\n/>",
            "preview": {
              "id": "prompts:team:pillar-selector:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "Selected pillars glow with the gradient indicator; Space toggles the highlighted badge without collapsing the row.",
            "code": "<PillarSelector value={[\"Wave\", \"Trading\"]} />",
            "preview": {
              "id": "prompts:team:pillar-selector:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "Apply the disabled token when review notes are locked so neither pointer nor keyboard input can adjust pillars.",
            "code": "<PillarSelector className=\"pointer-events-none opacity-disabled\" />",
            "preview": {
              "id": "prompts:team:pillar-selector:state:disabled"
            }
          }
        ]
      },
      {
        "id": "role-selector",
        "name": "RoleSelector",
        "tags": [
          "role",
          "selector"
        ],
        "kind": "complex",
        "code": "<RoleSelector value={role} onChange={setRole} />",
        "preview": {
          "id": "prompts:team:role-selector"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "The segmented tray floats with the soft neon shadow on hover so the active lane stays anchored while exploring other roles.",
            "code": "<RoleSelector\n  value=\"MID\"\n  onChange={() => {}}\n  className=\"shadow-[var(--shadow-neo-soft)]\"\n/>",
            "preview": {
              "id": "prompts:team:role-selector:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "Press Tab to enter the segmented control; the focus token outlines the rail and arrow keys cycle lanes while Space or Enter confirms.",
            "code": "<RoleSelector\n  value=\"MID\"\n  onChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)] ring-offset-2 ring-offset-[var(--btn-bg)]\"\n/>",
            "preview": {
              "id": "prompts:team:role-selector:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "Choosing a lane slides the glitch indicator behind the tab and updates the polite live region for screen readers.",
            "code": "<RoleSelector value=\"BOT\" onChange={() => {}} />",
            "preview": {
              "id": "prompts:team:role-selector:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "Dim the control with the disabled opacity token when the review locks so neither pointer nor keyboard events change the selection.",
            "code": "<RoleSelector\n  value=\"MID\"\n  onChange={() => {}}\n  className=\"pointer-events-none opacity-disabled\"\n/>",
            "preview": {
              "id": "prompts:team:role-selector:state:disabled"
            }
          }
        ]
      },
      {
        "id": "theme-picker",
        "name": "ThemePicker",
        "tags": [
          "theme",
          "picker"
        ],
        "kind": "complex",
        "code": "<ThemePicker variant=\"lg\" onVariantChange={() => {}} />",
        "preview": {
          "id": "prompts:components:theme-picker"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "The shared hover token fills the trigger so pointer users preview the upcoming theme before selection.",
            "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-picker:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "Keyboard focus relies on the global `focus-visible` token, outlining the trigger without introducing extra wrappers.",
            "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)]\"\n  buttonClassName=\"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-picker:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "When the dropdown is open we pin the trigger with the shared active token so the current theme remains grounded.",
            "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  buttonClassName=\"bg-[--active] data-[open=true]:bg-[--active]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-picker:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "The disabled opacity token mutes the control and removes pointer events while preserving the theme label.",
            "code": "<ThemePicker variant=\"lg\" onVariantChange={() => {}} disabled />",
            "preview": {
              "id": "prompts:components:theme-picker:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "description": "List options can mark the active variant as loading to stream theme assets, showing the spinner token inside the dropdown.",
            "code": "<ThemePicker\n  variant=\"lg\"\n  onVariantChange={() => {}}\n  loadingVariant=\"lg\"\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-picker:state:loading"
            }
          }
        ]
      },
      {
        "id": "background-picker",
        "name": "BackgroundPicker",
        "tags": [
          "background",
          "picker"
        ],
        "kind": "complex",
        "code": "<BackgroundPicker bg={0} onBgChange={() => {}} />",
        "preview": {
          "id": "prompts:components:background-picker"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "The hover fill token mirrors ThemePicker so background previews share the same affordance pattern.",
            "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:background-picker:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "The `focus-visible` utility outlines the trigger directly, keeping the indicator consistent with other settings controls.",
            "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)]\"\n  buttonClassName=\"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n/>",
            "preview": {
              "id": "prompts:components:background-picker:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "While the menu is open we keep the active token applied so the current background is obvious as you explore options.",
            "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  buttonClassName=\"bg-[--active] data-[open=true]:bg-[--active]\"\n/>",
            "preview": {
              "id": "prompts:components:background-picker:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "Disabled opacity tokens dim the control and swatch preview while removing pointer affordances.",
            "code": "<BackgroundPicker bg={0} onBgChange={() => {}} disabled />",
            "preview": {
              "id": "prompts:components:background-picker:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "description": "When wallpapers stream in, the loading flag shows the spinner token beside the active swatch inside the dropdown.",
            "code": "<BackgroundPicker\n  bg={0}\n  onBgChange={() => {}}\n  loadingBackground={0}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:background-picker:state:loading"
            }
          }
        ]
      },
      {
        "id": "settings-select",
        "name": "SettingsSelect",
        "tags": [
          "select",
          "settings"
        ],
        "kind": "complex",
        "code": "<div className=\"stack-sm\">\n  <SettingsSelect\n    ariaLabel=\"Theme\"\n    prefixLabel=\"Theme\"\n    items={[{ value: \"lg\", label: \"Glitch\" }]}\n    value=\"lg\"\n  />\n  <SettingsSelect\n    ariaLabel=\"Theme (disabled)\"\n    prefixLabel=\"Theme (disabled)\"\n    items={[{ value: \"lg\", label: \"Glitch\" }]}\n    value=\"lg\"\n    disabled\n  />\n</div>",
        "preview": {
          "id": "prompts:components:settings-select"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "Hover uses the shared token fill so every settings row communicates interactivity the same way.",
            "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }, { value: \"aurora\", label: \"Aurora\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:settings-select:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "`focus-visible` keeps the focus ring within the control, matching buttons and toggles in the settings column.",
            "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }, { value: \"aurora\", label: \"Aurora\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  className=\"ring-2 ring-[var(--focus)]\"\n  buttonClassName=\"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--focus)]\"\n/>",
            "preview": {
              "id": "prompts:components:settings-select:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "An active dropdown keeps the trigger in the shared active fill so you never lose track of the selected row.",
            "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }, { value: \"aurora\", label: \"Aurora\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  buttonClassName=\"bg-[--active] data-[open=true]:bg-[--active]\"\n/>",
            "preview": {
              "id": "prompts:components:settings-select:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "The global disabled token desaturates the trigger and removes pointer events while keeping the label readable.",
            "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[{ value: \"lg\", label: \"Glitch\" }]}\n  value=\"lg\"\n  onChange={() => {}}\n  disabled\n/>",
            "preview": {
              "id": "prompts:components:settings-select:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "description": "Individual options can stream data; marking one as loading reveals the spinner token beside the label in the dropdown.",
            "code": "<SettingsSelect\n  ariaLabel=\"Theme\"\n  prefixLabel=\"Theme\"\n  items={[\n    { value: \"lg\", label: \"Glitch\", loading: true },\n    { value: \"aurora\", label: \"Aurora\" },\n  ]}\n  value=\"lg\"\n  onChange={() => {}}\n  buttonClassName=\"bg-[--hover] hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:settings-select:state:loading"
            }
          }
        ]
      },
      {
        "id": "theme-toggle",
        "name": "ThemeToggle",
        "tags": [
          "theme",
          "toggle"
        ],
        "kind": "complex",
        "code": "<ThemeToggle />",
        "preview": {
          "id": "prompts:components:theme-toggle"
        },
        "states": [
          {
            "id": "hover",
            "name": "Hover",
            "description": "Applying the hover token to the dropdown trigger keeps the toggle consistent with other select controls.",
            "code": "<ThemeToggle\n  className=\"[&_button[aria-haspopup='listbox']]:bg-[--hover] [&_button[aria-haspopup='listbox']]:hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-toggle:state:hover"
            }
          },
          {
            "id": "focus",
            "name": "Focus-visible",
            "description": "The nested `focus-visible` utility outlines the variant trigger without needing extra DOM wrappers.",
            "code": "<ThemeToggle\n  className=\"[&_button[aria-haspopup='listbox']]:outline-none [&_button[aria-haspopup='listbox']]:ring-2 [&_button[aria-haspopup='listbox']]:ring-[var(--focus)] focus-visible:[&_button[aria-haspopup='listbox']]:outline-none focus-visible:[&_button[aria-haspopup='listbox']]:ring-2 focus-visible:[&_button[aria-haspopup='listbox']]:ring-[var(--focus)]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-toggle:state:focus"
            }
          },
          {
            "id": "active",
            "name": "Active / selected",
            "description": "When the variant menu opens we swap to the shared active token so the current selection stays anchored.",
            "code": "<ThemeToggle\n  className=\"[&_button[aria-haspopup='listbox']]:bg-[--active] [&_button[aria-haspopup='listbox'][data-open='true']]:bg-[--active] [&_button[aria-haspopup='listbox']]:hover:bg-[--hover]\"\n/>",
            "preview": {
              "id": "prompts:components:theme-toggle:state:active"
            }
          },
          {
            "id": "disabled",
            "name": "Disabled",
            "description": "Disabling the control mutes both the cycle button and dropdown using the global disabled token.",
            "code": "<ThemeToggle\n  cycleDisabled\n  className=\"pointer-events-none opacity-disabled\"\n/>",
            "preview": {
              "id": "prompts:components:theme-toggle:state:disabled"
            }
          },
          {
            "id": "loading",
            "name": "Loading",
            "description": "Longer background transitions can show progress by enabling the built-in loading spinner on the cycle button.",
            "code": "<ThemeToggle cycleLoading />",
            "preview": {
              "id": "prompts:components:theme-toggle:state:loading"
            }
          }
        ]
      }
    ],
    "token": []
  }
} satisfies GalleryRegistryPayload;

export const galleryPreviewRoutes = [
  {
    "slug": "section-buttons--entry-badge--preview-ui-badge-tones--theme-aurora",
    "previewId": "ui:badge:tones",
    "entryId": "badge",
    "entryName": "Badge",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "neutral",
            "label": "Neutral"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "top-lane",
            "label": "Top lane"
          },
          {
            "value": "jungle",
            "label": "Jungle"
          },
          {
            "value": "mid-lane",
            "label": "Mid lane"
          },
          {
            "value": "bot-lane",
            "label": "Bot lane"
          },
          {
            "value": "support",
            "label": "Support"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "interactive",
            "label": "Interactive"
          },
          {
            "value": "selected",
            "label": "Selected"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-badge--preview-ui-badge-tones--theme-lg",
    "previewId": "ui:badge:tones",
    "entryId": "badge",
    "entryName": "Badge",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "neutral",
            "label": "Neutral"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "top-lane",
            "label": "Top lane"
          },
          {
            "value": "jungle",
            "label": "Jungle"
          },
          {
            "value": "mid-lane",
            "label": "Mid lane"
          },
          {
            "value": "bot-lane",
            "label": "Bot lane"
          },
          {
            "value": "support",
            "label": "Support"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "interactive",
            "label": "Interactive"
          },
          {
            "value": "selected",
            "label": "Selected"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-matrix--theme-aurora",
    "previewId": "ui:button:matrix",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-matrix--theme-lg",
    "previewId": "ui:button:matrix",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-active--state-active--theme-aurora",
    "previewId": "ui:button:state:active",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-active--state-active--theme-lg",
    "previewId": "ui:button:state:active",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-default--state-default--theme-aurora",
    "previewId": "ui:button:state:default",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-default--state-default--theme-lg",
    "previewId": "ui:button:state:default",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:button:state:disabled",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:button:state:disabled",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-focus--state-focus--theme-aurora",
    "previewId": "ui:button:state:focus",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "focus",
    "stateName": "Focus",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-focus--state-focus--theme-lg",
    "previewId": "ui:button:state:focus",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "focus",
    "stateName": "Focus",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-hover--state-hover--theme-aurora",
    "previewId": "ui:button:state:hover",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-hover--state-hover--theme-lg",
    "previewId": "ui:button:state:hover",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-loading--state-loading--theme-aurora",
    "previewId": "ui:button:state:loading",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-button--preview-ui-button-state-loading--state-loading--theme-lg",
    "previewId": "ui:button:state:loading",
    "entryId": "button",
    "entryName": "Button",
    "sectionId": "buttons",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tone",
        "label": "Tone",
        "type": "variant",
        "options": [
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "accent",
            "label": "Accent"
          },
          {
            "value": "info",
            "label": "Info"
          },
          {
            "value": "danger",
            "label": "Danger"
          }
        ]
      },
      {
        "key": "axis-size",
        "label": "Size & icons",
        "type": "variant",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "extra-large",
            "label": "Extra large"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-matrix--theme-aurora",
    "previewId": "ui:icon-button:matrix",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-matrix--theme-lg",
    "previewId": "ui:icon-button:matrix",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-active--state-active--theme-aurora",
    "previewId": "ui:icon-button:state:active",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-active--state-active--theme-lg",
    "previewId": "ui:icon-button:state:active",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-default--state-default--theme-aurora",
    "previewId": "ui:icon-button:state:default",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-default--state-default--theme-lg",
    "previewId": "ui:icon-button:state:default",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:icon-button:state:disabled",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:icon-button:state:disabled",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-focus--state-focus--theme-aurora",
    "previewId": "ui:icon-button:state:focus",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "focus",
    "stateName": "Focus",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-focus--state-focus--theme-lg",
    "previewId": "ui:icon-button:state:focus",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "focus",
    "stateName": "Focus",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-hover--state-hover--theme-aurora",
    "previewId": "ui:icon-button:state:hover",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-hover--state-hover--theme-lg",
    "previewId": "ui:icon-button:state:hover",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-loading--state-loading--theme-aurora",
    "previewId": "ui:icon-button:state:loading",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-loading--state-loading--theme-lg",
    "previewId": "ui:icon-button:state:loading",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-primary--state-primary--theme-aurora",
    "previewId": "ui:icon-button:state:primary",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "primary",
    "stateName": "Primary",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-primary--state-primary--theme-lg",
    "previewId": "ui:icon-button:state:primary",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "primary",
    "stateName": "Primary",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-primary-active--state-primary-active--theme-aurora",
    "previewId": "ui:icon-button:state:primary-active",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "primary-active",
    "stateName": "Primary Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-primary-active--state-primary-active--theme-lg",
    "previewId": "ui:icon-button:state:primary-active",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "primary-active",
    "stateName": "Primary Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-primary-hover--state-primary-hover--theme-aurora",
    "previewId": "ui:icon-button:state:primary-hover",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "primary-hover",
    "stateName": "Primary Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-icon-button--preview-ui-icon-button-state-primary-hover--state-primary-hover--theme-lg",
    "previewId": "ui:icon-button:state:primary-hover",
    "entryId": "icon-button",
    "entryName": "IconButton",
    "sectionId": "buttons",
    "stateId": "primary-hover",
    "stateName": "Primary Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "ghost",
            "label": "Ghost"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          },
          {
            "value": "primary",
            "label": "Primary"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "primary",
            "label": "Primary"
          },
          {
            "value": "primary-hover",
            "label": "Primary Hover"
          },
          {
            "value": "primary-active",
            "label": "Primary Active"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-active--state-active--theme-aurora",
    "previewId": "ui:segmented-button:state:active",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-active--state-active--theme-lg",
    "previewId": "ui:segmented-button:state:active",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-default--state-default--theme-aurora",
    "previewId": "ui:segmented-button:state:default",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-default--state-default--theme-lg",
    "previewId": "ui:segmented-button:state:default",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:segmented-button:state:disabled",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:segmented-button:state:disabled",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-disabled-link--state-disabled-link--theme-aurora",
    "previewId": "ui:segmented-button:state:disabled-link",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "disabled-link",
    "stateName": "Disabled link",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-disabled-link--state-disabled-link--theme-lg",
    "previewId": "ui:segmented-button:state:disabled-link",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "disabled-link",
    "stateName": "Disabled link",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:segmented-button:state:focus-visible",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:segmented-button:state:focus-visible",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-hover--state-hover--theme-aurora",
    "previewId": "ui:segmented-button:state:hover",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-hover--state-hover--theme-lg",
    "previewId": "ui:segmented-button:state:hover",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-loading--state-loading--theme-aurora",
    "previewId": "ui:segmented-button:state:loading",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-state-loading--state-loading--theme-lg",
    "previewId": "ui:segmented-button:state:loading",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-states--theme-aurora",
    "previewId": "ui:segmented-button:states",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-buttons--entry-segmented-button--preview-ui-segmented-button-states--theme-lg",
    "previewId": "ui:segmented-button:states",
    "entryId": "segmented-button",
    "entryName": "SegmentedButton",
    "sectionId": "buttons",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "disabled-link",
            "label": "Disabled link"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-cards--entry-card-demo--preview-prompts-cards-card-demo--theme-aurora",
    "previewId": "prompts:cards:card-demo",
    "entryId": "card-demo",
    "entryName": "Card",
    "sectionId": "cards",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-card-demo--preview-prompts-cards-card-demo--theme-lg",
    "previewId": "prompts:cards:card-demo",
    "entryId": "card-demo",
    "entryName": "Card",
    "sectionId": "cards",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-card-demo--preview-prompts-cards-card-demo-state-error--state-error--theme-aurora",
    "previewId": "prompts:cards:card-demo:state:error",
    "entryId": "card-demo",
    "entryName": "Card",
    "sectionId": "cards",
    "stateId": "error",
    "stateName": "Error",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-card-demo--preview-prompts-cards-card-demo-state-error--state-error--theme-lg",
    "previewId": "prompts:cards:card-demo:state:error",
    "entryId": "card-demo",
    "entryName": "Card",
    "sectionId": "cards",
    "stateId": "error",
    "stateName": "Error",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-card-demo--preview-prompts-cards-card-demo-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:cards:card-demo:state:loading",
    "entryId": "card-demo",
    "entryName": "Card",
    "sectionId": "cards",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-card-demo--preview-prompts-cards-card-demo-state-loading--state-loading--theme-lg",
    "previewId": "prompts:cards:card-demo:state:loading",
    "entryId": "card-demo",
    "entryName": "Card",
    "sectionId": "cards",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-neo-card-demo--preview-prompts-cards-neo-card-demo--theme-aurora",
    "previewId": "prompts:cards:neo-card-demo",
    "entryId": "neo-card-demo",
    "entryName": "NeoCard",
    "sectionId": "cards",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-neo-card-demo--preview-prompts-cards-neo-card-demo--theme-lg",
    "previewId": "prompts:cards:neo-card-demo",
    "entryId": "neo-card-demo",
    "entryName": "NeoCard",
    "sectionId": "cards",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-neo-card-demo--preview-prompts-cards-neo-card-demo-state-error--state-error--theme-aurora",
    "previewId": "prompts:cards:neo-card-demo:state:error",
    "entryId": "neo-card-demo",
    "entryName": "NeoCard",
    "sectionId": "cards",
    "stateId": "error",
    "stateName": "Error",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-neo-card-demo--preview-prompts-cards-neo-card-demo-state-error--state-error--theme-lg",
    "previewId": "prompts:cards:neo-card-demo:state:error",
    "entryId": "neo-card-demo",
    "entryName": "NeoCard",
    "sectionId": "cards",
    "stateId": "error",
    "stateName": "Error",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-neo-card-demo--preview-prompts-cards-neo-card-demo-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:cards:neo-card-demo:state:loading",
    "entryId": "neo-card-demo",
    "entryName": "NeoCard",
    "sectionId": "cards",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-neo-card-demo--preview-prompts-cards-neo-card-demo-state-loading--state-loading--theme-lg",
    "previewId": "prompts:cards:neo-card-demo:state:loading",
    "entryId": "neo-card-demo",
    "entryName": "NeoCard",
    "sectionId": "cards",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-section-card-variants--preview-prompts-cards-section-card-variants--theme-aurora",
    "previewId": "prompts:cards:section-card-variants",
    "entryId": "section-card-variants",
    "entryName": "SectionCard Variants",
    "sectionId": "cards",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-cards--entry-section-card-variants--preview-prompts-cards-section-card-variants--theme-lg",
    "previewId": "prompts:cards:section-card-variants",
    "entryId": "section-card-variants",
    "entryName": "SectionCard Variants",
    "sectionId": "cards",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker--theme-aurora",
    "previewId": "prompts:components:background-picker",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker--theme-lg",
    "previewId": "prompts:components:background-picker",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-active--state-active--theme-aurora",
    "previewId": "prompts:components:background-picker:state:active",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-active--state-active--theme-lg",
    "previewId": "prompts:components:background-picker:state:active",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:components:background-picker:state:disabled",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:components:background-picker:state:disabled",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:components:background-picker:state:focus",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-focus--state-focus--theme-lg",
    "previewId": "prompts:components:background-picker:state:focus",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:components:background-picker:state:hover",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-hover--state-hover--theme-lg",
    "previewId": "prompts:components:background-picker:state:hover",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:components:background-picker:state:loading",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-background-picker--preview-prompts-components-background-picker-state-loading--state-loading--theme-lg",
    "previewId": "prompts:components:background-picker:state:loading",
    "entryId": "background-picker",
    "entryName": "BackgroundPicker",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select--theme-aurora",
    "previewId": "prompts:components:settings-select",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select--theme-lg",
    "previewId": "prompts:components:settings-select",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-active--state-active--theme-aurora",
    "previewId": "prompts:components:settings-select:state:active",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-active--state-active--theme-lg",
    "previewId": "prompts:components:settings-select:state:active",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:components:settings-select:state:disabled",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:components:settings-select:state:disabled",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:components:settings-select:state:focus",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-focus--state-focus--theme-lg",
    "previewId": "prompts:components:settings-select:state:focus",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:components:settings-select:state:hover",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-hover--state-hover--theme-lg",
    "previewId": "prompts:components:settings-select:state:hover",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:components:settings-select:state:loading",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-settings-select--preview-prompts-components-settings-select-state-loading--state-loading--theme-lg",
    "previewId": "prompts:components:settings-select:state:loading",
    "entryId": "settings-select",
    "entryName": "SettingsSelect",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker--theme-aurora",
    "previewId": "prompts:components:theme-picker",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker--theme-lg",
    "previewId": "prompts:components:theme-picker",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-active--state-active--theme-aurora",
    "previewId": "prompts:components:theme-picker:state:active",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-active--state-active--theme-lg",
    "previewId": "prompts:components:theme-picker:state:active",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:components:theme-picker:state:disabled",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:components:theme-picker:state:disabled",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:components:theme-picker:state:focus",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-focus--state-focus--theme-lg",
    "previewId": "prompts:components:theme-picker:state:focus",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:components:theme-picker:state:hover",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-hover--state-hover--theme-lg",
    "previewId": "prompts:components:theme-picker:state:hover",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:components:theme-picker:state:loading",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-picker--preview-prompts-components-theme-picker-state-loading--state-loading--theme-lg",
    "previewId": "prompts:components:theme-picker:state:loading",
    "entryId": "theme-picker",
    "entryName": "ThemePicker",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle--theme-aurora",
    "previewId": "prompts:components:theme-toggle",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle--theme-lg",
    "previewId": "prompts:components:theme-toggle",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-active--state-active--theme-aurora",
    "previewId": "prompts:components:theme-toggle:state:active",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-active--state-active--theme-lg",
    "previewId": "prompts:components:theme-toggle:state:active",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:components:theme-toggle:state:disabled",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:components:theme-toggle:state:disabled",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:components:theme-toggle:state:focus",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-focus--state-focus--theme-lg",
    "previewId": "prompts:components:theme-toggle:state:focus",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:components:theme-toggle:state:hover",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-hover--state-hover--theme-lg",
    "previewId": "prompts:components:theme-toggle:state:hover",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:components:theme-toggle:state:loading",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-components--entry-theme-toggle--preview-prompts-components-theme-toggle-state-loading--state-loading--theme-lg",
    "previewId": "prompts:components:theme-toggle:state:loading",
    "entryId": "theme-toggle",
    "entryName": "ThemeToggle",
    "sectionId": "components",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-outline-glow--preview-prompts-feedback-outline-glow--theme-aurora",
    "previewId": "prompts:feedback:outline-glow",
    "entryId": "outline-glow",
    "entryName": "OutlineGlowDemo",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-outline-glow--preview-prompts-feedback-outline-glow--theme-lg",
    "previewId": "prompts:feedback:outline-glow",
    "entryId": "outline-glow",
    "entryName": "OutlineGlowDemo",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-progress--preview-prompts-feedback-progress--theme-aurora",
    "previewId": "prompts:feedback:progress",
    "entryId": "progress",
    "entryName": "Progress",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-progress--preview-prompts-feedback-progress--theme-lg",
    "previewId": "prompts:feedback:progress",
    "entryId": "progress",
    "entryName": "Progress",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-skeleton--preview-prompts-feedback-skeleton--theme-aurora",
    "previewId": "prompts:feedback:skeleton",
    "entryId": "skeleton",
    "entryName": "Skeleton",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-skeleton--preview-prompts-feedback-skeleton--theme-lg",
    "previewId": "prompts:feedback:skeleton",
    "entryId": "skeleton",
    "entryName": "Skeleton",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-snackbar--preview-prompts-feedback-snackbar--theme-aurora",
    "previewId": "prompts:feedback:snackbar",
    "entryId": "snackbar",
    "entryName": "Snackbar",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-snackbar--preview-prompts-feedback-snackbar--theme-lg",
    "previewId": "prompts:feedback:snackbar",
    "entryId": "snackbar",
    "entryName": "Snackbar",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-spinner--preview-prompts-feedback-spinner--theme-aurora",
    "previewId": "prompts:feedback:spinner",
    "entryId": "spinner",
    "entryName": "Spinner",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-spinner--preview-prompts-feedback-spinner--theme-lg",
    "previewId": "prompts:feedback:spinner",
    "entryId": "spinner",
    "entryName": "Spinner",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-toast-demo--preview-prompts-feedback-toast-demo--theme-aurora",
    "previewId": "prompts:feedback:toast-demo",
    "entryId": "toast-demo",
    "entryName": "Toast",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-feedback--entry-toast-demo--preview-prompts-feedback-toast-demo--theme-lg",
    "previewId": "prompts:feedback:toast-demo",
    "entryId": "toast-demo",
    "entryName": "Toast",
    "sectionId": "feedback",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-goal-list-demo--preview-prompts-goals-goal-list-demo--theme-aurora",
    "previewId": "prompts:goals:goal-list-demo",
    "entryId": "goal-list-demo",
    "entryName": "GoalListDemo",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-goal-list-demo--preview-prompts-goals-goal-list-demo--theme-lg",
    "previewId": "prompts:goals:goal-list-demo",
    "entryId": "goal-list-demo",
    "entryName": "GoalListDemo",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-goals-progress--preview-prompts-goals-goals-progress--theme-aurora",
    "previewId": "prompts:goals:goals-progress",
    "entryId": "goals-progress",
    "entryName": "GoalsProgress",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-goals-progress--preview-prompts-goals-goals-progress--theme-lg",
    "previewId": "prompts:goals:goals-progress",
    "entryId": "goals-progress",
    "entryName": "GoalsProgress",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-progress-ring-icon--preview-prompts-goals-progress-ring-icon--theme-aurora",
    "previewId": "prompts:goals:progress-ring-icon",
    "entryId": "progress-ring-icon",
    "entryName": "ProgressRingIcon",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-progress-ring-icon--preview-prompts-goals-progress-ring-icon--theme-lg",
    "previewId": "prompts:goals:progress-ring-icon",
    "entryId": "progress-ring-icon",
    "entryName": "ProgressRingIcon",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-reminders-tab--preview-prompts-goals-reminders-tab--theme-aurora",
    "previewId": "prompts:goals:reminders-tab",
    "entryId": "reminders-tab",
    "entryName": "RemindersTab",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-reminders-tab--preview-prompts-goals-reminders-tab--theme-lg",
    "previewId": "prompts:goals:reminders-tab",
    "entryId": "reminders-tab",
    "entryName": "RemindersTab",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-timer-ring--preview-prompts-goals-timer-ring--theme-aurora",
    "previewId": "prompts:goals:timer-ring",
    "entryId": "timer-ring",
    "entryName": "TimerRing",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-timer-ring--preview-prompts-goals-timer-ring--theme-lg",
    "previewId": "prompts:goals:timer-ring",
    "entryId": "timer-ring",
    "entryName": "TimerRing",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-timer-ring-icon--preview-prompts-goals-timer-ring-icon--theme-aurora",
    "previewId": "prompts:goals:timer-ring-icon",
    "entryId": "timer-ring-icon",
    "entryName": "TimerRingIcon",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-timer-ring-icon--preview-prompts-goals-timer-ring-icon--theme-lg",
    "previewId": "prompts:goals:timer-ring-icon",
    "entryId": "timer-ring-icon",
    "entryName": "TimerRingIcon",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-timer-tab--preview-prompts-goals-timer-tab--theme-aurora",
    "previewId": "prompts:goals:timer-tab",
    "entryId": "timer-tab",
    "entryName": "TimerTab",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-goals--entry-timer-tab--preview-prompts-goals-timer-tab--theme-lg",
    "previewId": "prompts:goals:timer-tab",
    "entryId": "timer-tab",
    "entryName": "TimerTab",
    "sectionId": "goals",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-dashboard-card--preview-prompts-homepage-dashboard-card--theme-aurora",
    "previewId": "prompts:homepage:dashboard-card",
    "entryId": "dashboard-card",
    "entryName": "DashboardCard",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-dashboard-card--preview-prompts-homepage-dashboard-card--theme-lg",
    "previewId": "prompts:homepage:dashboard-card",
    "entryId": "dashboard-card",
    "entryName": "DashboardCard",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-dashboard-list--preview-prompts-homepage-dashboard-list--theme-aurora",
    "previewId": "prompts:homepage:dashboard-list",
    "entryId": "dashboard-list",
    "entryName": "DashboardList",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-dashboard-list--preview-prompts-homepage-dashboard-list--theme-lg",
    "previewId": "prompts:homepage:dashboard-list",
    "entryId": "dashboard-list",
    "entryName": "DashboardList",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-hero-planner-cards--preview-prompts-homepage-hero-planner-cards--theme-aurora",
    "previewId": "prompts:homepage:hero-planner-cards",
    "entryId": "hero-planner-cards",
    "entryName": "HeroPlannerCards",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-hero-planner-cards--preview-prompts-homepage-hero-planner-cards--theme-lg",
    "previewId": "prompts:homepage:hero-planner-cards",
    "entryId": "hero-planner-cards",
    "entryName": "HeroPlannerCards",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-hero-portrait-frame--preview-prompts-homepage-hero-portrait-frame--theme-aurora",
    "previewId": "prompts:homepage:hero-portrait-frame",
    "entryId": "hero-portrait-frame",
    "entryName": "HeroPortraitFrame",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-hero-portrait-frame--preview-prompts-homepage-hero-portrait-frame--theme-lg",
    "previewId": "prompts:homepage:hero-portrait-frame",
    "entryId": "hero-portrait-frame",
    "entryName": "HeroPortraitFrame",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-isometric-room--preview-prompts-homepage-isometric-room--theme-aurora",
    "previewId": "prompts:homepage:isometric-room",
    "entryId": "isometric-room",
    "entryName": "IsometricRoom",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-isometric-room--preview-prompts-homepage-isometric-room--theme-lg",
    "previewId": "prompts:homepage:isometric-room",
    "entryId": "isometric-room",
    "entryName": "IsometricRoom",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-quick-action-grid--preview-prompts-homepage-quick-action-grid--theme-aurora",
    "previewId": "prompts:homepage:quick-action-grid",
    "entryId": "quick-action-grid",
    "entryName": "QuickActionGrid",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-quick-action-grid--preview-prompts-homepage-quick-action-grid--theme-lg",
    "previewId": "prompts:homepage:quick-action-grid",
    "entryId": "quick-action-grid",
    "entryName": "QuickActionGrid",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-welcome-hero-figure--preview-prompts-homepage-welcome-hero-figure--theme-aurora",
    "previewId": "prompts:homepage:welcome-hero-figure",
    "entryId": "welcome-hero-figure",
    "entryName": "WelcomeHeroFigure",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-homepage--entry-welcome-hero-figure--preview-prompts-homepage-welcome-hero-figure--theme-lg",
    "previewId": "prompts:homepage:welcome-hero-figure",
    "entryId": "welcome-hero-figure",
    "entryName": "WelcomeHeroFigure",
    "sectionId": "homepage",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-default--state-default--theme-aurora",
    "previewId": "ui:field:state:default",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-default--state-default--theme-lg",
    "previewId": "ui:field:state:default",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:field:state:disabled",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:field:state:disabled",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:field:state:focus-visible",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:field:state:focus-visible",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-invalid--state-invalid--theme-aurora",
    "previewId": "ui:field:state:invalid",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "invalid",
    "stateName": "Invalid",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-invalid--state-invalid--theme-lg",
    "previewId": "ui:field:state:invalid",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "invalid",
    "stateName": "Invalid",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-loading--state-loading--theme-aurora",
    "previewId": "ui:field:state:loading",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-loading--state-loading--theme-lg",
    "previewId": "ui:field:state:loading",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-search--state-search--theme-aurora",
    "previewId": "ui:field:state:search",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "search",
    "stateName": "Search",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-search--state-search--theme-lg",
    "previewId": "ui:field:state:search",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "search",
    "stateName": "Search",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-select--state-select--theme-aurora",
    "previewId": "ui:field:state:select",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "select",
    "stateName": "Select",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-select--state-select--theme-lg",
    "previewId": "ui:field:state:select",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "select",
    "stateName": "Select",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-with-counter--state-with-counter--theme-aurora",
    "previewId": "ui:field:state:with-counter",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "with-counter",
    "stateName": "With counter",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-state-with-counter--state-with-counter--theme-lg",
    "previewId": "ui:field:state:with-counter",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": "with-counter",
    "stateName": "With counter",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-states--theme-aurora",
    "previewId": "ui:field:states",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-field--preview-ui-field-states--theme-lg",
    "previewId": "ui:field:states",
    "entryId": "field",
    "entryName": "Field",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "focus-visible",
            "label": "Focus visible"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "loading",
            "label": "Loading"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "with-counter",
            "label": "With counter"
          },
          {
            "value": "select",
            "label": "Select"
          },
          {
            "value": "search",
            "label": "Search"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-active--state-active--theme-aurora",
    "previewId": "ui:input:state:active",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-active--state-active--theme-lg",
    "previewId": "ui:input:state:active",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-default--state-default--theme-aurora",
    "previewId": "ui:input:state:default",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-default--state-default--theme-lg",
    "previewId": "ui:input:state:default",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:input:state:disabled",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:input:state:disabled",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-focus--state-focus--theme-aurora",
    "previewId": "ui:input:state:focus",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "focus",
    "stateName": "Focus",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-focus--state-focus--theme-lg",
    "previewId": "ui:input:state:focus",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "focus",
    "stateName": "Focus",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-hover--state-hover--theme-aurora",
    "previewId": "ui:input:state:hover",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-hover--state-hover--theme-lg",
    "previewId": "ui:input:state:hover",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-loading--state-loading--theme-aurora",
    "previewId": "ui:input:state:loading",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-state-loading--state-loading--theme-lg",
    "previewId": "ui:input:state:loading",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-states--theme-aurora",
    "previewId": "ui:input:states",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-input--preview-ui-input-states--theme-lg",
    "previewId": "ui:input:states",
    "entryId": "input",
    "entryName": "Input",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus",
            "label": "Focus"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-pairing--theme-aurora",
    "previewId": "ui:label:pairing",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-pairing--theme-lg",
    "previewId": "ui:label:pairing",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-default--state-default--theme-aurora",
    "previewId": "ui:label:state:default",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-default--state-default--theme-lg",
    "previewId": "ui:label:state:default",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:label:state:disabled",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:label:state:disabled",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:label:state:focus-visible",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:label:state:focus-visible",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-hover--state-hover--theme-aurora",
    "previewId": "ui:label:state:hover",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-label--preview-ui-label-state-hover--state-hover--theme-lg",
    "previewId": "ui:label:state:hover",
    "entryId": "label",
    "entryName": "Label",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-active--state-active--theme-aurora",
    "previewId": "ui:search-bar:state:active",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-active--state-active--theme-lg",
    "previewId": "ui:search-bar:state:active",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-default--state-default--theme-aurora",
    "previewId": "ui:search-bar:state:default",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-default--state-default--theme-lg",
    "previewId": "ui:search-bar:state:default",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:search-bar:state:disabled",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:search-bar:state:disabled",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:search-bar:state:focus-visible",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:search-bar:state:focus-visible",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-hover--state-hover--theme-aurora",
    "previewId": "ui:search-bar:state:hover",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-hover--state-hover--theme-lg",
    "previewId": "ui:search-bar:state:hover",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-loading--state-loading--theme-aurora",
    "previewId": "ui:search-bar:state:loading",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-loading--state-loading--theme-lg",
    "previewId": "ui:search-bar:state:loading",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-with-label--state-with-label--theme-aurora",
    "previewId": "ui:search-bar:state:with-label",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "with-label",
    "stateName": "With label",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-state-with-label--state-with-label--theme-lg",
    "previewId": "ui:search-bar:state:with-label",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": "with-label",
    "stateName": "With label",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-states--theme-aurora",
    "previewId": "ui:search-bar:states",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-search-bar--preview-ui-search-bar-states--theme-lg",
    "previewId": "ui:search-bar:states",
    "entryId": "search-bar",
    "entryName": "SearchBar",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "with-label",
            "label": "With label"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-active--state-active--theme-aurora",
    "previewId": "ui:select:state:active",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-active--state-active--theme-lg",
    "previewId": "ui:select:state:active",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-default--state-default--theme-aurora",
    "previewId": "ui:select:state:default",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-default--state-default--theme-lg",
    "previewId": "ui:select:state:default",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:select:state:disabled",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:select:state:disabled",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:select:state:focus-visible",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:select:state:focus-visible",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-hover--state-hover--theme-aurora",
    "previewId": "ui:select:state:hover",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-hover--state-hover--theme-lg",
    "previewId": "ui:select:state:hover",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-loading--state-loading--theme-aurora",
    "previewId": "ui:select:state:loading",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-state-loading--state-loading--theme-lg",
    "previewId": "ui:select:state:loading",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-variants--theme-aurora",
    "previewId": "ui:select:variants",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-select--preview-ui-select-variants--theme-lg",
    "previewId": "ui:select:variants",
    "entryId": "select",
    "entryName": "Select",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "animated",
            "label": "Animated"
          },
          {
            "value": "native",
            "label": "Native"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-active--state-active--theme-aurora",
    "previewId": "ui:textarea:state:active",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-active--state-active--theme-lg",
    "previewId": "ui:textarea:state:active",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-default--state-default--theme-aurora",
    "previewId": "ui:textarea:state:default",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-default--state-default--theme-lg",
    "previewId": "ui:textarea:state:default",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:textarea:state:disabled",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:textarea:state:disabled",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:textarea:state:focus-visible",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:textarea:state:focus-visible",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-hover--state-hover--theme-aurora",
    "previewId": "ui:textarea:state:hover",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-hover--state-hover--theme-lg",
    "previewId": "ui:textarea:state:hover",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-invalid--state-invalid--theme-aurora",
    "previewId": "ui:textarea:state:invalid",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "invalid",
    "stateName": "Invalid",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-invalid--state-invalid--theme-lg",
    "previewId": "ui:textarea:state:invalid",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "invalid",
    "stateName": "Invalid",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-loading--state-loading--theme-aurora",
    "previewId": "ui:textarea:state:loading",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-loading--state-loading--theme-lg",
    "previewId": "ui:textarea:state:loading",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-read-only--state-read-only--theme-aurora",
    "previewId": "ui:textarea:state:read-only",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "read-only",
    "stateName": "Read-only",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-state-read-only--state-read-only--theme-lg",
    "previewId": "ui:textarea:state:read-only",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": "read-only",
    "stateName": "Read-only",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-states--theme-aurora",
    "previewId": "ui:textarea:states",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-inputs--entry-textarea--preview-ui-textarea-states--theme-lg",
    "previewId": "ui:textarea:states",
    "entryId": "textarea",
    "entryName": "Textarea",
    "sectionId": "inputs",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "invalid",
            "label": "Invalid"
          },
          {
            "value": "read-only",
            "label": "Read-only"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-layout--entry-header--preview-ui-header-tabs--theme-aurora",
    "previewId": "ui:header:tabs",
    "entryId": "header",
    "entryName": "Header",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tab-state",
        "label": "Tab state",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "inactive",
            "label": "Inactive"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      },
      {
        "key": "axis-underline-tone",
        "label": "Underline tone",
        "type": "variant",
        "options": [
          {
            "value": "neutral",
            "label": "Neutral"
          },
          {
            "value": "brand",
            "label": "Brand"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-layout--entry-header--preview-ui-header-tabs--theme-lg",
    "previewId": "ui:header:tabs",
    "entryId": "header",
    "entryName": "Header",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-tab-state",
        "label": "Tab state",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "inactive",
            "label": "Inactive"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      },
      {
        "key": "axis-underline-tone",
        "label": "Underline tone",
        "type": "variant",
        "options": [
          {
            "value": "neutral",
            "label": "Neutral"
          },
          {
            "value": "brand",
            "label": "Brand"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-layout--entry-header-tabs--preview-ui-header-tabs-control--theme-aurora",
    "previewId": "ui:header-tabs:control",
    "entryId": "header-tabs",
    "entryName": "HeaderTabs",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "inactive",
            "label": "Inactive"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-layout--entry-header-tabs--preview-ui-header-tabs-control--theme-lg",
    "previewId": "ui:header-tabs:control",
    "entryId": "header-tabs",
    "entryName": "HeaderTabs",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "inactive",
            "label": "Inactive"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo--theme-aurora",
    "previewId": "prompts:layout:modal-demo",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo--theme-lg",
    "previewId": "prompts:layout:modal-demo",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-closed--state-closed--theme-aurora",
    "previewId": "prompts:layout:modal-demo:state:closed",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "closed",
    "stateName": "Closed",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-closed--state-closed--theme-lg",
    "previewId": "prompts:layout:modal-demo:state:closed",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "closed",
    "stateName": "Closed",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-confirm-disabled--state-confirm-disabled--theme-aurora",
    "previewId": "prompts:layout:modal-demo:state:confirm-disabled",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "confirm-disabled",
    "stateName": "Confirm disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-confirm-disabled--state-confirm-disabled--theme-lg",
    "previewId": "prompts:layout:modal-demo:state:confirm-disabled",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "confirm-disabled",
    "stateName": "Confirm disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-focus-trap--state-focus-trap--theme-aurora",
    "previewId": "prompts:layout:modal-demo:state:focus-trap",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "focus-trap",
    "stateName": "Focus trapped",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-focus-trap--state-focus-trap--theme-lg",
    "previewId": "prompts:layout:modal-demo:state:focus-trap",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "focus-trap",
    "stateName": "Focus trapped",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:layout:modal-demo:state:loading",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "loading",
    "stateName": "Opening / loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-modal-demo--preview-prompts-layout-modal-demo-state-loading--state-loading--theme-lg",
    "previewId": "prompts:layout:modal-demo:state:loading",
    "entryId": "modal-demo",
    "entryName": "Modal",
    "sectionId": "layout",
    "stateId": "loading",
    "stateName": "Opening / loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-page-shell--preview-prompts-layout-page-shell--theme-aurora",
    "previewId": "prompts:layout:page-shell",
    "entryId": "page-shell",
    "entryName": "PageShell",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-page-shell--preview-prompts-layout-page-shell--theme-lg",
    "previewId": "prompts:layout:page-shell",
    "entryId": "page-shell",
    "entryName": "PageShell",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo--theme-aurora",
    "previewId": "prompts:layout:sheet-demo",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo--theme-lg",
    "previewId": "prompts:layout:sheet-demo",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-closed--state-closed--theme-aurora",
    "previewId": "prompts:layout:sheet-demo:state:closed",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "closed",
    "stateName": "Closed",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-closed--state-closed--theme-lg",
    "previewId": "prompts:layout:sheet-demo:state:closed",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "closed",
    "stateName": "Closed",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-confirm-disabled--state-confirm-disabled--theme-aurora",
    "previewId": "prompts:layout:sheet-demo:state:confirm-disabled",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "confirm-disabled",
    "stateName": "Confirm disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-confirm-disabled--state-confirm-disabled--theme-lg",
    "previewId": "prompts:layout:sheet-demo:state:confirm-disabled",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "confirm-disabled",
    "stateName": "Confirm disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-focus-trap--state-focus-trap--theme-aurora",
    "previewId": "prompts:layout:sheet-demo:state:focus-trap",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "focus-trap",
    "stateName": "Focus trapped",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-focus-trap--state-focus-trap--theme-lg",
    "previewId": "prompts:layout:sheet-demo:state:focus-trap",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "focus-trap",
    "stateName": "Focus trapped",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-opening--state-opening--theme-aurora",
    "previewId": "prompts:layout:sheet-demo:state:opening",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "opening",
    "stateName": "Opening / loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-sheet-demo--preview-prompts-layout-sheet-demo-state-opening--state-opening--theme-lg",
    "previewId": "prompts:layout:sheet-demo:state:opening",
    "entryId": "sheet-demo",
    "entryName": "Sheet",
    "sectionId": "layout",
    "stateId": "opening",
    "stateName": "Opening / loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-split--preview-prompts-layout-split--theme-aurora",
    "previewId": "prompts:layout:split",
    "entryId": "split",
    "entryName": "Split",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-split--preview-prompts-layout-split--theme-lg",
    "previewId": "prompts:layout:split",
    "entryId": "split",
    "entryName": "Split",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-title-bar--preview-prompts-layout-title-bar--theme-aurora",
    "previewId": "prompts:layout:title-bar",
    "entryId": "title-bar",
    "entryName": "TitleBar",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-layout--entry-title-bar--preview-prompts-layout-title-bar--theme-lg",
    "previewId": "prompts:layout:title-bar",
    "entryId": "title-bar",
    "entryName": "TitleBar",
    "sectionId": "layout",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-misc--entry-cat-companion--preview-prompts-misc-cat-companion--theme-aurora",
    "previewId": "prompts:misc:cat-companion",
    "entryId": "cat-companion",
    "entryName": "CatCompanion",
    "sectionId": "misc",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-misc--entry-cat-companion--preview-prompts-misc-cat-companion--theme-lg",
    "previewId": "prompts:misc:cat-companion",
    "entryId": "cat-companion",
    "entryName": "CatCompanion",
    "sectionId": "misc",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header--theme-aurora",
    "previewId": "prompts:page-header:demo-header",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header--theme-lg",
    "previewId": "prompts:page-header:demo-header",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-disabled--state-demo-header-cta-disabled--theme-aurora",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-disabled",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-disabled",
    "stateName": "Ghost CTA — Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-disabled--state-demo-header-cta-disabled--theme-lg",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-disabled",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-disabled",
    "stateName": "Ghost CTA — Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-focus--state-demo-header-cta-focus--theme-aurora",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-focus",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-focus",
    "stateName": "Primary CTA — Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-focus--state-demo-header-cta-focus--theme-lg",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-focus",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-focus",
    "stateName": "Primary CTA — Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-hover--state-demo-header-cta-hover--theme-aurora",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-hover",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-hover",
    "stateName": "Primary CTA — Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-hover--state-demo-header-cta-hover--theme-lg",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-hover",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-hover",
    "stateName": "Primary CTA — Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-loading--state-demo-header-cta-loading--theme-aurora",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-loading",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-loading",
    "stateName": "Primary CTA — Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-demo-header--preview-prompts-page-header-demo-header-state-demo-header-cta-loading--state-demo-header-cta-loading--theme-lg",
    "previewId": "prompts:page-header:demo-header:state:demo-header-cta-loading",
    "entryId": "demo-header",
    "entryName": "DemoHeader",
    "sectionId": "page-header",
    "stateId": "demo-header-cta-loading",
    "stateName": "Primary CTA — Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-hero--preview-prompts-page-header-hero--theme-aurora",
    "previewId": "prompts:page-header:hero",
    "entryId": "hero",
    "entryName": "Hero",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-hero--preview-prompts-page-header-hero--theme-lg",
    "previewId": "prompts:page-header:hero",
    "entryId": "hero",
    "entryName": "Hero",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-hero--preview-prompts-page-header-hero-state-hero-tabs-disabled--state-hero-tabs-disabled--theme-aurora",
    "previewId": "prompts:page-header:hero:state:hero-tabs-disabled",
    "entryId": "hero",
    "entryName": "Hero",
    "sectionId": "page-header",
    "stateId": "hero-tabs-disabled",
    "stateName": "Sub tabs — Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-hero--preview-prompts-page-header-hero-state-hero-tabs-disabled--state-hero-tabs-disabled--theme-lg",
    "previewId": "prompts:page-header:hero:state:hero-tabs-disabled",
    "entryId": "hero",
    "entryName": "Hero",
    "sectionId": "page-header",
    "stateId": "hero-tabs-disabled",
    "stateName": "Sub tabs — Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-hero--preview-prompts-page-header-hero-state-hero-tabs-selected--state-hero-tabs-selected--theme-aurora",
    "previewId": "prompts:page-header:hero:state:hero-tabs-selected",
    "entryId": "hero",
    "entryName": "Hero",
    "sectionId": "page-header",
    "stateId": "hero-tabs-selected",
    "stateName": "Sub tabs — Selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-hero--preview-prompts-page-header-hero-state-hero-tabs-selected--state-hero-tabs-selected--theme-lg",
    "previewId": "prompts:page-header:hero:state:hero-tabs-selected",
    "entryId": "hero",
    "entryName": "Hero",
    "sectionId": "page-header",
    "stateId": "hero-tabs-selected",
    "stateName": "Sub tabs — Selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame--theme-aurora",
    "previewId": "prompts:page-header:neomorphic-hero-frame",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame--theme-lg",
    "previewId": "prompts:page-header:neomorphic-hero-frame",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame-state-hero-tabs-focus--state-hero-tabs-focus--theme-aurora",
    "previewId": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-focus",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": "hero-tabs-focus",
    "stateName": "Tabs — Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame-state-hero-tabs-focus--state-hero-tabs-focus--theme-lg",
    "previewId": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-focus",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": "hero-tabs-focus",
    "stateName": "Tabs — Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame-state-hero-tabs-hover--state-hero-tabs-hover--theme-aurora",
    "previewId": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-hover",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": "hero-tabs-hover",
    "stateName": "Tabs — Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame-state-hero-tabs-hover--state-hero-tabs-hover--theme-lg",
    "previewId": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-hover",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": "hero-tabs-hover",
    "stateName": "Tabs — Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame-state-hero-tabs-loading--state-hero-tabs-loading--theme-aurora",
    "previewId": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-loading",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": "hero-tabs-loading",
    "stateName": "Tabs — Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-neomorphic-hero-frame--preview-prompts-page-header-neomorphic-hero-frame-state-hero-tabs-loading--state-hero-tabs-loading--theme-lg",
    "previewId": "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-loading",
    "entryId": "neomorphic-hero-frame",
    "entryName": "NeomorphicHeroFrame",
    "sectionId": "page-header",
    "stateId": "hero-tabs-loading",
    "stateName": "Tabs — Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo--theme-aurora",
    "previewId": "prompts:page-header:page-header-demo",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo--theme-lg",
    "previewId": "prompts:page-header:page-header-demo",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo-state-page-header-search-disabled--state-page-header-search-disabled--theme-aurora",
    "previewId": "prompts:page-header:page-header-demo:state:page-header-search-disabled",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": "page-header-search-disabled",
    "stateName": "Search — Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo-state-page-header-search-disabled--state-page-header-search-disabled--theme-lg",
    "previewId": "prompts:page-header:page-header-demo:state:page-header-search-disabled",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": "page-header-search-disabled",
    "stateName": "Search — Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo-state-page-header-search-focus--state-page-header-search-focus--theme-aurora",
    "previewId": "prompts:page-header:page-header-demo:state:page-header-search-focus",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": "page-header-search-focus",
    "stateName": "Search — Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo-state-page-header-search-focus--state-page-header-search-focus--theme-lg",
    "previewId": "prompts:page-header:page-header-demo:state:page-header-search-focus",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": "page-header-search-focus",
    "stateName": "Search — Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo-state-page-header-search-loading--state-page-header-search-loading--theme-aurora",
    "previewId": "prompts:page-header:page-header-demo:state:page-header-search-loading",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": "page-header-search-loading",
    "stateName": "Search — Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-page-header--entry-page-header-demo--preview-prompts-page-header-page-header-demo-state-page-header-search-loading--state-page-header-search-loading--theme-lg",
    "previewId": "prompts:page-header:page-header-demo:state:page-header-search-loading",
    "entryId": "page-header-demo",
    "entryName": "PageHeader",
    "sectionId": "page-header",
    "stateId": "page-header-search-loading",
    "stateName": "Search — Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav--theme-aurora",
    "previewId": "prompts:planner:bottom-nav",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav--theme-lg",
    "previewId": "prompts:planner:bottom-nav",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-active--state-active--theme-aurora",
    "previewId": "prompts:planner:bottom-nav:state:active",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "active",
    "stateName": "Active tab",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-active--state-active--theme-lg",
    "previewId": "prompts:planner:bottom-nav:state:active",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "active",
    "stateName": "Active tab",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:planner:bottom-nav:state:disabled",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "disabled",
    "stateName": "Disabled tab",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:planner:bottom-nav:state:disabled",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "disabled",
    "stateName": "Disabled tab",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "prompts:planner:bottom-nav:state:focus-visible",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "focus-visible",
    "stateName": "Keyboard focus",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "prompts:planner:bottom-nav:state:focus-visible",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "focus-visible",
    "stateName": "Keyboard focus",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:planner:bottom-nav:state:hover",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "hover",
    "stateName": "Hover tab",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-hover--state-hover--theme-lg",
    "previewId": "prompts:planner:bottom-nav:state:hover",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "hover",
    "stateName": "Hover tab",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-syncing--state-syncing--theme-aurora",
    "previewId": "prompts:planner:bottom-nav:state:syncing",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "syncing",
    "stateName": "Syncing tab",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-bottom-nav--preview-prompts-planner-bottom-nav-state-syncing--state-syncing--theme-lg",
    "previewId": "prompts:planner:bottom-nav:state:syncing",
    "entryId": "bottom-nav",
    "entryName": "BottomNav",
    "sectionId": "planner",
    "stateId": "syncing",
    "stateName": "Syncing tab",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-week-picker--preview-prompts-planner-week-picker--theme-aurora",
    "previewId": "prompts:planner:week-picker",
    "entryId": "week-picker",
    "entryName": "WeekPicker",
    "sectionId": "planner",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-planner--entry-week-picker--preview-prompts-planner-week-picker--theme-lg",
    "previewId": "prompts:planner:week-picker",
    "entryId": "week-picker",
    "entryName": "WeekPicker",
    "sectionId": "planner",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompt-list--preview-prompts-prompts-prompt-list--theme-aurora",
    "previewId": "prompts:prompts:prompt-list",
    "entryId": "prompt-list",
    "entryName": "PromptList",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompt-list--preview-prompts-prompts-prompt-list--theme-lg",
    "previewId": "prompts:prompts:prompt-list",
    "entryId": "prompt-list",
    "entryName": "PromptList",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompt-list--preview-prompts-prompts-prompt-list-state-empty--state-empty--theme-aurora",
    "previewId": "prompts:prompts:prompt-list:state:empty",
    "entryId": "prompt-list",
    "entryName": "PromptList",
    "sectionId": "prompts",
    "stateId": "empty",
    "stateName": "Empty",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompt-list--preview-prompts-prompts-prompt-list-state-empty--state-empty--theme-lg",
    "previewId": "prompts:prompts:prompt-list:state:empty",
    "entryId": "prompt-list",
    "entryName": "PromptList",
    "sectionId": "prompts",
    "stateId": "empty",
    "stateName": "Empty",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompt-list--preview-prompts-prompts-prompt-list-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:prompts:prompt-list:state:loading",
    "entryId": "prompt-list",
    "entryName": "PromptList",
    "sectionId": "prompts",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompt-list--preview-prompts-prompts-prompt-list-state-loading--state-loading--theme-lg",
    "previewId": "prompts:prompts:prompt-list:state:loading",
    "entryId": "prompt-list",
    "entryName": "PromptList",
    "sectionId": "prompts",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-active--state-compose-active--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-active",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-active",
    "stateName": "Compose active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-active--state-compose-active--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-active",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-active",
    "stateName": "Compose active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-disabled--state-compose-disabled--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-disabled",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-disabled",
    "stateName": "Compose disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-disabled--state-compose-disabled--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-disabled",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-disabled",
    "stateName": "Compose disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-empty--state-compose-empty--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-empty",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-empty",
    "stateName": "Compose empty",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-empty--state-compose-empty--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-empty",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-empty",
    "stateName": "Compose empty",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-error--state-compose-error--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-error",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-error",
    "stateName": "Compose error",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-error--state-compose-error--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-error",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-error",
    "stateName": "Compose error",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-focus-visible--state-compose-focus-visible--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-focus-visible",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-focus-visible",
    "stateName": "Compose focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-focus-visible--state-compose-focus-visible--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-focus-visible",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-focus-visible",
    "stateName": "Compose focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-hover--state-compose-hover--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-hover",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-hover",
    "stateName": "Compose hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-hover--state-compose-hover--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-hover",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-hover",
    "stateName": "Compose hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-loading--state-compose-loading--theme-aurora",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-loading",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-loading",
    "stateName": "Compose loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-compose-panel--preview-prompts-prompts-prompts-compose-panel-state-compose-loading--state-compose-loading--theme-lg",
    "previewId": "prompts:prompts:prompts-compose-panel:state:compose-loading",
    "entryId": "prompts-compose-panel",
    "entryName": "PromptsComposePanel",
    "sectionId": "prompts",
    "stateId": "compose-loading",
    "stateName": "Compose loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-demos--preview-prompts-prompts-prompts-demos--theme-aurora",
    "previewId": "prompts:prompts:prompts-demos",
    "entryId": "prompts-demos",
    "entryName": "PromptsDemos",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-demos--preview-prompts-prompts-prompts-demos--theme-lg",
    "previewId": "prompts:prompts:prompts-demos",
    "entryId": "prompts-demos",
    "entryName": "PromptsDemos",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header--theme-aurora",
    "previewId": "prompts:prompts:prompts-header",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header--theme-lg",
    "previewId": "prompts:prompts:prompts-header",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-disabled--state-chip-disabled--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:chip-disabled",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-disabled",
    "stateName": "Chip disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-disabled--state-chip-disabled--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:chip-disabled",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-disabled",
    "stateName": "Chip disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-focus-visible--state-chip-focus-visible--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:chip-focus-visible",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-focus-visible",
    "stateName": "Chip focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-focus-visible--state-chip-focus-visible--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:chip-focus-visible",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-focus-visible",
    "stateName": "Chip focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-hover--state-chip-hover--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:chip-hover",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-hover",
    "stateName": "Chip hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-hover--state-chip-hover--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:chip-hover",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-hover",
    "stateName": "Chip hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-loading--state-chip-loading--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:chip-loading",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-loading",
    "stateName": "Chip loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-loading--state-chip-loading--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:chip-loading",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-loading",
    "stateName": "Chip loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-pressed--state-chip-pressed--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:chip-pressed",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-pressed",
    "stateName": "Chip pressed",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-chip-pressed--state-chip-pressed--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:chip-pressed",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "chip-pressed",
    "stateName": "Chip pressed",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-active--state-search-active--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-active",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-active",
    "stateName": "Search active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-active--state-search-active--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-active",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-active",
    "stateName": "Search active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-disabled--state-search-disabled--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-disabled",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-disabled",
    "stateName": "Search disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-disabled--state-search-disabled--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-disabled",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-disabled",
    "stateName": "Search disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-empty--state-search-empty--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-empty",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-empty",
    "stateName": "Search empty",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-empty--state-search-empty--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-empty",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-empty",
    "stateName": "Search empty",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-error--state-search-error--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-error",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-error",
    "stateName": "Search error",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-error--state-search-error--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-error",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-error",
    "stateName": "Search error",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-focus-visible--state-search-focus-visible--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-focus-visible",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-focus-visible",
    "stateName": "Search focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-focus-visible--state-search-focus-visible--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-focus-visible",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-focus-visible",
    "stateName": "Search focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-hover--state-search-hover--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-hover",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-hover",
    "stateName": "Search hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-hover--state-search-hover--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-hover",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-hover",
    "stateName": "Search hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-loading--state-search-loading--theme-aurora",
    "previewId": "prompts:prompts:prompts-header:state:search-loading",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-loading",
    "stateName": "Search loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-prompts--entry-prompts-header--preview-prompts-prompts-prompts-header-state-search-loading--state-search-loading--theme-lg",
    "previewId": "prompts:prompts:prompts-header:state:search-loading",
    "entryId": "prompts-header",
    "entryName": "PromptsHeader",
    "sectionId": "prompts",
    "stateId": "search-loading",
    "stateName": "Search loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-lane-opponent-form--preview-prompts-reviews-lane-opponent-form--theme-aurora",
    "previewId": "prompts:reviews:lane-opponent-form",
    "entryId": "lane-opponent-form",
    "entryName": "LaneOpponentForm",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-lane-opponent-form--preview-prompts-reviews-lane-opponent-form--theme-lg",
    "previewId": "prompts:reviews:lane-opponent-form",
    "entryId": "lane-opponent-form",
    "entryName": "LaneOpponentForm",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-pillars-selector--preview-prompts-reviews-pillars-selector--theme-aurora",
    "previewId": "prompts:reviews:pillars-selector",
    "entryId": "pillars-selector",
    "entryName": "PillarsSelector",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-pillars-selector--preview-prompts-reviews-pillars-selector--theme-lg",
    "previewId": "prompts:reviews:pillars-selector",
    "entryId": "pillars-selector",
    "entryName": "PillarsSelector",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-result-score-section--preview-prompts-reviews-result-score-section--theme-aurora",
    "previewId": "prompts:reviews:result-score-section",
    "entryId": "result-score-section",
    "entryName": "ResultScoreSection",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-result-score-section--preview-prompts-reviews-result-score-section--theme-lg",
    "previewId": "prompts:reviews:result-score-section",
    "entryId": "result-score-section",
    "entryName": "ResultScoreSection",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-review-list-item--preview-prompts-reviews-review-list-item--theme-aurora",
    "previewId": "prompts:reviews:review-list-item",
    "entryId": "review-list-item",
    "entryName": "ReviewListItem",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-review-list-item--preview-prompts-reviews-review-list-item--theme-lg",
    "previewId": "prompts:reviews:review-list-item",
    "entryId": "review-list-item",
    "entryName": "ReviewListItem",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-review-slider-track--preview-prompts-reviews-review-slider-track--theme-aurora",
    "previewId": "prompts:reviews:review-slider-track",
    "entryId": "review-slider-track",
    "entryName": "ReviewSliderTrack",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-review-slider-track--preview-prompts-reviews-review-slider-track--theme-lg",
    "previewId": "prompts:reviews:review-slider-track",
    "entryId": "review-slider-track",
    "entryName": "ReviewSliderTrack",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-review-surface--preview-prompts-reviews-review-surface--theme-aurora",
    "previewId": "prompts:reviews:review-surface",
    "entryId": "review-surface",
    "entryName": "ReviewSurface",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-review-surface--preview-prompts-reviews-review-surface--theme-lg",
    "previewId": "prompts:reviews:review-surface",
    "entryId": "review-surface",
    "entryName": "ReviewSurface",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-score-meter--preview-prompts-reviews-score-meter--theme-aurora",
    "previewId": "prompts:reviews:score-meter",
    "entryId": "score-meter",
    "entryName": "ScoreMeter",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-score-meter--preview-prompts-reviews-score-meter--theme-lg",
    "previewId": "prompts:reviews:score-meter",
    "entryId": "score-meter",
    "entryName": "ScoreMeter",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-timestamp-markers--preview-prompts-reviews-timestamp-markers--theme-aurora",
    "previewId": "prompts:reviews:timestamp-markers",
    "entryId": "timestamp-markers",
    "entryName": "TimestampMarkers",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-reviews--entry-timestamp-markers--preview-prompts-reviews-timestamp-markers--theme-lg",
    "previewId": "prompts:reviews:timestamp-markers",
    "entryId": "timestamp-markers",
    "entryName": "TimestampMarkers",
    "sectionId": "reviews",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor--theme-aurora",
    "previewId": "prompts:team:champ-list-editor",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor--theme-lg",
    "previewId": "prompts:team:champ-list-editor",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-active--state-active--theme-aurora",
    "previewId": "prompts:team:champ-list-editor:state:active",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / editing",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-active--state-active--theme-lg",
    "previewId": "prompts:team:champ-list-editor:state:active",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / editing",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:team:champ-list-editor:state:disabled",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:team:champ-list-editor:state:disabled",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:team:champ-list-editor:state:focus",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-focus--state-focus--theme-lg",
    "previewId": "prompts:team:champ-list-editor:state:focus",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:team:champ-list-editor:state:hover",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-champ-list-editor--preview-prompts-team-champ-list-editor-state-hover--state-hover--theme-lg",
    "previewId": "prompts:team:champ-list-editor:state:hover",
    "entryId": "champ-list-editor",
    "entryName": "ChampListEditor",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge--theme-aurora",
    "previewId": "prompts:team:pillar-badge",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge--theme-lg",
    "previewId": "prompts:team:pillar-badge",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-active--state-active--theme-aurora",
    "previewId": "prompts:team:pillar-badge:state:active",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-active--state-active--theme-lg",
    "previewId": "prompts:team:pillar-badge:state:active",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:team:pillar-badge:state:disabled",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:team:pillar-badge:state:disabled",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:team:pillar-badge:state:focus",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-focus--state-focus--theme-lg",
    "previewId": "prompts:team:pillar-badge:state:focus",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:team:pillar-badge:state:hover",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-badge--preview-prompts-team-pillar-badge-state-hover--state-hover--theme-lg",
    "previewId": "prompts:team:pillar-badge:state:hover",
    "entryId": "pillar-badge",
    "entryName": "PillarBadge",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector--theme-aurora",
    "previewId": "prompts:team:pillar-selector",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector--theme-lg",
    "previewId": "prompts:team:pillar-selector",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-active--state-active--theme-aurora",
    "previewId": "prompts:team:pillar-selector:state:active",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-active--state-active--theme-lg",
    "previewId": "prompts:team:pillar-selector:state:active",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:team:pillar-selector:state:disabled",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:team:pillar-selector:state:disabled",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:team:pillar-selector:state:focus",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-focus--state-focus--theme-lg",
    "previewId": "prompts:team:pillar-selector:state:focus",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:team:pillar-selector:state:hover",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-pillar-selector--preview-prompts-team-pillar-selector-state-hover--state-hover--theme-lg",
    "previewId": "prompts:team:pillar-selector:state:hover",
    "entryId": "pillar-selector",
    "entryName": "PillarSelector",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector--theme-aurora",
    "previewId": "prompts:team:role-selector",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector--theme-lg",
    "previewId": "prompts:team:role-selector",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-active--state-active--theme-aurora",
    "previewId": "prompts:team:role-selector:state:active",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-active--state-active--theme-lg",
    "previewId": "prompts:team:role-selector:state:active",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:team:role-selector:state:disabled",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:team:role-selector:state:disabled",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:team:role-selector:state:focus",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-focus--state-focus--theme-lg",
    "previewId": "prompts:team:role-selector:state:focus",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:team:role-selector:state:hover",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-role-selector--preview-prompts-team-role-selector-state-hover--state-hover--theme-lg",
    "previewId": "prompts:team:role-selector:state:hover",
    "entryId": "role-selector",
    "entryName": "RoleSelector",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector--theme-aurora",
    "previewId": "prompts:team:side-selector",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector--theme-lg",
    "previewId": "prompts:team:side-selector",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-active--state-active--theme-aurora",
    "previewId": "prompts:team:side-selector:state:active",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-active--state-active--theme-lg",
    "previewId": "prompts:team:side-selector:state:active",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "active",
    "stateName": "Active / selected",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-disabled--state-disabled--theme-aurora",
    "previewId": "prompts:team:side-selector:state:disabled",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-disabled--state-disabled--theme-lg",
    "previewId": "prompts:team:side-selector:state:disabled",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-focus--state-focus--theme-aurora",
    "previewId": "prompts:team:side-selector:state:focus",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-focus--state-focus--theme-lg",
    "previewId": "prompts:team:side-selector:state:focus",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "focus",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-hover--state-hover--theme-aurora",
    "previewId": "prompts:team:side-selector:state:hover",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-hover--state-hover--theme-lg",
    "previewId": "prompts:team:side-selector:state:hover",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-loading--state-loading--theme-aurora",
    "previewId": "prompts:team:side-selector:state:loading",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-team--entry-side-selector--preview-prompts-team-side-selector-state-loading--state-loading--theme-lg",
    "previewId": "prompts:team:side-selector:state:loading",
    "entryId": "side-selector",
    "entryName": "SideSelector",
    "sectionId": "team",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-animation-toggle--preview-prompts-toggles-animation-toggle--theme-aurora",
    "previewId": "prompts:toggles:animation-toggle",
    "entryId": "animation-toggle",
    "entryName": "AnimationToggle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-animation-toggle--preview-prompts-toggles-animation-toggle--theme-lg",
    "previewId": "prompts:toggles:animation-toggle",
    "entryId": "animation-toggle",
    "entryName": "AnimationToggle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-check-circle--preview-prompts-toggles-check-circle--theme-aurora",
    "previewId": "prompts:toggles:check-circle",
    "entryId": "check-circle",
    "entryName": "CheckCircle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-check-circle--preview-prompts-toggles-check-circle--theme-lg",
    "previewId": "prompts:toggles:check-circle",
    "entryId": "check-circle",
    "entryName": "CheckCircle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-active--state-active--theme-aurora",
    "previewId": "ui:tab-bar:state:active",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-active--state-active--theme-lg",
    "previewId": "ui:tab-bar:state:active",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-default--state-default--theme-aurora",
    "previewId": "ui:tab-bar:state:default",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-default--state-default--theme-lg",
    "previewId": "ui:tab-bar:state:default",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:tab-bar:state:disabled",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:tab-bar:state:disabled",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:tab-bar:state:focus-visible",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:tab-bar:state:focus-visible",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-hover--state-hover--theme-aurora",
    "previewId": "ui:tab-bar:state:hover",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-hover--state-hover--theme-lg",
    "previewId": "ui:tab-bar:state:hover",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-loading--state-loading--theme-aurora",
    "previewId": "ui:tab-bar:state:loading",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-state-loading--state-loading--theme-lg",
    "previewId": "ui:tab-bar:state:loading",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-variants--theme-aurora",
    "previewId": "ui:tab-bar:variants",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tab-bar--preview-ui-tab-bar-variants--theme-lg",
    "previewId": "ui:tab-bar:variants",
    "entryId": "tab-bar",
    "entryName": "TabBar",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-variant",
        "label": "Variant",
        "type": "variant",
        "options": [
          {
            "value": "filters",
            "label": "Filters"
          },
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "navigation",
            "label": "Navigation"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-active--state-active--theme-aurora",
    "previewId": "ui:tabs:state:active",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-active--state-active--theme-lg",
    "previewId": "ui:tabs:state:active",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:tabs:state:disabled",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:tabs:state:disabled",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:tabs:state:focus-visible",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:tabs:state:focus-visible",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-hover--state-hover--theme-aurora",
    "previewId": "ui:tabs:state:hover",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-hover--state-hover--theme-lg",
    "previewId": "ui:tabs:state:hover",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-loading--state-loading--theme-aurora",
    "previewId": "ui:tabs:state:loading",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-state-loading--state-loading--theme-lg",
    "previewId": "ui:tabs:state:loading",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-wiring--theme-aurora",
    "previewId": "ui:tabs:wiring",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-tabs--preview-ui-tabs-wiring--theme-lg",
    "previewId": "ui:tabs:wiring",
    "entryId": "tabs",
    "entryName": "Tabs",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-layout",
        "label": "Layout",
        "type": "variant",
        "options": [
          {
            "value": "panels",
            "label": "Panels"
          },
          {
            "value": "controlled-list",
            "label": "Controlled list"
          }
        ]
      },
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-prompts-toggles-toggle--theme-aurora",
    "previewId": "prompts:toggles:toggle",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-toggle--preview-prompts-toggles-toggle--theme-lg",
    "previewId": "prompts:toggles:toggle",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": []
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-interactive--theme-aurora",
    "previewId": "ui:toggle:interactive",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-interactive--theme-lg",
    "previewId": "ui:toggle:interactive",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": null,
    "stateName": null,
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-active--state-active--theme-aurora",
    "previewId": "ui:toggle:state:active",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-active--state-active--theme-lg",
    "previewId": "ui:toggle:state:active",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "active",
    "stateName": "Active",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-default--state-default--theme-aurora",
    "previewId": "ui:toggle:state:default",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-default--state-default--theme-lg",
    "previewId": "ui:toggle:state:default",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "default",
    "stateName": "Default",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-disabled--state-disabled--theme-aurora",
    "previewId": "ui:toggle:state:disabled",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-disabled--state-disabled--theme-lg",
    "previewId": "ui:toggle:state:disabled",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "disabled",
    "stateName": "Disabled",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-focus-visible--state-focus-visible--theme-aurora",
    "previewId": "ui:toggle:state:focus-visible",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-focus-visible--state-focus-visible--theme-lg",
    "previewId": "ui:toggle:state:focus-visible",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "focus-visible",
    "stateName": "Focus-visible",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-hover--state-hover--theme-aurora",
    "previewId": "ui:toggle:state:hover",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-hover--state-hover--theme-lg",
    "previewId": "ui:toggle:state:hover",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "hover",
    "stateName": "Hover",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-loading--state-loading--theme-aurora",
    "previewId": "ui:toggle:state:loading",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "aurora",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  },
  {
    "slug": "section-toggles--entry-toggle--preview-ui-toggle-state-loading--state-loading--theme-lg",
    "previewId": "ui:toggle:state:loading",
    "entryId": "toggle",
    "entryName": "Toggle",
    "sectionId": "toggles",
    "stateId": "loading",
    "stateName": "Loading",
    "themeVariant": "lg",
    "themeBackground": 0,
    "axisParams": [
      {
        "key": "axis-state",
        "label": "State",
        "type": "state",
        "options": [
          {
            "value": "default",
            "label": "Default"
          },
          {
            "value": "hover",
            "label": "Hover"
          },
          {
            "value": "focus-visible",
            "label": "Focus-visible"
          },
          {
            "value": "active",
            "label": "Active"
          },
          {
            "value": "disabled",
            "label": "Disabled"
          },
          {
            "value": "loading",
            "label": "Loading"
          }
        ]
      }
    ]
  }
] satisfies readonly GalleryPreviewRoute[];

export const galleryPreviewModules = [
  {
    loader: () => import("../prompts/prompts.gallery"),
    previewIds: [
      "prompts:prompts:prompt-list",
      "prompts:prompts:prompt-list:state:loading",
      "prompts:prompts:prompt-list:state:empty",
      "prompts:prompts:prompts-header",
      "prompts:prompts:prompts-header:state:chip-hover",
      "prompts:prompts:prompts-header:state:chip-focus-visible",
      "prompts:prompts:prompts-header:state:chip-pressed",
      "prompts:prompts:prompts-header:state:chip-disabled",
      "prompts:prompts:prompts-header:state:chip-loading",
      "prompts:prompts:prompts-header:state:search-hover",
      "prompts:prompts:prompts-header:state:search-focus-visible",
      "prompts:prompts:prompts-header:state:search-active",
      "prompts:prompts:prompts-header:state:search-disabled",
      "prompts:prompts:prompts-header:state:search-loading",
      "prompts:prompts:prompts-header:state:search-error",
      "prompts:prompts:prompts-header:state:search-empty",
      "prompts:prompts:prompts-compose-panel",
      "prompts:prompts:prompts-compose-panel:state:compose-hover",
      "prompts:prompts:prompts-compose-panel:state:compose-focus-visible",
      "prompts:prompts:prompts-compose-panel:state:compose-active",
      "prompts:prompts:prompts-compose-panel:state:compose-disabled",
      "prompts:prompts:prompts-compose-panel:state:compose-loading",
      "prompts:prompts:prompts-compose-panel:state:compose-error",
      "prompts:prompts:prompts-compose-panel:state:compose-empty",
      "prompts:prompts:prompts-demos",
      "prompts:planner:week-picker",
      "prompts:planner:bottom-nav",
      "prompts:planner:bottom-nav:state:active",
      "prompts:planner:bottom-nav:state:hover",
      "prompts:planner:bottom-nav:state:focus-visible",
      "prompts:planner:bottom-nav:state:disabled",
      "prompts:planner:bottom-nav:state:syncing",
      "prompts:cards:card-demo",
      "prompts:cards:card-demo:state:loading",
      "prompts:cards:card-demo:state:error",
      "prompts:cards:neo-card-demo",
      "prompts:cards:neo-card-demo:state:loading",
      "prompts:cards:neo-card-demo:state:error",
      "prompts:cards:section-card-variants",
      "prompts:layout:page-shell",
      "prompts:layout:sheet-demo",
      "prompts:layout:sheet-demo:state:closed",
      "prompts:layout:sheet-demo:state:opening",
      "prompts:layout:sheet-demo:state:focus-trap",
      "prompts:layout:sheet-demo:state:confirm-disabled",
      "prompts:layout:modal-demo",
      "prompts:layout:modal-demo:state:closed",
      "prompts:layout:modal-demo:state:loading",
      "prompts:layout:modal-demo:state:focus-trap",
      "prompts:layout:modal-demo:state:confirm-disabled",
      "prompts:layout:split",
      "prompts:layout:title-bar",
      "prompts:page-header:neomorphic-hero-frame",
      "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-hover",
      "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-focus",
      "prompts:page-header:neomorphic-hero-frame:state:hero-tabs-loading",
      "prompts:page-header:page-header-demo",
      "prompts:page-header:page-header-demo:state:page-header-search-focus",
      "prompts:page-header:page-header-demo:state:page-header-search-loading",
      "prompts:page-header:page-header-demo:state:page-header-search-disabled",
      "prompts:page-header:demo-header",
      "prompts:page-header:demo-header:state:demo-header-cta-hover",
      "prompts:page-header:demo-header:state:demo-header-cta-focus",
      "prompts:page-header:demo-header:state:demo-header-cta-loading",
      "prompts:page-header:demo-header:state:demo-header-cta-disabled",
      "prompts:page-header:hero",
      "prompts:page-header:hero:state:hero-tabs-selected",
      "prompts:page-header:hero:state:hero-tabs-disabled",
      "prompts:feedback:progress",
      "prompts:feedback:outline-glow",
      "prompts:feedback:snackbar",
      "prompts:feedback:toast-demo",
      "prompts:feedback:skeleton",
      "prompts:feedback:spinner",
      "prompts:toggles:toggle",
      "prompts:toggles:animation-toggle",
      "prompts:toggles:check-circle",
      "prompts:homepage:dashboard-card",
      "prompts:homepage:dashboard-list",
      "prompts:homepage:isometric-room",
      "prompts:homepage:quick-action-grid",
      "prompts:homepage:hero-planner-cards",
      "prompts:homepage:hero-portrait-frame",
      "prompts:homepage:welcome-hero-figure",
      "prompts:reviews:review-surface",
      "prompts:reviews:review-slider-track",
      "prompts:reviews:score-meter",
      "prompts:reviews:review-list-item",
      "prompts:reviews:lane-opponent-form",
      "prompts:reviews:result-score-section",
      "prompts:reviews:pillars-selector",
      "prompts:reviews:timestamp-markers",
      "prompts:goals:goals-progress",
      "prompts:goals:goal-list-demo",
      "prompts:goals:reminders-tab",
      "prompts:goals:timer-ring",
      "prompts:goals:timer-tab",
      "prompts:goals:progress-ring-icon",
      "prompts:goals:timer-ring-icon",
      "prompts:team:side-selector",
      "prompts:team:side-selector:state:hover",
      "prompts:team:side-selector:state:focus",
      "prompts:team:side-selector:state:active",
      "prompts:team:side-selector:state:disabled",
      "prompts:team:side-selector:state:loading",
      "prompts:team:champ-list-editor",
      "prompts:team:champ-list-editor:state:hover",
      "prompts:team:champ-list-editor:state:focus",
      "prompts:team:champ-list-editor:state:active",
      "prompts:team:champ-list-editor:state:disabled",
      "prompts:team:pillar-badge",
      "prompts:team:pillar-badge:state:hover",
      "prompts:team:pillar-badge:state:focus",
      "prompts:team:pillar-badge:state:active",
      "prompts:team:pillar-badge:state:disabled",
      "prompts:team:pillar-selector",
      "prompts:team:pillar-selector:state:hover",
      "prompts:team:pillar-selector:state:focus",
      "prompts:team:pillar-selector:state:active",
      "prompts:team:pillar-selector:state:disabled",
      "prompts:team:role-selector",
      "prompts:team:role-selector:state:hover",
      "prompts:team:role-selector:state:focus",
      "prompts:team:role-selector:state:active",
      "prompts:team:role-selector:state:disabled",
      "prompts:components:theme-picker",
      "prompts:components:theme-picker:state:hover",
      "prompts:components:theme-picker:state:focus",
      "prompts:components:theme-picker:state:active",
      "prompts:components:theme-picker:state:disabled",
      "prompts:components:theme-picker:state:loading",
      "prompts:components:background-picker",
      "prompts:components:background-picker:state:hover",
      "prompts:components:background-picker:state:focus",
      "prompts:components:background-picker:state:active",
      "prompts:components:background-picker:state:disabled",
      "prompts:components:background-picker:state:loading",
      "prompts:components:settings-select",
      "prompts:components:settings-select:state:hover",
      "prompts:components:settings-select:state:focus",
      "prompts:components:settings-select:state:active",
      "prompts:components:settings-select:state:disabled",
      "prompts:components:settings-select:state:loading",
      "prompts:components:theme-toggle",
      "prompts:components:theme-toggle:state:hover",
      "prompts:components:theme-toggle:state:focus",
      "prompts:components:theme-toggle:state:active",
      "prompts:components:theme-toggle:state:disabled",
      "prompts:components:theme-toggle:state:loading",
      "prompts:misc:cat-companion",
    ],
  },
  {
    loader: () => import("../tabs/HeaderTabs.gallery"),
    previewIds: [
      "ui:header-tabs:control",
    ],
  },
  {
    loader: () => import("../ui/Label.gallery"),
    previewIds: [
      "ui:label:pairing",
      "ui:label:state:default",
      "ui:label:state:hover",
      "ui:label:state:focus-visible",
      "ui:label:state:disabled",
    ],
  },
  {
    loader: () => import("../ui/Select.gallery"),
    previewIds: [
      "ui:select:variants",
      "ui:select:state:default",
      "ui:select:state:hover",
      "ui:select:state:focus-visible",
      "ui:select:state:active",
      "ui:select:state:disabled",
      "ui:select:state:loading",
    ],
  },
  {
    loader: () => import("../ui/layout/Header.gallery"),
    previewIds: [
      "ui:header:tabs",
    ],
  },
  {
    loader: () => import("../ui/layout/TabBar.gallery"),
    previewIds: [
      "ui:tab-bar:variants",
      "ui:tab-bar:state:default",
      "ui:tab-bar:state:hover",
      "ui:tab-bar:state:active",
      "ui:tab-bar:state:focus-visible",
      "ui:tab-bar:state:disabled",
      "ui:tab-bar:state:loading",
    ],
  },
  {
    loader: () => import("../ui/primitives/Badge.gallery"),
    previewIds: [
      "ui:badge:tones",
    ],
  },
  {
    loader: () => import("../ui/primitives/Button.gallery"),
    previewIds: [
      "ui:button:matrix",
      "ui:button:state:default",
      "ui:button:state:hover",
      "ui:button:state:focus",
      "ui:button:state:active",
      "ui:button:state:disabled",
      "ui:button:state:loading",
    ],
  },
  {
    loader: () => import("../ui/primitives/Field.gallery"),
    previewIds: [
      "ui:field:states",
      "ui:field:state:default",
      "ui:field:state:focus-visible",
      "ui:field:state:invalid",
      "ui:field:state:loading",
      "ui:field:state:disabled",
      "ui:field:state:with-counter",
      "ui:field:state:select",
      "ui:field:state:search",
    ],
  },
  {
    loader: () => import("../ui/primitives/IconButton.gallery"),
    previewIds: [
      "ui:icon-button:matrix",
      "ui:icon-button:state:default",
      "ui:icon-button:state:hover",
      "ui:icon-button:state:focus",
      "ui:icon-button:state:active",
      "ui:icon-button:state:disabled",
      "ui:icon-button:state:loading",
      "ui:icon-button:state:primary",
      "ui:icon-button:state:primary-hover",
      "ui:icon-button:state:primary-active",
    ],
  },
  {
    loader: () => import("../ui/primitives/Input.gallery"),
    previewIds: [
      "ui:input:states",
      "ui:input:state:default",
      "ui:input:state:hover",
      "ui:input:state:focus",
      "ui:input:state:active",
      "ui:input:state:disabled",
      "ui:input:state:loading",
    ],
  },
  {
    loader: () => import("../ui/primitives/SearchBar.gallery"),
    previewIds: [
      "ui:search-bar:states",
      "ui:search-bar:state:default",
      "ui:search-bar:state:with-label",
      "ui:search-bar:state:hover",
      "ui:search-bar:state:focus-visible",
      "ui:search-bar:state:active",
      "ui:search-bar:state:disabled",
      "ui:search-bar:state:loading",
    ],
  },
  {
    loader: () => import("../ui/primitives/SegmentedButton.gallery"),
    previewIds: [
      "ui:segmented-button:states",
      "ui:segmented-button:state:default",
      "ui:segmented-button:state:hover",
      "ui:segmented-button:state:active",
      "ui:segmented-button:state:focus-visible",
      "ui:segmented-button:state:disabled",
      "ui:segmented-button:state:disabled-link",
      "ui:segmented-button:state:loading",
    ],
  },
  {
    loader: () => import("../ui/primitives/Tabs.gallery"),
    previewIds: [
      "ui:tabs:wiring",
      "ui:tabs:state:active",
      "ui:tabs:state:hover",
      "ui:tabs:state:focus-visible",
      "ui:tabs:state:disabled",
      "ui:tabs:state:loading",
    ],
  },
  {
    loader: () => import("../ui/primitives/Textarea.gallery"),
    previewIds: [
      "ui:textarea:states",
      "ui:textarea:state:default",
      "ui:textarea:state:hover",
      "ui:textarea:state:focus-visible",
      "ui:textarea:state:active",
      "ui:textarea:state:invalid",
      "ui:textarea:state:read-only",
      "ui:textarea:state:disabled",
      "ui:textarea:state:loading",
    ],
  },
  {
    loader: () => import("../ui/toggles/Toggle.gallery"),
    previewIds: [
      "ui:toggle:interactive",
      "ui:toggle:state:default",
      "ui:toggle:state:hover",
      "ui:toggle:state:focus-visible",
      "ui:toggle:state:active",
      "ui:toggle:state:disabled",
      "ui:toggle:state:loading",
    ],
  },
] satisfies readonly GalleryPreviewModuleManifest[];

export default galleryPreviewModules;
