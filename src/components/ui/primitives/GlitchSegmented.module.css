.glitchScanlines {
  position: relative;
  overflow: hidden;
  --glitch-scanline-opacity-base: calc(var(--glitch-intensity-subtle, 1) * 0.12);
  --glitch-scanline-opacity-hover: calc(var(--glitch-intensity, 1) * 0.28);
  --glitch-scanline-opacity-focus: calc(var(--glitch-intensity, 1) * 0.35);
  --glitch-scanline-opacity-active: calc(var(--glitch-intensity, 1) * 0.45);
  --glitch-scanline-glow-hover: calc(var(--glitch-intensity, 1) * var(--space-3));
  --glitch-scanline-glow-focus: calc(var(--glitch-intensity, 1) * var(--space-4));
}

.glitchScanlines::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: repeating-linear-gradient(
    to bottom,
    hsl(var(--accent) / 0.08) 0 var(--spacing-0-25),
    transparent var(--spacing-0-25) var(--spacing-0-75)
  );
  opacity: var(--glitch-scanline-opacity-base);
  mix-blend-mode: overlay;
  transition:
    opacity 200ms,
    filter 200ms;
}

.glitchScanlines:hover::after {
  opacity: var(--glitch-scanline-opacity-hover);
  filter: drop-shadow(
    0 0 var(--glitch-scanline-glow-hover) var(--hover, hsl(var(--glow) / 0.5))
  );
  animation: crt-scan 4s linear infinite;
}

.glitchScanlines:focus-visible::after {
  opacity: var(--glitch-scanline-opacity-focus);
  filter: drop-shadow(
    0 0 var(--glitch-scanline-glow-focus) var(--focus, hsl(var(--ring)))
  );
}

.glitchScanlines:active::after,
.glitchScanlines[aria-pressed="true"]::after,
.glitchScanlines[data-selected="true"]::after {
  opacity: var(--glitch-scanline-opacity-active);
  filter: drop-shadow(
    0 0 calc(var(--glitch-intensity, 1) * var(--space-4))
      var(--active, hsl(var(--glow)))
  );
  animation:
    crt-scan 1s linear infinite,
    crt-jitter 200ms steps(2, end) infinite;
}

.glitchScanlines:disabled::after,
.glitchScanlines[aria-disabled="true"]::after {
  opacity: var(--disabled, 0.5);
  filter: none;
  animation: none;
}

.glitchScanlines::before {
  content: "";
  position: absolute;
  inset: calc(-1 * var(--spacing-0-5));
  border-radius: inherit;
  pointer-events: none;
  background: radial-gradient(
    50% 50% at 50% 50%,
    hsl(var(--glow) / 0.35),
    transparent 70%
  );
  background: radial-gradient(
    50% 50% at 50% 50%,
    color-mix(in srgb, var(--focus, hsl(var(--glow))) 35%, transparent),
    transparent 70%
  );
  opacity: 0;
  transition: opacity 200ms;
}

.glitchScanlines:hover::before {
  opacity: calc(var(--glitch-intensity, 1) * 0.25);
  animation: crt-glow 2.4s ease-in-out infinite alternate;
}

.glitchScanlines:focus-visible::before {
  opacity: calc(var(--glitch-intensity, 1) * 0.35);
}

.glitchScanlines:active::before,
.glitchScanlines[aria-pressed="true"]::before,
.glitchScanlines[data-selected="true"]::before {
  opacity: calc(var(--glitch-intensity, 1) * 0.45);
}

.glitchScanlines:disabled::before,
.glitchScanlines[aria-disabled="true"]::before {
  opacity: calc(var(--disabled, 0.5) * 0.4);
  animation: none;
}

@keyframes crt-scan {
  0% {
    background-position-y: 0;
  }
  100% {
    background-position-y: 100%;
  }
}

@keyframes crt-glow {
  0% {
    opacity: 0.2;
  }
  100% {
    opacity: 0.4;
  }
}

@keyframes crt-jitter {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(var(--spacing-0-25));
  }
}

@media (prefers-reduced-motion: reduce) {
  .glitchScanlines:hover::after,
  .glitchScanlines:active::after,
  .glitchScanlines[aria-pressed="true"]::after,
  .glitchScanlines[data-selected="true"]::after,
  .glitchScanlines:hover::before,
  .glitchScanlines:active::before,
  .glitchScanlines[aria-pressed="true"]::before,
  .glitchScanlines[data-selected="true"]::before {
    animation: none;
  }
}

html.no-animations .glitchScanlines:hover::after,
html.no-animations .glitchScanlines:active::after,
html.no-animations .glitchScanlines[aria-pressed="true"]::after,
html.no-animations .glitchScanlines[data-selected="true"]::after,
html.no-animations .glitchScanlines:hover::before,
html.no-animations .glitchScanlines:active::before,
html.no-animations .glitchScanlines[aria-pressed="true"]::before,
html.no-animations .glitchScanlines[data-selected="true"]::before {
  animation: none;
}
