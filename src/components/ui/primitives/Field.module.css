.root {
  --field-h: var(--control-h-md);
  --bg: var(--surface);
  position: relative;
}

.root::after {
  content: "";
  position: absolute;
  inset: calc(var(--hairline-w, 1px) * -1);
  border-radius: inherit;
  pointer-events: none;
  opacity: 0;
  box-shadow: var(--shadow-control-hover);
  transition: opacity var(--motion-duration-sm) var(--ease-out);
}

.root:where(
    :not([data-disabled="true"]):not([aria-disabled="true"])
  ):is(:hover, :focus-visible, :focus-within)::after,
.root[data-field-state="readonly"]:focus-within::after,
.root[data-field-state="loading"]:focus-within::after {
  opacity: 1;
}

.root[data-disabled="true"]::after,
.root[aria-disabled="true"]::after {
  opacity: 0;
}

.root[data-field-height="sm"] {
  --field-h: var(--control-h-sm);
}

.root[data-field-height="md"] {
  --field-h: var(--control-h-md);
}

.root[data-field-height="lg"] {
  --field-h: var(--control-h-lg);
}

.root[data-field-height="xl"] {
  --field-h: var(--control-h-xl);
}

.root[data-custom-height] {
  --field-h: var(--field-custom-height, var(--control-h-md));
}

.root[data-field-state="default"],
.root:not([data-field-state]) {
  --bg: var(--surface);
}

.root[data-field-state="readonly"] {
  --bg: var(--surface);
}

.root[data-field-state="invalid"] {
  --bg: var(--surface);
}

.root[data-field-state="loading"] {
  --bg: var(--surface);
}

.root[data-field-state="disabled"] {
  --bg: var(--card);
}
