@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  :root {
    --shell-width: 1120px;
    --shell-max: var(--shell-width);
    --accent-2-foreground: var(--primary-foreground);
    --danger-foreground: var(--primary-foreground);
  }

  .page-shell {
    width: 100%;
    max-width: var(--shell-max, var(--shell-width));
    margin-inline: auto;
    padding-inline: clamp(var(--space-3), 2.5vw, var(--space-6));
  }

  /* Optional global overlays */
  html.fx-scanlines::after,
  body.fx-scanlines::after {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 5;
    background: repeating-linear-gradient(
      to bottom,
      hsl(var(--foreground) / 0.02) 0px,
      hsl(var(--foreground) / 0.02) 1px,
      transparent 2px,
      transparent 3px
    );
    mix-blend-mode: soft-light;
  }

  html.fx-noise::before,
  body.fx-noise::before {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 4;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='140' height='140'><filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/></filter><rect width='100%' height='100%' filter='url(%23n)' opacity='0.06'/></svg>");
    background-size: 140px 140px;
  }

  html.fx-gifbars::before,
  body.fx-gifbars::before {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 3;
    background-image: var(--asset-glitch-gif-url, none);
    background-size: cover;
    background-position: center;
    mix-blend-mode: overlay;
    opacity: 0.08;
  }

  html.fx-overdrive .card-neo:hover::before,
  html.fx-overdrive .card-neo-soft:hover::before {
    animation: edgePulse 1.6s ease-in-out infinite;
  }

  html.fx-overdrive .card-neo.glitchy:hover .card-title,
  html.fx-overdrive .card-neo-soft.glitchy:hover .card-title {
    animation: chromaJitter 0.8s steps(3, end) infinite;
  }
}

/* ---------- Base reset ---------- */
html,
body,
#__next {
  height: 100%;
}
html {
  scroll-behavior: smooth;
}

html.no-animations {
  scroll-behavior: auto;
}
html.no-animations *,
html.no-animations *::before,
html.no-animations *::after {
  animation: none !important;
  transition: none !important;
}
* {
  box-sizing: border-box;
}

/* Global focus & selection styling */
*:focus-visible {
  outline: var(--space-0-5) solid hsl(var(--ring-contrast));
  outline-offset: var(--space-0-5);
  box-shadow: 0 0 calc(var(--space-2) - var(--space-0-5)) hsl(var(--glow) / 0.6);
}

@media (forced-colors: active) {
  *:focus-visible {
    outline: var(--space-0-5) solid CanvasText;
    outline-offset: var(--space-0-5);
    box-shadow: none;
  }
}

::selection {
  background: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

/* ---------- Background & typography ---------- */
body {
  color: hsl(var(--foreground));
  background: hsl(var(--background));
  min-height: 100dvh;
  position: relative;
  overflow-x: hidden;
}
/* Backdrop layers now live in themes.css (per-theme). */
html.bg-intense body::before {
  opacity: 0.05;
}
html.bg-intense body::after {
  filter: blur(2px) saturate(120%);
}

@layer base {
  * {
    @apply border-border;
  }
  h1 {
    @apply text-title-lg font-semibold tracking-[-0.01em];
  }
  h2 {
    @apply text-title font-semibold tracking-[-0.01em];
  }
  h3 {
    @apply text-body font-semibold tracking-[-0.01em];
  }
}

/* ---------- Title effects ---------- */
.title-ghost,
:where(h1, h2, h3, .card-title) {
  position: relative;
  text-shadow:
    var(--space-0-25) 0 hsl(var(--accent-2)),
    calc(var(--space-0-25) * -1) 0 hsl(var(--lav-deep));
  animation: ghost 3.2s ease-in-out infinite;
}
.no-ghost {
  text-shadow: none !important;
  animation: none !important;
}
.title-glow {
  text-shadow: 0 0 calc(var(--space-4) + var(--space-1)) hsl(var(--ring) / 0.3);
}

/* Glitch utility (subtle RGB offset) */
.glitch {
  position: relative;
  filter: drop-shadow(var(--space-0-25) 0 0 hsl(var(--accent-2)))
    drop-shadow(calc(var(--space-0-25) * -1) 0 0 hsl(var(--lav-deep)));
}
/* Hero glow rim (used on Hero card) */
.title-glow {
  text-shadow:
    0 0 calc(var(--space-2) - var(--space-0-5)) hsl(var(--ring) / 0.6),
    0 0 calc(var(--space-3) + var(--space-0-5)) hsl(var(--accent) / 0.5);
}

/* Neon text glow */
.neon-glow {
  color: hsl(var(--neon));
  text-shadow: var(--shadow-neon);
}

/* ---------- Reusable aurora backdrops ---------- */
.glitch-root {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}
.bg-aurora-layers {
  background:
    radial-gradient(
      1200px 700px at 20% -10%,
      hsl(var(--aurora-p) / 0.2),
      transparent 60%
    ),
    radial-gradient(
      1000px 600px at 110% 10%,
      hsl(var(--aurora-g) / 0.18),
      transparent 60%
    ),
    linear-gradient(0deg, hsl(var(--foreground) / 0.08) 1px, transparent 1px),
    linear-gradient(90deg, hsl(var(--foreground) / 0.08) 1px, transparent 1px);
  background-size:
    auto,
    auto,
    100% 2px,
    2px 100%;
}
.bg-noise {
  background-image: var(--asset-noise-url, none);
  opacity: 0.1;
}

/* ---------- Components ---------- */

@layer components {
  /* Hero rail (Lavender-Glitch edge with bloom) */
  .header-rail {
    position: absolute;
    background: linear-gradient(
      180deg,
      hsl(var(--ring) / 0.9),
      hsl(var(--accent) / 0.9),
      hsl(var(--primary) / 0.9)
    );
  }
  .header-rail::before,
  .header-rail::after {
    content: "";
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    pointer-events: none;
  }
  /* rotating chroma edge */
  .header-rail::before {
    background: conic-gradient(
      from 180deg,
      hsl(var(--primary) / 0),
      hsl(var(--primary) / 0.8),
      hsl(var(--accent-3) / 0.8),
      hsl(var(--lav-deep) / 0.8),
      hsl(var(--primary) / 0)
    );
    filter: saturate(1.1);
    animation:
      hero-hue-sweep 7s linear infinite,
      hero-rail-jitter 2.2s steps(6, end) infinite;
    opacity: 0.6;
  }
  /* soft flicker bloom */
  .header-rail::after {
    background: radial-gradient(
      60% 100% at 50% 50%,
      hsl(var(--ring) / 0.35),
      transparent 70%
    );
    filter: blur(4px);
    mix-blend-mode: screen;
    animation: hero-rail-flicker 3.2s steps(24, end) infinite alternate;
    opacity: 0.3;
  }
}

@layer components {
  /* Cards: glossy neon with crisp hairlines */
  .card-neo,
  .card-neo-soft {
    --_r: var(--radius-card);
    border-radius: var(--_r);
    border: 0;
    background-clip: padding-box;
    position: relative;
    isolation: isolate;
    transition:
      transform var(--dur-quick) var(--ease-out),
      box-shadow var(--dur-quick) var(--ease-out),
      border-color var(--dur-quick) var(--ease-out),
      background var(--dur-quick) var(--ease-out);
    will-change: transform, box-shadow;
  }
  .card-neo {
    background: hsl(var(--card) / 0.75);
    box-shadow:
      0 0 0 var(--hairline-w) hsl(var(--card-hairline)) inset,
      0 calc(var(--space-6) - var(--space-0-5))
        calc(var(--space-8) - var(--space-1)) hsl(var(--shadow-base) / 0.35);
  }
  .card-neo-soft {
    background: linear-gradient(
      180deg,
      hsl(var(--card) / 0.75),
      hsl(var(--card) / 0.55)
    );
    -webkit-backdrop-filter: blur(6px);
    backdrop-filter: blur(6px);
    box-shadow:
      0 0 0 var(--hairline-w) hsl(var(--card-hairline)) inset,
      inset 0 var(--space-0-25) 0 hsl(var(--foreground) / 0.05),
      0 calc(var(--space-6) - var(--space-0-5))
        calc(var(--space-8) - var(--space-1)) hsl(var(--shadow-base) / 0.35);
  }
  .card-neo::before,
  .card-neo-soft::before {
    content: "";
    position: absolute;
    inset: -1px;
    padding: var(--space-0-25);
    border-radius: calc(var(--_r) + var(--space-0-25));
    background: var(--edge-iris);
    mask:
      linear-gradient(hsl(var(--foreground)) 0 0) content-box,
      linear-gradient(hsl(var(--foreground)) 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0.45;
    pointer-events: none;
    transition: opacity var(--dur-quick) var(--ease-out);
  }
  .card-neo::after,
  .card-neo-soft::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
    background: repeating-linear-gradient(
      to bottom,
      hsl(var(--foreground) / 0.035) 0,
      hsl(var(--foreground) / 0.035) var(--space-0-25),
      transparent var(--space-0-5),
      transparent calc(var(--space-0-5) + var(--space-0-25))
    );
    mix-blend-mode: soft-light;
    opacity: 0;
    transition: opacity var(--dur-quick) var(--ease-out);
  }
  /* HOVER: no translate */
  .card-neo:hover,
  .card-neo-soft:hover {
    box-shadow: 0 calc(var(--space-5) - var(--space-0-5)) var(--space-7)
      hsl(var(--shadow-color) / 0.25);
  }
  .card-neo:hover::before,
  .card-neo-soft:hover::before {
    opacity: 0.6;
  }
  .card-neo:hover::after,
  .card-neo-soft:hover::after {
    opacity: 0.55;
  }
  .card-neo[data-active="true"],
  .card-neo-soft[data-active="true"] {
    box-shadow:
      0 0 0 var(--hairline-w) hsl(var(--ring)) inset,
      0 0 0 var(--space-0-5) hsl(var(--ring) / 0.22),
      0 calc(var(--space-5) + var(--space-0-5))
        calc(var(--space-8) - var(--space-1)) hsl(var(--shadow-color) / 0.28);
  }
  .card-neo:focus-within,
  .card-neo-soft:focus-within {
    outline: none;
    box-shadow:
      0 0 0 var(--space-0-75) hsl(var(--ring) / 0.35),
      0 calc(var(--space-5) + var(--space-0-5))
        calc(var(--space-8) - var(--space-1)) hsl(var(--shadow-color) / 0.28);
  }

  /* Buttons */
  /* ====== Button animations (shared) ====== */
  /* === Button animations === */
  @keyframes btnShift {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 200% 50%;
    }
  }
  @keyframes btnFlicker {
    0%,
    2%,
    35%,
    37%,
    100% {
      opacity: 1;
    }
    1% {
      opacity: 0.86;
    }
    36% {
      opacity: 0.92;
    }
    60% {
      opacity: 0.88;
    }
    61% {
      opacity: 1;
    }
  }
  @keyframes btnScan {
    0% {
      transform: translateY(-28%);
    }
    100% {
      transform: translateY(28%);
    }
  }
  @keyframes igniteFlicker {
    0% {
      opacity: 0.1;
      filter: blur(0.6px);
    }
    8% {
      opacity: 1;
    }
    12% {
      opacity: 0.25;
    }
    20% {
      opacity: 1;
    }
    28% {
      opacity: 0.35;
    }
    40% {
      opacity: 1;
    }
    55% {
      opacity: 0.45;
      filter: blur(0.2px);
    }
    70% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes powerDown {
    0% {
      opacity: 0.8;
      transform: scale(1);
    }
    30% {
      opacity: 0.35;
      transform: scale(0.992) translateY(0.2px);
    }
    60% {
      opacity: 0.12;
      transform: scale(0.985) translateY(-0.2px);
    }
    100% {
      opacity: 0;
      transform: scale(0.985);
    }
  }

  /* Optional: flash sweep arc */
  @keyframes flashSweep {
    0% {
      opacity: 0;
      transform: rotate(0turn) scale(1);
    }
    6% {
      opacity: 0.95;
      transform: rotate(0.06turn) scale(1.002);
    }
    100% {
      opacity: 0;
      transform: rotate(1turn) scale(1.01);
    }
  }

  @keyframes btnShift {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 200% 50%;
    }
  }
  @keyframes btnFlicker {
    0%,
    2%,
    35%,
    37%,
    100% {
      opacity: 1;
    }
    1% {
      opacity: 0.86;
    }
    36% {
      opacity: 0.92;
    }
    60% {
      opacity: 0.88;
    }
    61% {
      opacity: 1;
    }
  }
  @keyframes btnScan {
    0% {
      transform: translateY(-28%);
    }
    100% {
      transform: translateY(28%);
    }
  }
  @keyframes igniteFlicker {
    0% {
      opacity: 0.1;
      filter: blur(0.6px);
    }
    8% {
      opacity: 1;
    }
    12% {
      opacity: 0.25;
    }
    20% {
      opacity: 1;
    }
    28% {
      opacity: 0.35;
    }
    40% {
      opacity: 1;
    }
    55% {
      opacity: 0.45;
      filter: blur(0.2px);
    }
    70% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes powerDown {
    0% {
      opacity: 0.8;
      transform: scale(1);
    }
    30% {
      opacity: 0.35;
      transform: scale(0.992) translateY(0.2px);
    }
    60% {
      opacity: 0.12;
      transform: scale(0.985) translateY(-0.2px);
    }
    100% {
      opacity: 0;
      transform: scale(0.985);
    }
  }

  .btn-like-segmented {
    @apply inline-flex items-center rounded-[var(--radius-2xl)] border px-4 py-2 text-ui font-medium tracking-[0.02em] transition-colors duration-[var(--dur-quick)] ease-out motion-reduce:transition-none focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[--theme-ring] focus-visible:ring-offset-0 disabled:opacity-[var(--disabled)] disabled:pointer-events-none data-[loading=true]:opacity-[var(--loading)] data-[loading=true]:pointer-events-none;
    position: relative;
    overflow: hidden;
    border-color: hsl(var(--card-hairline));
    background:
      linear-gradient(90deg, hsl(var(--primary-soft)) 0%, transparent 100%),
      hsl(var(--card));
    color: hsl(var(--muted-foreground));
  }
  .btn-like-segmented:hover {
    background:
      linear-gradient(90deg, hsl(var(--primary) / 0.12) 0%, transparent 100%),
      hsl(var(--card));
    color: hsl(var(--foreground));
    text-shadow: 0 0 calc(var(--space-2) - var(--space-0-5))
      hsl(var(--accent) / 0.25);
  }
  .btn-like-segmented:active {
    background:
      linear-gradient(90deg, hsl(var(--primary) / 0.18) 0%, transparent 100%),
      hsl(var(--card));
    color: hsl(var(--foreground));
  }
  .btn-like-segmented::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 24%;
    left: -30%;
    background: linear-gradient(
      90deg,
      transparent,
      hsl(var(--foreground) / 0.18),
      transparent
    );
    transform: skewX(-20deg);
    opacity: 0;
  }
  .btn-like-segmented:hover::after {
    animation: sheenSweep var(--dur-slow) var(--ease-out) 1 forwards;
    opacity: 1;
  }
  @media (prefers-reduced-motion: reduce) {
    .btn-like-segmented:hover::after {
      animation: none;
    }
  }
  .btn-like-segmented[aria-current="page"],
  .btn-like-segmented.is-active {
    color: hsl(var(--foreground));
    background: color-mix(in oklab, hsl(var(--card)) 75%, transparent);
    border-color: hsl(var(--ring));
    box-shadow:
      0 0 0 var(--space-0-5) hsl(var(--ring) / 0.35),
      0 var(--space-3) calc(var(--space-5) + var(--space-1))
        hsl(var(--ring) / 0.25);
  }

  .btn-glitch {
    border-radius: var(--radius-2xl);
    color: hsl(var(--primary-foreground));
    background: var(--seg-active-grad);
    box-shadow:
      0 0 calc(var(--space-5) + var(--space-0-25)) hsl(var(--accent) / 0.6),
      0 0 calc(var(--space-7) + var(--space-0-5)) hsl(var(--accent-2) / 0.4);
    transition:
      transform var(--dur-quick) var(--ease-out),
      filter var(--dur-quick);
  }
  .btn-glitch:hover {
    filter: brightness(1.05);
  }

  .btn-lift {
    border-radius: var(--radius-2xl);
    background: hsl(var(--card));
    border: 1px solid hsl(var(--card-hairline));
    box-shadow: 0 calc(var(--space-2) - var(--space-0-5))
      calc(var(--space-4) + var(--space-0-5)) hsl(var(--shadow-color) / 0.18);
    transition:
      transform var(--dur-quick) var(--ease-out),
      box-shadow var(--dur-quick);
  }
  .btn-lift:hover {
    box-shadow: 0 calc(var(--space-3) - var(--space-0-5)) var(--space-5)
      hsl(var(--shadow-color) / 0.25);
  }

  /* Inputs */
  .input-base {
    @apply rounded-[var(--radius-2xl)] border text-ui font-medium;
    height: var(--control-h);
    padding: 0 var(--control-px);
    font-size: var(--control-fs);
    border-radius: var(--control-radius);
    background-color: hsl(var(--input));
    border-color: hsl(var(--card-hairline));
    color: hsl(var(--foreground));
    transition:
      box-shadow var(--dur-quick),
      border-color var(--dur-quick),
      background var(--dur-quick);
    display: inline-flex;
    align-items: center;
  }
  .input-base::placeholder {
    color: hsl(var(--muted-foreground) / 0.8);
  }
  .input-base:focus {
    outline: none;
    box-shadow: 0 0 0 var(--space-0-75) hsl(var(--ring) / 0.35);
    border-color: hsl(var(--ring));
  }

  /* Section shell */
  .section {
    border: 0;
    border-radius: var(--radius-card);
    background: hsl(var(--card));
    box-shadow:
      0 0 0 var(--hairline-w) hsl(var(--card-hairline)) inset,
      0 calc(var(--space-3) - var(--space-0-5))
        calc(var(--space-6) - var(--space-0-5)) hsl(var(--shadow-base) / 0.25);
  }
  .section-h {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: calc(var(--space-3) + var(--space-0-5)) var(--space-4);
    border-bottom: 1px solid hsl(var(--card-hairline) / 0.55);
    border-top-left-radius: calc(var(--radius-card) - var(--hairline-w));
    border-top-right-radius: calc(var(--radius-card) - var(--hairline-w));
    background: linear-gradient(
      180deg,
      hsl(var(--card)),
      hsl(var(--card) / 0.85)
    );
    background-clip: padding-box;
  }
  .section-h.sticky {
    position: sticky;
    top: 0;
    z-index: 5;
    backdrop-filter: blur(8px);
  }
  .section-b {
    padding: 1.5rem;
  }

  /* Sheen border utility */
  .sheen-border {
    position: relative;
    background: hsl(var(--card));
  }
  .sheen-border::before {
    content: "";
    position: absolute;
    inset: 0;
    padding: var(--space-0-25);
    border-radius: var(--radius-card);
    background: conic-gradient(
      from var(--a, 0deg),
      hsl(var(--ring) / 0),
      hsl(var(--ring) / 0.6),
      hsl(var(--accent-2) / 0.6),
      hsl(var(--lav-deep) / 0.6),
      hsl(var(--ring) / 0)
    );
    -webkit-mask:
      linear-gradient(hsl(var(--foreground)) 0 0) content-box,
      linear-gradient(hsl(var(--foreground)) 0 0);
    mask:
      linear-gradient(hsl(var(--foreground)) 0 0) content-box,
      linear-gradient(hsl(var(--foreground)) 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
    animation: sheen-rotate 6s linear infinite;
    opacity: 0.6;
  }

  /* Hero & cards used elsewhere */
  .bg-hero-soft {
    position: relative;
    border: 1px solid hsl(var(--card-hairline));
    background:
      radial-gradient(
        120% 200% at 0% 0%,
        hsl(var(--primary) / 0.18),
        transparent 60%
      ),
      radial-gradient(
        120% 200% at 100% 0%,
        hsl(var(--accent) / 0.18),
        transparent 60%
      ),
      linear-gradient(180deg, hsl(var(--card)), hsl(var(--background)));
    box-shadow:
      0 var(--space-0-25) 0 hsl(var(--foreground) / 0.08) inset,
      0 0 0 var(--space-0-25) hsl(var(--card-hairline) / 0.65),
      0 calc(var(--space-3) + var(--space-0-5))
        calc(var(--space-6) + var(--space-2)) hsl(var(--shadow-color) / 0.45);
  }
  .bg-hero-soft::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    background-image: repeating-linear-gradient(
      to bottom,
      hsl(var(--foreground) / 0.04),
      hsl(var(--foreground) / 0.04) var(--space-0-25),
      transparent var(--space-0-25),
      transparent calc(var(--space-0-5) + var(--space-0-25))
    );
  }

  /* Base chip & variants */
  .pill {
    @apply inline-flex items-center rounded-full border text-label font-medium tracking-[0.02em];
    height: 1.75rem;
    padding: 0 0.75rem;
    gap: 0.5rem;
    background: hsl(var(--card));
    color: hsl(var(--foreground));
    border-color: hsl(var(--border) / 0.35);
  }
  .pill--low {
    background: hsl(var(--accent) / 0.15);
    border-color: hsl(var(--accent) / 0.35);
  }
  .pill--medium {
    background: hsl(var(--primary) / 0.15);
    border-color: hsl(var(--primary) / 0.35);
  }
  .pill--high {
    background: hsl(var(--ring) / 0.15);
    border-color: hsl(var(--ring) / 0.45);
  }
  .pill--done {
    color: hsl(var(--foreground));
    background: linear-gradient(
      90deg,
      hsl(var(--success) / 0.16),
      hsl(var(--success) / 0.24)
    );
    border-color: hsl(var(--success));
    box-shadow: none;
  }
}

/* ---------- Planner visuals ---------- */
.bg-hero-soft-lite {
  position: relative;
  background: linear-gradient(
    180deg,
    hsl(var(--background)) 0%,
    hsl(var(--card)) 100%
  );
  border-bottom: 1px solid hsl(var(--card-hairline));
  overflow: clip;
}
.bg-hero-soft-lite::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-image:
    linear-gradient(
      0deg,
      transparent 24%,
      hsl(var(--card-hairline) / 0.15) 25% 26%,
      transparent 27% 74%,
      hsl(var(--card-hairline) / 0.15) 75% 76%,
      transparent 77%
    ),
    linear-gradient(
      90deg,
      transparent 24%,
      hsl(var(--card-hairline) / 0.15) 25% 26%,
      transparent 27% 74%,
      hsl(var(--card-hairline) / 0.15) 75% 76%,
      transparent 77%
    );
  background-size: 40px 40px;
  opacity: 0.2;
  border-radius: inherit;
}

/* ---------- Progress bars ---------- */

.glitch-track {
  position: relative;
  height: 10px;
  border-radius: var(--radius-full);
  background: hsl(var(--foreground) / 0.08);
  overflow: hidden;
  box-shadow:
    inset 0 0 0 var(--space-0-25) hsl(var(--foreground) / 0.06),
    inset var(--space-0-5) var(--space-0-5) var(--space-1)
      hsl(var(--shadow-color) / 0.45),
    inset calc(var(--space-0-5) * -1) calc(var(--space-0-5) * -1)
      var(--space-1) hsl(var(--foreground) / 0.06);
}
.glitch-fill {
  height: 100%;
  width: 0%;
  border-radius: var(--radius-full);
  background: linear-gradient(90deg, hsl(var(--accent)), hsl(var(--accent-2)));
  background-size: 200% 100%;
  transition: width 0.35s cubic-bezier(0.22, 0.99, 0.28, 0.99);
  animation: glitchSheen 3s linear infinite;
  box-shadow: 0 0 var(--space-2) hsl(var(--accent) / 0.5);
}
.glitch-scan {
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    to bottom,
      transparent 0,
      transparent var(--space-0-5),
      hsl(var(--foreground) / 0.06) var(--space-0-5)
        calc(var(--space-0-5) + var(--space-0-25))
  );
  mix-blend-mode: screen;
  pointer-events: none;
  animation:
    glitchScan 1.6s steps(8, end) infinite,
    glitchJitter 0.8s steps(3, end) infinite;
}
.glitch-track.is-complete .glitch-fill {
  filter: drop-shadow(0 0 var(--space-2) hsl(var(--accent)));
}
.glitch-percent {
  font-variant-numeric: tabular-nums;
}

/* ---------- Status strip pills (scoped) ---------- */
.meta-strip {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  margin-top: 0.5rem;
}
.meta-strip .pill {
  --b: hsl(var(--card-hairline));
  --bg: hsl(var(--background));
  @apply text-label font-medium tracking-[0.02em];
  line-height: 1;
  padding: 0.45rem 0.55rem;
  border-radius: var(--radius-full);
  border: 1px solid var(--b);
  background: linear-gradient(180deg, var(--bg), hsl(var(--card)));
  color: hsl(var(--muted-foreground));
  text-transform: uppercase;
  box-shadow: inset 0 0 0 var(--space-0-25) hsl(var(--card-hairline) / 0.4);
}
.pill--trace {
  border-color: transparent;
  background:
    linear-gradient(hsl(var(--card)), hsl(var(--card))) padding-box,
    linear-gradient(90deg, hsl(var(--accent)), hsl(var(--primary))) border-box;
  color: hsl(var(--primary-foreground));
}
.pill--ok {
  border-color: hsl(var(--accent));
  color: hsl(var(--accent));
  box-shadow: 0 0 var(--space-3) hsl(var(--accent) / 0.35);
}
.pill--warn {
  border-color: hsl(var(--muted-foreground));
  color: hsl(var(--muted-foreground));
  box-shadow: 0 0 var(--space-3)
    hsl(var(--muted-foreground) / 0.25);
}
.pill--pulse {
  position: relative;
  border-color: hsl(var(--accent));
  color: hsl(var(--accent));
}
.pill--pulse::after {
  content: "";
  position: absolute;
  inset: calc(var(--space-0-5) * -1);
  border-radius: var(--radius-full);
  border: 1px solid hsl(var(--accent) / 0.45);
  animation: pill-pulse 1.6s ease-out infinite;
}

/* ---------- Misc helpers ---------- */
.card-title {
  font-weight: 700;
  letter-spacing: -0.01em;
}
.card-subtitle {
  @apply text-ui text-muted-foreground;
}
.tile-row {
  @apply h-12 flex items-center;
}

/* ---------- Animations ---------- */

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.001ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.001ms !important;
    scroll-behavior: auto !important;
  }
}

/* ---------- Scrollbar ---------- */
*::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
*::-webkit-scrollbar-thumb {
  background: linear-gradient(
    180deg,
    hsl(var(--primary) / 0.7),
    hsl(var(--accent) / 0.7)
  );
  border-radius: var(--radius-full);
  border: 2px solid hsl(var(--background));
}
*::-webkit-scrollbar-track {
  background: hsl(var(--background));
}

/* ---------- Week shell ---------- */
.week-outline {
  position: relative;
  border: 0;
  border-radius: var(--radius-card);
  background:
    radial-gradient(
      120% 90% at 10% -20%,
      hsl(var(--accent) / 0.1),
      transparent 60%
    ),
    radial-gradient(
      140% 100% at 100% 120%,
      hsl(var(--primary) / 0.08),
      transparent 60%
    ),
    linear-gradient(180deg, hsl(var(--card)), hsl(var(--background)));
  box-shadow:
    0 calc(var(--space-4) + var(--space-0-5)) var(--space-7)
      hsl(var(--shadow-color) / 0.35),
    inset 0 0 0 var(--hairline-w) hsl(var(--card-hairline));
  overflow: hidden;
}
.week-outline::before {
  content: "";
  position: absolute;
  inset: -1px;
  border-radius: inherit;
  pointer-events: none;
  padding: var(--space-0-25);
  background: conic-gradient(
    from 180deg,
    hsl(var(--ring) / 0),
    hsl(var(--ring) / 0.7),
    hsl(var(--accent-2) / 0.7),
    hsl(var(--lav-deep) / 0.7),
    hsl(var(--ring) / 0)
  );
  mask:
    linear-gradient(hsl(var(--foreground)) 0 0) content-box,
    linear-gradient(hsl(var(--foreground)) 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.55;
}
.week-outline::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  background:
    repeating-linear-gradient(
      90deg,
      hsl(var(--accent) / 0.22) 0 var(--space-0-25),
      transparent var(--space-0-25)
        calc(var(--space-5) + var(--space-0-5))
    ),
    repeating-linear-gradient(
      0deg,
      hsl(var(--accent) / 0.18) 0 var(--space-0-25),
      transparent var(--space-0-25)
        calc(var(--space-5) + var(--space-0-5))
    ),
    linear-gradient(
      90deg,
      transparent,
      hsl(var(--foreground) / 0.08),
      transparent
    );
  mix-blend-mode: screen;
  animation: week-scan 3.6s linear infinite;
  opacity: 0.1;
}
@keyframes week-scan {
  to {
    transform: translateX(100%);
  }
}

.week-outline .section-header {
  border-bottom: 0 !important;
  box-shadow: 0 var(--space-0-25) 0 hsl(var(--accent) / 0.14) inset;
  background: color-mix(in oklab, hsl(var(--background)) 72%, transparent);
  backdrop-filter: blur(8px);
}

/* Autofill fix */
input:-webkit-autofill,
textarea:-webkit-autofill {
  box-shadow: 0 0 0 calc(var(--space-8) * 15.625) hsl(var(--card)) inset;
  -webkit-text-fill-color: hsl(var(--foreground));
  transition: background-color 9999s ease-out 0s;
  caret-color: hsl(var(--foreground));
}

/* === CheatSheet polish: pills, borders, spacing === */

/* Hairline border that respects theme tokens */
.card-hairline {
  @apply border border-card-hairline;
}

/* Compact pill */
.pill-compact {
  @apply inline-flex items-center rounded-full border border-card-hairline px-2 py-1 text-label font-medium tracking-[0.02em] leading-tight;
  background-color: hsl(var(--muted) / 0.18);
}
.pill-compact:hover {
  background-color: hsl(var(--muted) / 0.28);
}
.pill-compact--primary {
  @apply border-ring;
  background-color: hsl(var(--primary-soft) / 0.25);
}
.pill-compact--accent {
  @apply border-ring;
  background-color: hsl(var(--accent-soft) / 0.25);
}

/* Card padding rhythm */
.card-pad {
  @apply p-4 md:p-5;
}

/* === Pretty Badges (Lavender-Glitch hairline + glow) === */
.badge {
  display: inline-flex;
  align-items: center;
  gap: calc(var(--space-2) - var(--space-1) / 2);
  border-radius: var(--radius-full);
  white-space: nowrap;
  max-width: 100%;
  font-weight: 500;
  letter-spacing: -0.01em;
  background: color-mix(in oklab, hsl(var(--muted)) 18%, transparent);
  border: 1px solid hsl(var(--card-hairline));
  box-shadow:
    inset 0 var(--space-0-25) 0 hsl(var(--foreground) / 0.06),
    0 0 0 var(--space-0-125) hsl(var(--card-hairline) / 0.35),
    0 calc(var(--space-3) - var(--space-0-5))
      calc(var(--space-4) + var(--space-1)) hsl(var(--shadow-color) / 0.18);
  transition:
    background 0.15s ease,
    box-shadow 0.15s ease,
    transform 0.12s ease;
}
.badge--xs {
  padding: calc(var(--space-1) - var(--space-1) / 4) var(--space-2);
  @apply text-label font-medium tracking-[0.02em];
  line-height: 1;
}
.badge--sm {
  padding: calc(var(--space-3) / 2 - var(--space-1) / 4) calc(var(--space-3) - var(--space-1) / 2);
  @apply text-label font-medium tracking-[0.02em];
  line-height: 1;
}
.badge__icon {
  display: inline-flex;
  opacity: 0.85;
  transform: translateY(0.5px);
}
.badge[data-interactive="true"]:hover {
  background: color-mix(in oklab, hsl(var(--muted)) 28%, transparent);
}
.badge[data-selected="true"] {
  background: color-mix(in oklab, hsl(var(--primary-soft)) 36%, transparent);
  border-color: hsl(var(--ring));
  box-shadow:
    0 0 0 var(--space-0-25) hsl(var(--ring) / 0.6) inset,
    0 var(--space-2) calc(var(--space-5) - var(--space-0-5))
      hsl(var(--shadow-color) / 0.6);
}
.badge[data-tone="primary"] {
  border-color: hsl(var(--ring));
}
.badge[data-tone="accent"] {
  border-color: hsl(var(--accent));
}
.badge[data-tone="top"] {
  border-color: hsl(var(--tone-top));
}
.badge[data-tone="jungle"] {
  border-color: hsl(var(--tone-jg));
}
.badge[data-tone="mid"] {
  border-color: hsl(var(--tone-mid));
}
.badge[data-tone="bot"] {
  border-color: hsl(var(--tone-bot));
}
.badge[data-tone="support"] {
  border-color: hsl(var(--tone-sup));
}

/* ===== Lavender-Glitch FX ===== */
.glitch-rail {
  background: linear-gradient(
    180deg,
    hsl(var(--primary) / 0.85) 0%,
    hsl(var(--accent) / 0.65) 45%,
    hsl(var(--ring) / 0.85) 100%
  );
  background-size: 100% 200%;
  animation: lg-railShift 5.5s ease-in-out infinite;
  box-shadow:
    0 0 calc(var(--space-3) + var(--space-0-5))
      hsl(var(--primary) / 0.35),
    0 0 calc(var(--space-5) + var(--space-1))
      hsl(var(--accent) / 0.25);
}
.glitch-card {
  position: relative;
  border-radius: var(--radius-xl);
  border: 1px solid hsl(var(--card-hairline));
  background: hsl(var(--card) / 0.7);
  box-shadow:
    inset 0 var(--space-0-25) 0 hsl(var(--foreground) / 0.05),
    0 calc(var(--space-3) - var(--space-0-5)) var(--space-5)
      hsl(var(--shadow-color) / 0.35);
  transition:
    transform 0.12s ease,
    box-shadow 0.2s ease,
    background 0.2s ease;
}
.glitch-card:hover {
  box-shadow: 0 calc(var(--space-3) + var(--space-0-5))
    calc(var(--space-6) - var(--space-0-5)) hsl(var(--shadow-color) / 0.42);
}
.glitch-card::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  padding: var(--space-0-25);
  background: linear-gradient(
    90deg,
    hsl(var(--primary) / 0.55),
    hsl(var(--accent) / 0.45),
    hsl(var(--ring) / 0.55),
    hsl(var(--accent) / 0.45),
    hsl(var(--primary) / 0.55)
  );
  background-size: 300% 100%;
  -webkit-mask:
    linear-gradient(hsl(var(--foreground)) 0 0) content-box,
    linear-gradient(hsl(var(--foreground)) 0 0);
  mask:
    linear-gradient(hsl(var(--foreground)) 0 0) content-box,
    linear-gradient(hsl(var(--foreground)) 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.28;
}
.glitch-card::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  background: repeating-linear-gradient(
    to bottom,
    hsl(var(--foreground) / 0.035) 0 var(--space-0-25),
    transparent var(--space-0-25)
      calc(var(--space-0-5) + var(--space-0-25))
  );
  mix-blend-mode: overlay;
  opacity: 0.2;
}
.glitch-title {
  position: relative;
  text-shadow:
    0 0 calc(var(--space-2) - var(--space-0-5))
      hsl(var(--primary) / 0.45),
    0 0 calc(var(--space-4) + var(--space-0-5))
      hsl(var(--accent) / 0.35);
  transition:
    text-shadow 0.18s ease,
    transform 0.12s ease;
}

@media (prefers-reduced-motion: no-preference) {
  .glitch-card::after {
    animation: lg-holo 12s linear infinite;
  }
  .glitch-card::before {
    animation: lg-scan 11s linear infinite;
  }
  .glitch-title:hover,
  .glitch-title:focus-visible {
    text-shadow:
      var(--space-0-25) 0 hsl(var(--accent) / 0.9),
      calc(var(--space-0-25) * -1) 0 hsl(var(--primary) / 0.9),
      0 0 var(--space-3) hsl(var(--ring) / 0.6),
      0 0 calc(var(--space-5) + var(--space-0-5)) hsl(var(--accent) / 0.35);
  }
}
.badge[data-glitch="true"] {
  background: linear-gradient(
    120deg,
    color-mix(in oklab, hsl(var(--muted)) 22%, transparent) 0%,
    color-mix(in oklab, hsl(var(--muted)) 34%, transparent) 100%
  );
  box-shadow:
    0 0 0 var(--space-0-25) hsl(var(--card-hairline)) inset,
    0 0 var(--space-4) hsl(var(--accent) / 0.25);
}
.badge[data-glitch="true"]:hover {
  box-shadow:
    0 0 0 var(--space-0-25) hsl(var(--ring)) inset,
    0 0 calc(var(--space-4) + var(--space-1)) hsl(var(--accent) / 0.35);
}

@keyframes lg-railShift {
  0%,
  100% {
    background-position: 50% 0%;
  }
  50% {
    background-position: 50% 100%;
  }
}
@keyframes lg-holo {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 300% 50%;
  }
}
@keyframes lg-scan {
  0% {
    background-position-y: 0;
  }
  100% {
    background-position-y: 100%;
  }
}
@media (prefers-reduced-motion: reduce) {
  .glitch-rail,
  .glitch-card::after,
  .glitch-card::before {
    animation: none !important;
  }
}

/* ===== Design Tokens ===== */
:root {
  /* Glow tokens */
  --glow-strong: var(--ring) / 0.55;
  --glow-soft: var(--accent) / 0.25;

  /* Radius tokens */
  --radius-md: theme("borderRadius.md");
  --radius-lg: theme("borderRadius.lg");
  --radius-xl: theme("borderRadius.xl");
  --radius-2xl: theme("borderRadius.2xl");
  --radius-full: theme("borderRadius.full");
}

@layer components {
  .type-eyebrow {
    @apply text-label font-medium tracking-[0.02em] uppercase;
  }
  .type-title {
    @apply text-title-lg font-semibold tracking-[-0.01em];
  }
  .type-subtitle {
    @apply text-title font-semibold tracking-[-0.01em];
  }
  .type-body {
    @apply text-body;
  }
  .type-caption {
    @apply text-label font-medium tracking-[0.02em] text-muted-foreground;
  }
  .title-ghost {
    @apply text-title-lg font-semibold opacity-60;
    filter: blur(1px);
  }
  .title-glow {
    @apply text-2xl font-semibold;
    text-shadow: 0 0 calc(var(--space-4) + var(--space-1))
      hsl(var(--glow-strong));
  }
}
.ds-grid-gap {
  @apply gap-4;
}
@media (min-width: 640px) {
  .ds-grid-gap {
    @apply gap-6;
  }
}
.ds-card-gap {
  @apply space-y-4;
}
@media (min-width: 640px) {
  .ds-card-gap {
    @apply space-y-6;
  }
}

.ds-toolbar {
  display: grid;
  align-items: center;
  grid-template-columns: 1fr;
  @apply gap-3;
}
@media (min-width: 1024px) {
  .ds-toolbar {
    grid-template-columns: 1fr auto;
    @apply gap-4;
  }
}
.ds-toolbar-controls {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  @apply gap-2;
}
@media (min-width: 640px) {
  .ds-toolbar-controls {
    @apply gap-3;
  }
}
.ds-card-pad {
  @apply p-4;
}
@media (min-width: 640px) {
  .ds-card-pad {
    @apply p-5;
  }
}
.ds-list {
  @apply list-none pl-5 space-y-2 text-foreground;
}

.ds-list li {
  @apply relative pl-4;
}

.ds-list li::before {
  content: "";
  @apply absolute left-0 top-2 h-2 w-2 rounded-full bg-current;
}

/* === Champ badges ===================================== */
.champ-badges {
  display: flex;
  flex-wrap: wrap;
  @apply gap-2;
}
.champ-badge {
  display: inline-flex;
  align-items: center;
  height: 1.75rem;
  padding: 0 0.6rem;
  border-radius: var(--radius-full);
  border: 1px solid hsl(var(--card-hairline));
  background: hsl(var(--card));
  color: hsl(var(--foreground));
  @apply text-label font-medium tracking-[0.02em];
  line-height: 1;
  white-space: nowrap;
  transition:
    background 0.15s var(--ease-out),
    border-color 0.15s var(--ease-out),
    color 0.15s var(--ease-out);
}
.champ-badge:hover {
  background: hsl(var(--primary-soft));
  border-color: hsl(var(--ring));
}
.champ-badge--dense {
  height: 1.5rem;
  padding: 0 0.5rem;
}

/* === Text Glitch (RGB split + jitter) =================== */
.glitch-anim {
  --glitch-x: 1.5px;
  --glitch-y: 1.2px;
  --glitch-speed: 2.1s;
  --glitch-flicker: 4s;
  position: relative;
  display: inline-block;
  text-shadow:
    0 0 0.35rem hsl(var(--ring) / 0.45),
    0 0 0.08rem hsl(var(--accent) / 0.3);
  animation: glitch-flicker var(--glitch-flicker) infinite steps(1, end);
}
.glitch-anim::before,
.glitch-anim::after {
  content: attr(data-text);
  position: absolute;
  inset: 0;
  pointer-events: none;
  mix-blend-mode: screen;
}
.glitch-anim::before {
  color: hsl(var(--accent));
  clip-path: polygon(0 0, 100% 0, 100% 52%, 0 52%);
  animation:
    glitch-shift var(--glitch-speed) infinite linear alternate-reverse,
    glitch-clip-1 calc(var(--glitch-speed) * 0.9) infinite steps(1, end);
}
.glitch-anim::after {
  color: hsl(var(--primary));
  clip-path: polygon(0 48%, 100% 48%, 100% 100%, 0 100%);
  animation:
    glitch-shift calc(var(--glitch-speed) * 0.95) infinite linear,
    glitch-clip-2 calc(var(--glitch-speed) * 0.85) infinite steps(1, end);
}
.glitch-scan {
  background-image: repeating-linear-gradient(
    to bottom,
    transparent 0 2px,
    hsl(var(--foreground) / 0.06) 2px 3px
  );
  background-clip: text;
  -webkit-background-clip: text;
  color: currentColor;
  filter: contrast(1.02) saturate(1.02);
}
.glitch-heading {
  --glitch-x: 1.8px;
  --glitch-y: 1.6px;
  --glitch-speed: 2s;
}
.glitch-label {
  --glitch-x: 0.6px;
  --glitch-y: 0.6px;
  --glitch-speed: 2.6s;
}
@keyframes glitch-shift {
  0% {
    transform: translate(0, 0);
  }
  8% {
    transform: translate(var(--glitch-x), calc(var(--glitch-y) * -1));
  }
  16% {
    transform: translate(calc(var(--glitch-x) * -1), var(--glitch-y));
  }
  24% {
    transform: translate(var(--glitch-x), 0);
  }
  32% {
    transform: translate(calc(var(--glitch-x) * -1), 0);
  }
  40% {
    transform: translate(var(--glitch-x), var(--glitch-y));
  }
  48% {
    transform: translate(
      calc(var(--glitch-x) * -1),
      calc(var(--glitch-y) * -1)
    );
  }
  56% {
    transform: translate(0, var(--glitch-y));
  }
  64% {
    transform: translate(0, calc(var(--glitch-y) * -1));
  }
  100% {
    transform: translate(0, 0);
  }
}
@keyframes glitch-clip-1 {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 36%, 0 36%);
  }
  20% {
    clip-path: polygon(0 0, 100% 0, 100% 48%, 0 48%);
  }
  40% {
    clip-path: polygon(0 0, 100% 0, 100% 42%, 0 42%);
  }
  60% {
    clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
  }
  80% {
    clip-path: polygon(0 0, 100% 0, 100% 38%, 0 38%);
  }
  100% {
    clip-path: polygon(0 0, 100% 0, 100% 52%, 0 52%);
  }
}
@keyframes glitch-clip-2 {
  0% {
    clip-path: polygon(0 60%, 100% 60%, 100% 100%, 0 100%);
  }
  20% {
    clip-path: polygon(0 54%, 100% 54%, 100% 100%, 0 100%);
  }
  40% {
    clip-path: polygon(0 62%, 100% 62%, 100% 100%, 0 100%);
  }
  60% {
    clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
  }
  80% {
    clip-path: polygon(0 58%, 100% 58%, 100% 100%, 0 100%);
  }
  100% {
    clip-path: polygon(0 48%, 100% 48%, 100% 100%, 0 100%);
  }
}
@keyframes glitch-flicker {
  0%,
  2%,
  35%,
  37%,
  100% {
    opacity: 1;
    filter: none;
  }
  1% {
    opacity: 0.86;
    filter: blur(0.2px);
  }
  36% {
    opacity: 0.92;
    filter: blur(0.1px);
  }
  60% {
    opacity: 0.88;
    filter: blur(0.22px);
  }
  61% {
    opacity: 1;
    filter: none;
  }
}
@media (prefers-reduced-motion: reduce) {
  .glitch-anim,
  .glitch-anim::before,
  .glitch-anim::after {
    animation: none !important;
  }
}

/* ===== Lavender-Glitch: toggle button (flash edition) ===== */
.glitch-toggle {
  --gt-radius: 9999px;
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: var(--space-0-5);
  padding: var(--space-0-5);
  border: 1px solid hsl(var(--card-hairline));
  border-radius: var(--gt-radius);
  background: linear-gradient(90deg, hsl(var(--card)), hsl(var(--card)));
  box-shadow:
    0 0 0 var(--space-0-25)
      color-mix(in oklab, hsl(var(--shadow-color)) 30%, transparent),
    0 calc(var(--space-3) - var(--space-0-5))
      calc(var(--space-6) - var(--space-0-5))
      calc(var(--space-3) * -1)
      color-mix(in oklab, hsl(var(--shadow-color)) 55%, transparent);
  isolation: isolate;
  cursor: pointer;
}
.glitch-toggle::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: var(--gt-radius);
  padding: var(--space-0-25);
  background: linear-gradient(
    90deg,
    hsl(var(--accent)) 0%,
    transparent 35%,
    hsl(var(--primary)) 65%,
    transparent 100%
  );
  mask:
    linear-gradient(hsl(var(--foreground)) 0 0) content-box,
    linear-gradient(hsl(var(--foreground)) 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.85;
  animation: glitch-border 2.2s linear infinite;
  pointer-events: none;
}
.glitch-toggle::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: var(--gt-radius);
  pointer-events: none;
  background: repeating-linear-gradient(
    180deg,
    hsl(var(--foreground) / 0.06) 0 var(--space-0-25),
    transparent var(--space-0-25)
      calc(var(--space-0-5) + var(--space-0-25))
  );
  mix-blend-mode: overlay;
  opacity: 0.35;
}
.glitch-toggle--flash::before {
  animation:
    glitch-border 2.2s linear infinite,
    gtFlash 1.6s steps(8, end) infinite;
}
.glitch-toggle--flash .glitch-toggle__indicator {
  animation: gtPulse 2.4s ease-in-out infinite;
}

.glitch-toggle__seg {
  position: relative;
  z-index: 1;
  padding: calc(var(--space-1) + var(--space-0-5)) var(--space-3);
  @apply text-label font-medium tracking-[0.02em];
  color: hsl(var(--muted-foreground));
  border-radius: var(--radius-full);
  transition:
    color 0.18s ease,
    text-shadow 0.18s ease,
    transform 0.18s ease;
  user-select: none;
}
.glitch-toggle__seg.is-active {
  color: hsl(var(--primary-foreground));
  text-shadow:
    0 0 calc(var(--space-3) - var(--space-0-5))
      color-mix(in oklab, hsl(var(--primary)) 70%, transparent),
    0 0 calc(var(--space-4) + var(--space-0-5))
      color-mix(in oklab, hsl(var(--accent)) 40%, transparent);
  transform: translateZ(0);
}

.glitch-toggle__indicator {
  content: "";
  position: absolute;
  inset: var(--space-0-5);
  width: calc(50% - var(--space-0-5));
  border-radius: var(--radius-full);
  background:
    radial-gradient(
      120% 100% at 50% 0%,
      color-mix(in oklab, hsl(var(--primary-soft)) 80%, transparent),
      transparent 60%
    ),
    linear-gradient(
      90deg,
      color-mix(in oklab, hsl(var(--primary)) 55%, transparent),
      color-mix(in oklab, hsl(var(--accent)) 55%, transparent)
    );
  box-shadow:
    0 0 calc(var(--space-4) + var(--space-0-5))
      color-mix(in oklab, hsl(var(--primary)) 50%, transparent),
    inset 0 0 calc(var(--space-3) + var(--space-0-5))
      color-mix(in oklab, hsl(var(--primary)) 40%, transparent);
  transform: translateX(0%);
  transition: transform 0.2s cubic-bezier(0.2, 0.7, 0.2, 1);
  mix-blend-mode: screen;
  pointer-events: none;
}
.glitch-toggle.is-project .glitch-toggle__indicator {
  transform: translateX(100%);
}

@keyframes glitch-border {
  0% {
    filter: hue-rotate(0deg) saturate(1);
  }
  50% {
    filter: hue-rotate(6deg) saturate(1.15);
  }
  100% {
    filter: hue-rotate(0deg) saturate(1);
  }
}
@keyframes gtFlash {
  0%,
  70%,
  100% {
    opacity: 0.85;
  }
  71% {
    opacity: 0.2;
  }
  72% {
    opacity: 0.95;
  }
  74% {
    opacity: 0.4;
  }
  75% {
    opacity: 0.9;
  }
}
@keyframes gtPulse {
  0%,
  100% {
    box-shadow:
      0 0 calc(var(--space-4) + var(--space-0-5))
        hsl(var(--foreground) / 0.18),
      inset 0 0 calc(var(--space-3) + var(--space-0-5))
        hsl(var(--foreground) / 0.15);
  }
  50% {
    box-shadow:
      0 0 calc(var(--space-5) + var(--space-1))
        hsl(var(--foreground) / 0.28),
      inset 0 0 calc(var(--space-4) + var(--space-0-5))
        hsl(var(--foreground) / 0.22);
  }
}

/* CTA variant */
.btn-cta {
  background: var(--seg-active-grad);
  color: hsl(var(--primary-foreground));
  border-color: color-mix(
    in oklab,
    hsl(var(--ring)) 55%,
    hsl(var(--card-hairline))
  );
  box-shadow:
    0 0 0 var(--space-0-25) hsl(var(--ring) / 0.28),
    0 var(--space-3) calc(var(--space-5) + var(--space-1))
      hsl(var(--shadow-color) / 0.28);
}
.btn-cta.is-active,
.btn-cta[aria-current="page"],
.btn-cta:hover {
  background: var(--seg-active-grad);
  color: hsl(var(--primary-foreground));
  box-shadow:
    0 0 0 var(--space-0-5) hsl(var(--ring) / 0.38),
    0 var(--space-4) calc(var(--space-6) + var(--space-1))
      hsl(var(--shadow-color) / 0.35);
}
/* ---------- Icon styling ---------- */
.lucide {
  color: hsl(var(--muted-foreground));
  transition:
    color var(--dur-quick) var(--ease-out),
    filter var(--dur-quick) var(--ease-out);
}

.lucide:hover,
.lucide:active,
button:hover .lucide,
button:active .lucide,
a:hover .lucide,
a:active .lucide {
  color: hsl(var(--accent));
  filter: drop-shadow(
    0 0 calc(var(--space-2) - var(--space-0-5)) hsl(var(--accent) / 0.8)
  );
}

@layer utilities {
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }

  .bg-seg-active-grad {
    background: var(--seg-active-grad);
  }

  .bg-accent-overlay {
    background-color: var(--accent-overlay);
  }

  .text-neon-soft {
    color: var(--neon-soft);
  }

  .sticky-blur {
    backdrop-filter: saturate(120%) blur(12px);
    background: color-mix(in oklab, hsl(var(--background)) 65%, transparent);
    border-bottom: var(
      --sticky-blur-border,
      1px solid hsl(var(--card-hairline))
    );
  }

  .r-card-sm {
    --radius-card: var(--radius-md);
  }
  .r-card-md {
    --radius-card: var(--radius-xl);
  }
  .r-card-lg {
    --radius-card: var(--radius-2xl);
  }
  .rounded-card {
    border-radius: var(--radius-card) !important;
  }

  .anim-in {
    animation: fadeSlideIn var(--dur-chill) var(--ease-out) both;
  }
  .anim-pop {
    animation: popIn var(--dur-quick) var(--ease-out) both;
  }

  .animate-glx-flicker {
    animation: glx-flicker 6s infinite;
  }
  .animate-glx-pulse {
    animation: glx-pulse 10s ease-in-out infinite;
  }
  .animate-glx-scan {
    animation: scan 2.2s linear infinite;
  }

  .skeleton {
    position: relative;
    overflow: hidden;
    background: hsl(var(--muted) / 0.6);
  }
  .skeleton::after {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      90deg,
      transparent,
      hsl(var(--foreground) / 0.08),
      transparent
    );
    animation: shimmer var(--dur-slow) linear infinite;
  }

  .card-pad {
    padding: 1.5rem;
  }
  .card-pad-lg {
    padding: 1.5rem;
  }
  @media (min-width: 640px) {
    .card-pad {
      padding: 1rem;
    }
    .card-pad-lg {
      padding: 2rem;
    }
  }

  .toolbar {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 0.75rem;
    align-items: center;
  }
  .toolbar-right {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }
  @media (max-width: 640px) {
    .toolbar {
      grid-template-columns: 1fr;
    }
    .toolbar-right {
      justify-content: flex-start;
    }
  }

  .hairline {
    border-top: 1px solid hsl(var(--card-hairline));
  }
}

/* === Goals helpers === */
@layer utilities {
  .scanlines {
    @apply relative;
  }
  .scanlines::before {
    content: "";
    @apply absolute inset-0 pointer-events-none;
    border-radius: inherit;
    background: repeating-linear-gradient(
      to bottom,
      hsl(var(--foreground) / 0.06) 0 var(--space-0-25),
      transparent var(--space-0-25)
        calc(var(--space-0-5) + var(--space-0-25))
    );
    mix-blend-mode: overlay;
  }

  .glitch-text {
    animation: glitch-text 2.8s steps(2, end) infinite;
  }
}

@layer components {
  .goal-card {
    @apply relative overflow-hidden rounded-[var(--radius-2xl)] border border-border;
    background: linear-gradient(
      135deg,
      hsl(var(--surface-2)),
      hsl(var(--surface))
    );
    box-shadow:
      0 0 0 var(--space-0-25) hsl(var(--border)) inset,
      0 0 calc(var(--space-6) - var(--space-0-5)) hsl(var(--accent) / 0.15);
  }
  .goal-card::before {
    content: "";
    @apply absolute inset-0 pointer-events-none;
    border-radius: inherit;
    background: repeating-linear-gradient(
      to bottom,
      hsl(var(--foreground) / 0.06) 0 var(--space-0-25),
      transparent var(--space-0-25)
        calc(var(--space-0-5) + var(--space-0-25))
    );
    mix-blend-mode: overlay;
  }
}
@layer components {
  .nav-hover-sheen {
    background: linear-gradient(
      90deg,
      hsl(var(--primary) / 0.15),
      transparent 40%,
      transparent 60%,
      hsl(var(--accent) / 0.15)
    );
  }

  .nav-scanlines {
    background: repeating-linear-gradient(
      0deg,
      hsl(var(--foreground) / 0.04) 0 var(--space-0-25),
      transparent var(--space-0-25)
        calc(var(--space-0-5) + var(--space-0-25))
    );
  }

  .underline-gradient,
  .nav-underline {
    background: linear-gradient(
      90deg,
      hsl(var(--primary)),
      hsl(var(--accent)),
      hsl(var(--primary))
    );
  }

  .page-tabs-surface {
    @apply border-b border-border bg-background/60;
  }

  @supports (color: color-mix(in oklab, white, black)) {
    .page-tabs-surface {
      background-color: color-mix(
        in oklab,
        hsl(var(--background)) 60%,
        transparent
      );
    }
  }
}
@layer utilities {
  @keyframes glitchSheen {
    0% {
      background-position: 0% 50%;
      filter: saturate(1);
    }
    50% {
      background-position: 100% 50%;
      filter: saturate(1.2);
    }
    100% {
      background-position: 0% 50%;
      filter: saturate(1);
    }
  }

  @keyframes glitchScan {
    0%,
    100% {
      opacity: 0.15;
    }
    50% {
      opacity: 0.4;
    }
  }

  @keyframes glitchJitter {
    0% {
      transform: translateY(0);
    }
    25% {
      transform: translateY(-0.5px);
    }
    50% {
      transform: translateY(0.5px);
    }
    75% {
      transform: translateY(-0.25px);
    }
    100% {
      transform: translateY(0);
    }
  }

  @keyframes pill-pulse {
    0% {
      opacity: 0.7;
      transform: scale(0.98);
    }
    100% {
      opacity: 0;
      transform: scale(1.15);
    }
  }

  @keyframes sheen-rotate {
    to {
      --a: 1turn;
    }
  }

  @keyframes sheenSweep {
    from {
      transform: translateX(-40%) skewX(-20deg);
    }
    to {
      transform: translateX(140%) skewX(-20deg);
    }
  }

  @keyframes edgePulse {
    0%,
    100% {
      opacity: 0.45;
    }
    50% {
      opacity: 0.7;
    }
  }

  @keyframes chromaJitter {
    0%,
    100% {
      transform: translateZ(0);
    }
    25% {
      transform: translateX(-0.25px);
    }
    50% {
      transform: translateX(0.25px);
    }
    75% {
      transform: translateX(-0.15px);
    }
  }

  @keyframes fadeSlideIn {
    from {
      opacity: 0;
      transform: translateY(8px) scale(0.995);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes popIn {
    from {
      opacity: 0;
      transform: scale(0.985);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes shimmer {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes ghost {
    0% {
      transform: translate(0, 0);
    }
    20% {
      transform: translate(0.4px, -0.2px);
    }
    40% {
      transform: translate(-0.3px, 0.2px);
    }
    60% {
      transform: translate(0.2px, 0.3px);
    }
    80% {
      transform: translate(-0.2px, -0.1px);
    }
    100% {
      transform: translate(0, 0);
    }
  }

  @keyframes glx-flicker {
    0%,
    19%,
    21%,
    23%,
    25%,
    54%,
    56%,
    100% {
      opacity: 1;
    }
    20%,
    24%,
    55% {
      opacity: 0.4;
    }
  }

  @keyframes glx-pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.6;
    }
  }

  @keyframes scan {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes lg-grid-drift {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(26px, 26px, 0);
    }
  }

  @keyframes lg-aurora-pan {
    0% {
      transform: translate3d(-2%, -1%, 0) scale(1.02);
      opacity: 0.95;
    }
    50% {
      transform: translate3d(1%, 0.5%, 0) scale(1.01);
      opacity: 1;
    }
    100% {
      transform: translate3d(2%, 1%, 0) scale(1.02);
      opacity: 0.95;
    }
  }

  @keyframes glitch-text {
    0%,
    100% {
      text-shadow:
        0.5px 0 hsl(var(--accent)),
        -0.5px 0 hsl(var(--accent-2));
    }
    50% {
      text-shadow:
        -0.5px 0 hsl(var(--accent)),
        0.5px 0 hsl(var(--accent-2));
    }
  }

  @keyframes cat-float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-4px);
    }
  }

  @keyframes room-glitch {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: -200% 0;
    }
  }
}
