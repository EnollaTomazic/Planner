{"version":3,"file":"static/chunks/444.176ba17d8f723688.js","mappings":"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","sources":["webpack://_N_E/./src/components/prompts/PromptList.tsx","webpack://_N_E/./src/components/prompts/CodexPromptsTab.tsx","webpack://_N_E/./src/components/prompts/PromptsComposePanel.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Card } from \"@/components/ui\";\nimport { Badge } from \"@/components/ui/primitives/Badge\";\nimport { LOCALE } from \"@/lib/utils\";\nimport type { PromptWithTitle } from \"./types\";\n\nexport type PromptListProps = {\n  prompts: PromptWithTitle[];\n  query: string;\n};\n\nexport function PromptList({ prompts, query }: PromptListProps) {\n  const q = query.trim();\n  const formattedPrompts = React.useMemo(\n    () =>\n      prompts.map((p) => {\n        const createdAt = new Date(p.createdAt);\n        return {\n          ...p,\n          createdAtDateTime: createdAt.toISOString(),\n          createdAtLabel: createdAt.toLocaleString(LOCALE),\n        };\n      }),\n    [prompts],\n  );\n  return (\n    <ul className=\"mt-[var(--space-4)] space-y-[var(--space-3)]\">\n      {formattedPrompts.map((p) => (\n        <li key={p.id}>\n          <Card className=\"p-[var(--space-3)]\">\n            <header className=\"flex items-center justify-between\">\n              <h3 className=\"font-semibold\">{p.title}</h3>\n              <time\n                dateTime={p.createdAtDateTime}\n                className=\"text-label text-muted-foreground\"\n              >\n                {p.createdAtLabel}\n              </time>\n            </header>\n            {p.text ? (\n              <p className=\"mt-[var(--space-1)] whitespace-pre-wrap text-ui\">{p.text}</p>\n            ) : null}\n          </Card>\n        </li>\n      ))}\n      {prompts.length === 0 ? (\n        <li className=\"text-muted-foreground flex items-center gap-[var(--space-1)]\">\n          {q ? (\n            <>\n              No prompts match\n              <Badge size=\"sm\" tone=\"neutral\">{q}</Badge>\n            </>\n          ) : (\n            \"No prompts saved yet\"\n          )}\n        </li>\n      ) : null}\n    </ul>\n  );\n}\n\n","\"use client\";\n\nimport * as React from \"react\";\n\nimport { PromptsComposePanel } from \"./PromptsComposePanel\";\nimport { PromptList } from \"./PromptList\";\nimport type { PromptWithTitle } from \"./types\";\n\ninterface CodexPromptsTabProps {\n  title: string;\n  text: string;\n  onTitleChange: (value: string) => void;\n  onTextChange: (value: string) => void;\n  prompts: PromptWithTitle[];\n  query: string;\n}\n\nexport function CodexPromptsTab({\n  title,\n  text,\n  onTitleChange,\n  onTextChange,\n  prompts,\n  query,\n}: CodexPromptsTabProps) {\n  const composeHeadingId = React.useId();\n  const libraryHeadingId = React.useId();\n\n  return (\n    <div className=\"flex flex-col gap-[var(--space-6)]\">\n      <section\n        aria-labelledby={composeHeadingId}\n        className=\"flex flex-col gap-[var(--space-3)]\"\n      >\n        <div className=\"space-y-[var(--space-1)]\">\n          <h3 id={composeHeadingId} className=\"type-title\">\n            Review checklist\n          </h3>\n          <p className=\"text-ui text-muted-foreground\">\n            Capture Codex review prompts that help validate architecture,\n            testing, and release notes.\n          </p>\n        </div>\n        <PromptsComposePanel\n          title={title}\n          onTitleChange={onTitleChange}\n          text={text}\n          onTextChange={onTextChange}\n        />\n      </section>\n\n      <section\n        aria-labelledby={libraryHeadingId}\n        className=\"flex flex-col gap-[var(--space-3)]\"\n      >\n        <div className=\"space-y-[var(--space-1)]\">\n          <h3 id={libraryHeadingId} className=\"type-title\">\n            Codex prompts\n          </h3>\n          <p className=\"text-ui text-muted-foreground\">\n            Saved checklists appear here for quick reuse during reviews.\n          </p>\n        </div>\n        <PromptList prompts={prompts} query={query} />\n      </section>\n    </div>\n  );\n}\n","\"use client\";\n\nimport * as React from \"react\";\nimport { Input, Textarea, Label } from \"@/components/ui\";\nimport { Check as CheckIcon } from \"lucide-react\";\n\ninterface PromptsComposePanelProps {\n  title: string;\n  onTitleChange: (value: string) => void;\n  text: string;\n  onTextChange: (value: string) => void;\n}\n\nexport function PromptsComposePanel({\n  title,\n  onTitleChange,\n  text,\n  onTextChange,\n}: PromptsComposePanelProps) {\n  const titleId = React.useId();\n  const textId = React.useId();\n  return (\n    <div className=\"space-y-[var(--space-3)]\">\n      <div>\n        <Label htmlFor={titleId}>Title</Label>\n        <Input\n          id={titleId}\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => onTitleChange(e.target.value)}\n          aria-describedby={`${titleId}-help`}\n        >\n          <CheckIcon\n            aria-hidden=\"true\"\n            className=\"absolute right-[var(--space-2)] top-1/2 -translate-y-1/2\"\n          />\n        </Input>\n        <p\n          id={`${titleId}-help`}\n          className=\"mt-[var(--space-1)] text-label text-muted-foreground\"\n        >\n          Add a short title\n        </p>\n      </div>\n      <div>\n        <Label htmlFor={textId}>Prompt</Label>\n        <Textarea\n          id={textId}\n          placeholder=\"Write your prompt or snippetâ€¦\"\n          value={text}\n          onChange={(e) => onTextChange(e.target.value)}\n          resize=\"resize-y\"\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["PromptList","prompts","query","q","trim","formattedPrompts","React","map","createdAt","Date","p","createdAtDateTime","toISOString","createdAtLabel","toLocaleString","LOCALE","ul","className","li","Card","header","h3","title","time","dateTime","text","id","length","Badge","size","tone","CodexPromptsTab","onTitleChange","onTextChange","composeHeadingId","libraryHeadingId","div","section","aria-labelledby","PromptsComposePanel","titleId","textId","Label","htmlFor","Input","placeholder","value","onChange","e","target","aria-describedby","CheckIcon","aria-hidden","Textarea","resize"],"sourceRoot":"","ignoreList":[]}