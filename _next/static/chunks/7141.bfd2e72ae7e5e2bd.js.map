{"version":3,"file":"static/chunks/7141.bfd2e72ae7e5e2bd.js","mappings":"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BACA,QACA,CAAK,CACL,sCACA,QACA,CAAK,CACL,8CACA,QACA,CAAK,CACL,kDACA,QACA,CAAK,CACL,0CACA,QACA,CAAK,CACL,kCACA,QACA,CAAK,CACL,oCACA,QACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,4BACA,QACA,CAAK,CACL,2CACA,QACA,CAAK,CACL,4BACA,QACA,CAAK,CACL,mCACA,QACA,CAAK,CACL,8BACA,QACA,CAAK,CACL,iCACA,QACA,CAAK,CACL,2BACA,QACA,CAAK,CACL,uCACA,QACA,CAAK,CACL,sDACA,QACA,CAAK,CACL,0CACA,QACA,CAAK,CACL,0BACA,QACA,CAAK,CACL,2CACA,QACA,CAAK,CACL,uCACA,QACA,CAAK,CACL,kCACA,QACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,mCACA,QACA,CAAK,CACL,4CACA,QACA,CAAK,CACL,mCACA,QACA,CAAK,CACL,+BACA,QACA,CAAK,CACL,mCACA,QACA,CAAK,CACL,8BACA,QACA,CAAK,CACL,sBACA,QACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,gDACA,QACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,0BACA,SACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,0CACA,QACA,CAAK,CACL,sDACA,QACA,CAAK,CACL,0CACA,QACA,CAAK,CACL,4CACA,QACA,CAAK,CACL,0BACA,SACA,CAAK,CACL,oCACA,SACA,CACA,CAAC,EACD,mBACA,cAA6C,eAC7C,qBAAoD,eACpD,SACA,SACA,mBACA,2BACA,wCACA,kBACA,cACA,iBACA,SACA,YACA,UACA,UACA,UACA,sBACA,4BACA,gCACA,gBACA,MACA,MACA,OACA,UACA,UACA,aACA,eACA,cAA+C,EAAoB,EACnE,oBACA,uBACA,qBACA,0BACA,yBACA,mCACA,qCACA,sCACA,mCACA,0CACA,uCACA,2CACA,kLACA,wGACA,4FACA,2HACA,4GACA,0HACA,+FACA,mGACA,uGACA,6JACA,sNACA,yJACA,IACA,MACA,QAC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B,QAAa,IACjB,cACA,YACA,gBACK,CACL,IArGA,OACQ,SAA4B,EA8IpC,EA9IoC,EA+IpC,YACA,GAAQ,QAAS,OACjB,OAGA,mBAAY,kBAA+B,EAE3C,QAA0C,KAAmB,EAG7D,cACA,OAGA,WAAY,8BAAiC,EAQ7C,GACA,UACA,QACA,iBACA,cACA,EAEA,EAAkB,GAAuC,GAErD,QAAa,CACjB,CACA,eACA,KAlBA,CACA,EAYyD,KAZzD,EACA,MACA,aACA,EAeA,YACA,OACA,CAAO,CACP,EAEA,IArLA,SACQ,IA0LR,EA1LsC,EA2LtC,YACA,GAAQ,OA5L8B,CA4LrB,OACjB,OAGA,mBAAY,kBAA+B,EAG3C,MAIA,oEAKA,YACA,kBACA,GACA,aACA,aACA,iBACA,cACA,EAEM,QAAa,CACnB,CACA,iBACA,OACA,cACA,WACA,CAAS,CACT,EAEA,EAAM,IACN,iBACA,GACA,eACA,yBAEA,GACA,aACA,WACA,iBACA,cACA,EACA,EAAoB,GAAuC,eAErD,QAAa,CACnB,CACA,WAJ2D,MAK3D,OACA,YACA,OACA,CAAS,CACT,EAEA,CACA,IApPA,WACQ,QAAgC,EAyPxC,EAzPwC,EA0PxC,YACA,GAAQ,QAAS,OACjB,OAGA,aACA,OACA,EAAsB,GAAS,GAAM,EAAP,CAAO,YACrC,IAA4B,GAAQ,UACpC,EAAqB,GAAQ,EAG7B,GAH6B,CAG7B,QACA,MAKA,0CACA,eAEA,0CACA,eAGI,QAAa,EACjB,sBACA,MACA,OACA,IACA,CAAO,CACF,CACL,IAxRA,UACA,wBAWA,EAXA,EAYA,YACQ,QAAS,QAIb,QAAa,CACjB,CACA,mBAA4B,6CAAuD,EACnF,oBACA,cACA,QAAiB,QAAmB,GACpC,CAAO,CACP,CACA,OACA,CAAO,CAEP,GA1BA,CACA,CACA,CAAC,CC5CD,IACA,cACA,SACA,OACA,mBACA,iBACA,mBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,eACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,uB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eAGA,MAAiB,QAAS,GAC1B,4DAEA,gDACA,yCAAyD,SAAY,EAErE,GACA,UACA,WACA,QACA,CACA,aACA,QACA,cAAgC,UAAgB,MAChD,CAAS,CACT,CACK,CACL,SACA,UACA,gBACA,yBACA,yBACK,CACL,UACA,UACA,qBACA,0BACA,0BACA,mBApNA,GACA,MACA,+CAEA,KACA,qBAEA,CAGA,EA0MA,kBACA,CAAO,CACF,EAQL,MALE,QAAqB,IACvB,mBACA,UACA,CAAG,EAEH,CACA,CAiBA,cACA,MAAiB,QAAS,GAC1B,2CChYA,IAAM,GAAS,GAAU,CA4BzB,GAtBA,KAA+C,IANnC,IAOZ,UAqBgC,iBAAiB,CArBjD,oBALA,EAOA,OACA,KANsB,CAMZ,cACV,eAD0B,CAE1B,CAqBA,cACA,MAAc,GAAM,SACpB,EAAuB,GAAM,EADT,MACS,EAAa,GAAyB,GAAtC,QAA4C,OACzE,CADyE,EACzE,OACA,SAGA,sCACA,iBACA,SAGA,kCACA,MACA,SAGA,8DAWA,OATA,cACA,mBACA,aACA,+BAaA,EACA,EACA,EACA,SAHA,EAZA,EAaA,EAbA,EAcA,EAdA,EAeA,EAfA,EAiBA,oCAIE,QAAiB,QAHnB,GAjBA,CAEA,CAAG,EAEH,EACA,EAlDA,IAEA,CACA,CAAC,iBCID,iCACA,IAEA,6BAEA,IAHA,GAKA,KACA,EACA,wBACA,CACA,iBACA,WAEA,UADA,EAEA,SACA,IACA,KACA,uBACA,IANA,EAMA,YAAuC,EAAU,GACjD,cAEA,GA/BA,cACA,6BAA2C,KAAS,CACpD,GADoD,CACpD,iBACA,aACA,QAEA,CACA,QACA,EAcA,EASA,GACA,QACA,CAEA,mBACA,SACA,QACA,CACA,SACA,QACA,CACA,CACA,EAnDA,YACA,2BACA,mCACA,yBACA,mBACA,qBACA,wBACA,CAAC,YAA4B,EA8C7B,mOAKA,IACA,MAAW,CACX,WACA,kBACA,IAEA,aACA,kBACA,MAEA,oBACA,iBACA,CAAK,CACL,SACA,kBACA,IAEA,QACA,iBACA,CAAK,EAYL,8BACA,6CAaA,OAZA,8BACA,EACA,CACA,OACgB,GAAU,KAC1B,MAD0B,IAC1B,QACA,CAAiB,IACjB,UACA,kBAEA,CAAa,CACJ,EACT,gBAAuD,IACvD,CACA,mBACA,IACA,aACA,WACA,EAEA,WACA,OAWA,MAVA,uBACA,4BACA,2BACA,oBACA,cACA,OACA,CAAiB,CACJ,GAEb,OACA,KACA,MACA,CACA,CACA,SACA,WACA,CACA,CACA,CAWA,uBACA,MACA,SAEA,MAZA,EAGA,4BASA,EAPA,gBAJA,KAYA,MACA,SAGA,WADA,SAEA,WACA,SAGA,GACA,qBAEA,WAGA,IACA,CApFA,0DACA,kBACA,cACA,WACA,kBAEA,mBAEA,EAAK,EA6CL,YAAkB,GAAG,8BAgCrB,UACA,eACA,YACA,KACA,SAEA,sBACA,YACA,yCACA,IACA,+BACA,aACA,sBACA,sBACA,SACA,GACA,MAEA,qBACA,CACA,SACA,CAEA,2BACA,CACA,kBACA,wCACA,CACA,SAAS,GAAU,MACnB,KADmB,EACnB,sBACA,CAEA,YACA,kBACA,qBACA,uBACA,EACA,CAAC,OAAqB,EAMtB,UACA,EAGA,SACA,IACA,cACA,CACA,SACA,gBACA,WACA,CAEA,QACA,CACA,CAAK,CAbL,EAyBA,QAHA,sEAEA,yDACA,KAAgB,aAAkB,KAClC,yBAJA,IAMA,eACA,0CACA,QAAgB,IAAS,KACzB,eACA,6BACA,gCACA,iBAQA,OANA,OACA,gCAEA,QACA,mCAEA,CACA,EAEA,eAYA,aACA,OACA,+BACA,OAEA,eAhBA,KACA,gBAQA,OAPA,IACA,UACA,aAEA,UACA,YAEA,QACA,EAMA,EADA,oBAEA,eAKA,OAJA,SACA,WACA,WAEA,CACA,EA2EA,YACA,UA3EA,kBACA,sBACA,0BAEA,kBAGA,8BACA,2BACA,yBACA,0BACA,yBACA,0BACA,yBACA,wBACA,+BAEA,OACA,QAFA,mBAGA,uBACA,OAEA,4BAGA,OACA,QAHA,mBAIA,OAHA,KAIA,OAEA,yBAEA,OACA,QAFA,mBAGA,MACA,gBACA,aACA,aACA,OAGA,kCACA,yBACA,KAAgB,GAAM,EACtB,OACA,UACA,KACA,CACA,MACA,kCAGA,OACA,QAHA,mBAIA,IAHA,aAIA,OAEA,0BAEA,OACA,QAFA,mBAGA,qCACA,OAEA,+BAGA,OACA,QAHA,mBAIA,MAHA,SAIA,EAEA,SACA,EAEA,QAEA,UAeA,GAbA,kBACA,cACA,mBACA,eACA,oBACA,cACA,6BACA,eACA,uBACA,yBACA,4BACA,CACA,mCACA,2BAkDA,uBACA,SACA,IACA,gEACA,wBACA,uBACA,MARA,uBAQA,EARA,QAQA,EAGA,GAFA,oBACA,mBACA,GACA,+BACA,gCACA,WACA,yBACA,4BAEA,MAEA,cACA,wBACA,CAA6B,CAG7B,CACA,6BACA,CACA,CAAS,EACT,SACA,CACA,SACA,uEACA,CACA,WACA,iBACA,CACA,CAEA,6BACA,SAEA,aADA,8BAEA,KACA,gBACA,SACA,qBACA,sBACA,aAGA,IACA,2BACA,SAEA,yBACA,sBACA,sBAEA,GADA,aACA,yBACA,2BACA,mBACA,GACA,OACA,WACA,MACA,EACA,gBACA,CACA,QACA,CACA,CAAa,EACb,SACA,CACA,SACA,cACA,OACA,eACA,OACA,WACA,SACA,SACA,CAAqB,CACrB,CAAiB,CACJ,EACb,SACA,CAEA,QACA,CAgBA,SACA,QACA,oCACA,iCACA,IACA,GACA,CACA,SACA,CACA,CAAS,EACT,wBACA,4BACA,gBACA,wBACQ,OAAc,4EACtB,iBACA,kCACA,CACA,SACA,cACA,CACA,WACA,cACA,CACA,OACA,cACA,CACA,SACA,cACA,CACA,eACA,oCACA,gBAA2B,0BAC3B,wBACA,4BACA,gBACA,wBACA,eACA,eACA,mCACA,iBACA,6BAGA,CAFA,yBACA,mDACA,2BACA,kDACA,oCACA,sCAEA,0CACA,EACA,aAAgB,6HAAgI,EAYhJ,GAXA,6BACA,qBACA,eACA,GAtXA,GAuXA,CAvXA,EAyXA,wBACA,yBACA,mCAEA,kBACA,uBACA,OAEA,QACA,eACA,4BACA,0CAEA,uBACA,sCACA,gBACA,CAAiB,CAEjB,CAAS,GACT,CACA,aACA,aAAgB,8FAAoG,aACpH,4BAEA,MACA,uBACA,kCACA,MACA,CACA,QAIA,GAHA,cACA,yCAEA,uBACA,qBACA,+BACA,GACA,CAAiB,CACjB,CACA,CAAS,IACT,uBACA,kCACA,CACA,iBACA,mCACA,CACA,mBACA,uBACA,CACA,gBACA,4BA9Ga,gBAFb,0IAAkJ,KAAK,yBAAyB,kBAAkB,0CAA0C,QAAQ,IAAI,8FAA8F,4FAA4F,0BAA0B,aAAa,8BAA8B,2DAA2D,aAAa,GAAG,MAAM,gEAAgE,gCAAgC,gBAAgB,mCAAmC,4BAA4B,iCAAiC,mBAAmB,gEAAgE,oBAAoB,SAAS,8BAA8B,kBAAkB,aAAa,0BAA0B,YAAY,2EAA2E,gHAAgH,iDAAiD,EAAE,uCAAuC,yEAAyE,qEAAqE,KAAK,EAAE,sCAAsC,KAAK,EAAE,eAAe,sCAAsC,eAAe,EAEz/C,EAAsB,kCAoJnC,OArCA,gBACA,aACA,IAAoB,GAAK,EAEzB,GADA,qCACA,gBACA,OACA,WAAoB,2BAA8B,EAClD,iBACA,KACA,cACA,UACA,CACA,qBACA,eACqB,CACrB,CACA,qBACA,MACA,CACA,sBACA,MACA,CACA,eACA,OAAiD,+BAAgC,EACjF,MACA,CAAqC,CACrC,CAC6B,CAC7B,EACA,EACA,EACA,EACA,CACqB,CACrB,CACa,CACb,EACA,CACA,CACA,mCACA,uDACA,+BACA,uBACA,CAAS,CACT,CACA,oCACA,qBACA,WAlTA,WACA,SAEA,aADA,iEAEA,IACA,8DACA,SAEA,4DACA,sBAWA,OAVA,0BACwB,GAAU,KAClC,mBACA,eACA,cACA,WACA,MACA,CAA6B,CAC7B,CAAyB,IAEzB,eACA,CACA,CAAa,EACb,SACA,CACA,SACA,iDACA,OACA,eACA,cACA,WACA,SACA,SACA,CAAqB,CACrB,CAAiB,CACJ,EACb,SACA,CAEA,WACA,iBACA,CACA,EAwQA,yCACA,EA5KA,sBACA,SAKA,OAJA,sEACA,mCACA,wEAEA,KACA,iBACA,CACA,EAmKA,qDACA,+BACA,IACA,IACA,GACA,CAAS,CACT,CACA,YACA,YAAgB,GAAU,KAC1B,6IACA,+BACA,uBACA,CAAS,CACT,CACA,8BACA,YACA,IAEA,MACA,KACA,UAEA,SACA,MACA,yCACA,aACA,SAEA,CAAiB,CACjB,EACA,2BACA,eACA,IACA,aAEA,CACA,8BACA,eACA,IACA,IAEA,CACA,QACA,EACA,MACA,wBAGA,MACA,kBACA,MAGA,IACA,iBACA,2BACA,OAEA,2BACA,uCAEA,mBAGA,GADA,qCACA,IACA,0CACA,+BACsC,MAAd,OAAc,4GACtC,2BAEA,CACA,qBACA,SACoB,OAAc,2EAClC,KACA,SACA,cACA,gBACA,iBACA,eACA,CAAqB,OACrB,CAAiB,EACjB,UACA,QACA,OACA,CAAqB,GACrB,CAAiB,EACjB,CAAa,EACb,GACA,MAEA,EAEA,OADA,KAEA,CACA,oCACA,0CACA,CACA,uBACA,UACA,0BACA,KACA,EACA,KACA,CACA,8BACA,4CACA,2BACA,uCACA,CAAS,EACT,0CACA,CACA,mCACA,4BACA,OAEA,yCACA,cACA,OACA,gBACA,SAAoB,QAAgB,EACpC,QACA,CAAS,EACT,MAAgB,GAAO,KACvB,oBAA0B,oBAA4B,EACtD,qCACA,CACA,CAEA,QACA,KACA,UACA,QACA,CAAK,CACL,gBACA,kBACA,WACA,CAAK,CACF,CACH,QACA,UACA,QACA,CAAK,CACL,gBACA,kBACA,UACA,CAAK,CACF,CACH,MACA,UACA,QACA,CAAK,CACL,gBACA,kBACA,UACA,CAAK,CACF,EA6DH,GAtDA,KAA+C,IAC/C,IAUA,EAVA,QAqDgC,aArDhC,IAqDiD,CApDjD,GACA,4BACA,4CACA,eACA,aATA,WAUA,aAVA,WAWA,EAIA,sBAEA,OACA,KAnBsB,CAmBZ,cACV,MAD0B,OAE1B,YAAc,0CAA+C,EAE7D,OACA,uBACA,gBACA,qBACA,cACA,KACA,uBACA,gBACA,iBACA,IACA,oBACA,gBAEA,CAAgB,SAGhB,CACA,CAAa,CACF,EAEX,OADA,KACA,CACA,CAAS,CACT,8BAEA,CAAK,CACL,kBACA,UACA,WACA,CAAK,CAEL,CAAC,iBC53BD,IAAM,GAAS,GAAU,CACzB,GADY,GACW,SACvB,GAAkB,GAAM,UAExB,kBACA,YACA,qBACA,aACA,kBACA,4BACA,WACA,0CACA,iBACA,eACA,UACA,gCACA,gBACA,sBACA,uBAUA,IACA,EACA,GAAW,iBAAqB,IAEhC,cACA,4DAIA,MAAiB,QAAS,GAE1B,MACA,qDAGA,qCACI,QAAe,mBAEnB,MAAkB,GAClB,CACA,OA3BA,IAyBiC,EAGjC,IAAW,SAAe,GAC1B,KACK,CACL,GAIA,2BAEA,mFAEA,gCACA,wBAQA,CAJA,gBACA,IAIA,GACA,+BACA,mBACA,kBAEA,KAGA,mDACA,EACA,uGAIA,qDACA,EACA,sGAIA,EACA,2GAEA,CAAK,CACL,CAAG,CACH,EAiDM,GAAW,uDAqCjB,YACA,EACA,GAEA,OACA,KACA,KACA,MACA,UACA,UACK,CACL,gBACA,6BACA,4BACA,CAAK,CACL,iBACA,+BACA,8BACA,CAAK,CACL,oBACA,wCACA,uCACA,CAAK,CACL,kBACA,oCACA,mCACA,CAAK,CACL,qBACA,uCACA,sCACA,CAAK,CACL,WACA,eACA,eACK,CACL,YACA,gBACA,gBACK,CAEL,CAsEA,iBAIA,OAHA,oCACA,0BACA,CAAG,EACH,CACA,CAqFA,8BAEA,IACA,qBACA,qBACA,yBACA,oBACA,uBACA,qBACA,4CACA,oDACA,4CACA,mCACA,EACA,IACA,qBACA,qBACA,yBACA,oBACA,uBACA,qBACA,+CACA,oDACA,4CACA,oCACA,EAEA,eACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB,yBAAyB;AACzB,yBAAyB;AACzB,qBAAqB;AACrB,mBAAmB;AACnB,cAAc;AACd,kBAAkB;AAClB,eAAe;AACf,0BAA0B;AAC1B,GACA,CAoDA,SACA,sBACA,sBACA,2BACA,GAGA,EAEA,uBACA,gBACA,kBACA,qBACA,oBACA,eACA,cACA,sBACA,iBACA,cACA,eACA,CAAK,CACL,OACA,aACA,cAGA,uBACA,eAAmB,CACnB,cAAkB,CAGlB,8BACA,uBACA,wBACA,gBACA,sBACA,eACA,qBACA,kBACA,wBACA,eACA,qBACA,iCACA,uBACA,wBACA,kBACA,sBAGA,aACA,cACA,kBACA,gBACA,kBACA,CAAI,EAAI,IACR,OACA,KACA,aACA,eACA,kBACA,iBACA,YACA,WACA,mBACA,gBACA,OACA,aACA,cAEA,cACA,YACA,aAEA,eACA,mBACA,oBACA,oBACA,qBACA,YACA,aACA,mBACA,eACA,qBACA,YACA,kBACA,qBACA,kBACA,2BACA,8BAEA,cACA,aACA,gBACA,kBACA,iBACA,EAEA,OACA,KAKA,MACA,OACA,6BACA,mBACA,uBAEA,mBAAsC,aAAc,EACpD,YA7JA,UACA,cACA,YACA,aACA,aACC,EACD,gCAsCA,OArCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,uCAAqD;;AAEzD,IAAI,GACJ,YAA+B,YAAgC,CAAI,WAAiC;AAEpG;;AAEA,EACA,aACA;AACA;AACA;AACA,MAAM,IAAwB,WAA+B;AAC7D;AACA,CAAC,EACD;AAEA;AACA,EAEA,GACA,0BAGA,CACA,EAgHA,GACA,CACA,QACA,EAEA,QACA,IAEA,IAEA,EACA,EAHA,wBA/aA,qFASA,2EAGA,iBAwaA,IAIA,EAHA,GACA,IACA,yCAEQ,EAAc,EACtB,CAAQ,SAKR,MAJQ,IACE,IAAM,OADG,0HAInB,uDACA,CAEA,IACA,QACA,EACA,IACA,2CACA,OAEA,IACA,MACU,EAAc,GAExB,CAAQ,SACA,IACE,IAAM,OADG,sFAEnB,CAEA,sBACA,SACA,KACA,iBACA,aACA,8BACA,CAAW,CACX,qBACA,aACA,sCACA,CAAW,CACF,CACT,wBACA,gBACA,WACA,CAAO,EAEP,QACA,EAEA,SAA+C,IAC/C,cAEA,EACA,oFAEA,MAEA,MADQ,IAAe,IAAM,wDAC7B,4CAGA,WACA,YACA,GACA,YACA,KACA,qBACA,qBACA,sCACA,CAAa,EACF,EAEX,gBACA,QACA,EACA,8BACA,WACA,qBACA,qBACA,OACA,gCACA,EAEA,OADA,UACA,CACA,EAEA,OAA8C,IAC9C,cACA,OACA,WAlVA,CAAiB,wDAAoD,EACrE,iCAMA,GALA,gBACA,4BACA,qBACA,qBACA,cAjDA,WACA,SACI,GAAM,yBAPV,6BAOU,GACV,eACA,SAAc,EACd,GADmB,IACnB,GAAe,EACf,GADoB,KACpB,OAAoB,KACpB,CAD0B,EAAE,EAC5B,GADiC,oCAEjC,CAAG,EAEH,aACA,4BACA,CAAG,EAEH,gBACA,sBACA,sBACA,4+DACA,CAAG,EACH,gCAEA,gBACA,oBACA,gBACA,CAAG,EAEH,gBACA,SAAc,EACd,GADmB,IACnB,GAAe,EACf,GADoB,EACpB,OACA,CAAG,EAOH,OALA,iBACA,iBAEA,+CAEA,CACA,KAYA,GACA,+BACA,oCACA,gBACA,CAEA,MAtIA,YACA,gCA0DA,OAzDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAEA,GACA,0BAGA,CACA,EA0EA,GAEA,OACA,KACA,cACA,iBACA,gBACA,CAAK,CACL,gBACA,iBACA,gBACA,CAAK,CACL,OACA,oBACA,CAAK,CACL,OACA,mBACA,CAAK,CAEL,EAkTA,CACA,4BACA,oCACA,SACA,YACA,CAAO,EAaP,OAZA,QACA,KACA,aACA,QACA,CAAS,CACT,cACA,QACA,CAAS,CACT,kBACA,QACA,CAAS,CACF,EACP,CACA,EAEA,OACA,gBACA,YACa,QAAS,mBAItB,0BACA,8DAEA,kBAEA,CAAO,CAOP,WAMA,iBAAuC,EACvC,iBAEA,OADA,gBACA,CACA,CAAO,CAMP,iBACA,IAA4B,GAE5B,WAMA,SACA,IACA,0CACA,QAGA,kBACA,KAEA,CACA,CAAG,CAQH,cACA,MAAiB,QAAS,GAC1B,4CACA,CAEA,IDvwBA,GCuwBA,0BAAoC,+FAAkG,iBAAkB,yBAAyB,SAAS,eAAgB,m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AEH,KACA,IACA,qBACA,EACA,gBACA,IACA,OACA,CAAS,CAlmCT,KAomCA,CAAK,CACL,KAGA,OACA,WACA,EACA,UAAqB,qCACrB,UAAyB,0BACzB,qBACA,WAA4B,iDAAmE,GAI/F,aAAwB,6CACxB,UAAyB,0BACzB,UACA,wBACA,YAEA,mBACA,CAAe,EAEf,OAAoC,WAAmB,CACvD,OAA4B,wBAA6C,IAOzE,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAwCA,OACA,EACA,qBAEA,aAAkB,CAClB,eAAqB,0DAAsD,IAE3E,sBACA,aApBA,MAAsB,QAAe,aACrC,EAAwB,QAAiB,aACzC,EAAqB,QAAc,oBACnC,yBACA,EAEA,yBACA,EAEA,CACA,IAYA,0BACA,EA9CA,YACA,gCAkBA,OAhBA;AACA;AACA;AACA;;AAEA,EAAE;AACF,EAAE;AACF,EAAE;AACF,EAAE;AACF,EAAE;AACF,EAEA,GACA,0BAGA,CACA,EA0BA,cAEA,KACA,GACA,SACA,QACA,CAAS,CACT,cAZA,EAaA,aAbA,EAaA,cAbA,EAcA,eAdA,EAeA,eAEA,CAAS,CACT,gBACA,iBAnBA,EAoBA,eACA,wBACA,CAAS,CACT,OACA,MACA,6BACA,yBACA,+BACA,CAAS,CACT,QACA,MACA,wBACA,CACA,EAEA,oBAA2F,iCAAgC,EAE3H,OApwBs7R,gBAAoB,UAAY,mNAswBt9R,OACA,UACA,kBACA,sCACA,yCACA,gCACA,kCACA,iBACA,MACA,8BACA,CAAa,CACb,WACA,oBACA,MACA,uCACA,CAAa,CACb,kBACA,mCACA,CAAa,CACb,qBACA,sCACA,CAAa,CACb,SAEA,EAEA,EAEA,QACA,CACA,GAqKA,GAAY,GAAM,iBAElB,MACA,EACA,4BACA,4BACA,gCACA,gCACA,GAGA,OACA,qBACA,gBACA,mBACA,MACA,IACA,MACA,IACA,OAEA,cACA,UACA,OAAW,oCACX,EAsUA,OACA,EACA,0BAEA,aAAkB,CAClB,gBAAoB,6BAA2B,IAC/C,iCAEA,OACA,eA7UA,CACA,IACA,QACA,cACA,SACA,UACC,EACD,eAxEA,OAAoC,EAAO,EAC3C,oCAAsC,+CAA8D,EACpG,iBA6BA,CA5BA,UACA,IACA,6CACA,OACA,MAAmB,GAAM,WAAc,GAAM,iBAC7C,OAAoB,GAAM,YAAe,GAAM,iBACpC,CACX,SAEA,8BACA,oBACA,6BACA,0BACA,CAAS,EAET,2BACA,2BACA,cACA,wBACA,KACA,mCACA,GACA,EACA,iBACA,CAAS,EACT,GACA,KAEA,QACA,CAAK,IACL,CACA,EAsCA,OAAuD,EAAO,EAE9D,iBAAqC,UAAS,EAC9C,sBAA0C,gBArK1C,GACA,gCAEA,YACA,YAmFA,OAjFA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,QAAQ,GAAY;AACpB,QAAQ,GAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,GAAS;AACjB,QAAQ,GAAS;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,GACA,0BAGA,CACA,EA6E0C,yBAAmE,KAC7G,WAvMA,CACA,IACC,EACD,iBACA,MACA,OACA,SACA,eACA,EAGA,OACA,YACA,kDAA2D,GAAQ,EACnE,OACA,MACA,MACA,CAAS,CACT,gBACA,mBACA,MACA,CAAS,CACT,YACA,kBACA,CAAS,EAGT,CACA,EA2KA,GAA2C,EAAG,EAE9C,iBACA,iBACA,iBACA,kBAA6D,gCAAwC,EACrG,qBACA,qBAMA,aACA,gBACA,YACA,MACA,mBACA,qBACA,iBAAiC,QAAsB,IACvD,kBAAkC,SAAuB,IACzD,wBACA,IACA,cAEA,CAEA,gBACA,IACA,iBAAoC,QAAsB,IAC1D,kBAAqC,SAAuB,KAG5D,GAAwB,6CAAiF,CACzG,CA+BA,gBACA,MACA,MACA,WACA,OACA,sCACA,oCACA,MACA,KACA,EAEA,iCACA,kCACA,CArEA,iBACM,GAAM,+BACZ,CAAK,KAyBL,iBACA,gBACA,MACA,OAGA,yBACA,MACA,OAGA,gBACA,QACA,kCAGA,iCACA,iCACA,sCAGA,wBACA,cACA,+CACA,wBACA,cACA,8CACA,CAAK,MAiBL,uBACA,YACA,cACA,OAEA,gBACA,4BACA,gBACA,gBACA,UACA,eACA,OACA,KACA,qCAnIA,IAoIA,qCApIA,GAqIA,EAAa,EACb,KACA,iBACA,OACA,KACA,8CA1IA,IA2IA,qCA3IA,GA4IA,EAAa,EACb,KACA,mBACA,OACA,KACA,qCAjJA,IAkJA,+CAlJA,GAmJA,EAAa,EACb,KACA,oBACA,OACA,KACA,8CAxJA,IAyJA,+CAzJA,GA0JA,EAAa,CAEb,CACA,EACK,IAGL,YAA8C,sBAA0B,EAiHxE,OA9BA,GACA,sCACA,yBACA,CAAO,KACP,2BACA,IACA,yBACA,MACA,2CAEA,sBACA,uBACA,qBACA,sBACA,kBACA,CAAS,CACT,KAEA,qCACA,2BACA,eACA,qBACA,GACA,CAAO,KACP,0BACA,2BACA,IACA,CAAO,IACP,CAAK,EAGL,SAAiB,gBACjB,WAAuB,8CAA6D,CACpF,SAAqB,wCACrB,SAAuB,sCAA0C,6BAAiC,QAClG,YACA,YArHA,YACA,WAEA,YAAqC,uCAErC,UACA,gBACA,aAEA,mCACA,+BAEA,MAEA,eACA,EACA,mDAEA,WACA,EACA,oDAGA,sBACA,sBAKA,OAHA,6BACA,6BAEA,CACA,SACA,SACA,OACA,MACA,CACA,CAAS,CACT,EAEA,OACA,sCACA,mCACA,EAEA,mCACA,gCACA,EAyEA,OAAuB,2CAA6D,CACpF,QAEA,KACA,cA9RA,EA+RA,aA/RA,EAgSA,eACA,oBAEA,KACA,YArSA,GACA,EAqSA,aArSA,EAsSA,eACA,qBAEA,KACA,cA1SA,EA2SA,WA5SA,GACA,EA4SA,eACA,uBAEA,KACA,YAjTA,GACA,EAiTA,WAlT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yCACA,IACA,+BACA,aACA,sBACA,wCAEA,6BAEA,qBACA,CAAM,SACA,GAAW,EACT,IAAM,0FACd,CAGA,QACA,CAQA,aACA,6BACA,4ICvHA,SAgDA,cACA,4BACA,wBACA,yBACA,qBACA,qBACA,cACA,cACA,eACA,kBACA,+BACA,0BACA,QAAe,QAAe,GAC9B,OAAc,QAAc,EAC5B,CACA,CAKA,QACA,YA4BA,OA3BA,sCACA,SAAuB,eACvB,UAAwB,gBACxB,aAA2B,mBAC3B,sBAGA,oBACA,uCACA,GAGA,mBACA,qBACA,yBACA,yCACA,iCACA,8CACA,uCACA,sCACA,0BAAwC,gCACxC,uBAAqC,6BACrC,uBACA,iCAEI,OAAgB,GAAW,OAAgB,QAE/C,CACA,CAKA,aACA,cACA,CAKA,kBACA,mBACA,CAKA,YACA,oBAMA,cACA,yBAMA,oBACA,4BACA,CAKA,qBAEA,OADA,8BACA,KAMA,WAeA,OAZA,eACA,aACA,UACA,kBACA,eACA,EAEA,eACM,QAAa,qBAAkB,EAAM,EAG3C,6BACA,KAMA,UACA,kBAOA,oBACA,4BAOA,qBAEA,OADA,uBACA,KAMA,WAMA,OALA,YACA,cACA,IACA,EACA,6BACA,KAMA,YAGA,OAFA,YAAmB,qBACnB,6BACA,KAMA,aAMA,OALA,aACA,eACA,IACA,EACA,6BACA,KAMA,cAGA,OAFA,aAAoB,sBACpB,6BACA,IACA,CAKA,kBAGA,OAFA,oBACA,6BACA,KAMA,YAGA,OAFA,cACA,6BACA,KAcA,sBAGA,OAFA,wBACA,6BACA,KAMA,gBASA,OARA,SAEA,yBAEA,oBAGA,6BACA,KAMA,cAOA,OANA,EAGA,gBAFA,qBAIA,6BACA,KAMA,aACA,qBAMA,UACA,MACA,YAGA,qCAEA,MACA,eAEA,yCACU,QAAa,IACvB,qBACA,GAEA,MAAY,2EAA2E,MA0BvF,OAxBA,YAAmB,oBACnB,aAAoB,qBACpB,gBAAuB,wBAEvB,0BACA,eAGA,GACA,gBAGA,UACA,sBAGA,GACA,6BAGA,GACA,yBAGA,KAMA,QAiBA,OAfA,qBACA,cACA,eACA,cACA,kBACA,mBAC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","sources":["webpack://_N_E/./node_modules/@sentry/core/build/esm/currentScopes.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/interpolate-as.ts","webpack://_N_E/../../src/client/request-idle-callback.ts","webpack://_N_E/../../../src/shared/lib/constants.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/metric-summary.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-locale.ts","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/getNativeImplementation.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/instrument/dom.js","webpack://_N_E/../../src/client/remove-locale.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/ratelimit.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/isSentryRequestUrl.js","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/spanstatus.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/omit.ts","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getVisibilityWatcher.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/buildPolyfills/_nullishCoalesce.js","webpack://_N_E/../../src/client/with-router.tsx","webpack://_N_E/./node_modules/next/dist/lib/constants.js?4bb4","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/sdkMetadata.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integration.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/inboundfilters.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/functiontostring.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/dedupe.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/sdk.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/api.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/envelope.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/clientreport.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/error.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/baseclient.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/debug-build.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/eventbuilder.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/helpers.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/userfeedback.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/client.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/instrument/console.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/instrument/fetch.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/breadcrumb-log-level.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/url.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/breadcrumbs.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/browserapierrors.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/browsersession.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalError.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalUnhandledRejection.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/globalhandlers.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/httpcontext.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/aggregate-errors.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/linkederrors.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/stack-parsers.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/promisebuffer.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/transports/base.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/transports/fetch.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/sdk.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/sdk.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/getVercelEnv.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/nextNavigationErrorUtils.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/measurement.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/handleCallbackErrors.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/logSpans.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/sampling.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/sentryNonRecordingSpan.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/utils.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/sentrySpan.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/trace.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/utils.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/cls.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/browserMetrics.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/inp.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/idleSpan.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/errors.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/tracing/backgroundtab.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/traceData.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/fetch.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/tracing/request.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/tracing/browserTracingIntegration.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/routing/appRouterRoutingInstrumentation.js","webpack://_N_E/./node_modules/next/dist/api/router.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/debug-build.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/routing/pagesRouterRoutingInstrumentation.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/routing/nextRoutingInstrumentation.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/browserTracingIntegration.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/path.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/rewriteframes.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/clientNormalizationIntegration.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/tunnelRoute.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/client/index.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/requestdata.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/vercelWaitUntil.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/utils/responseEnd.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/_error.js","webpack://_N_E/./node_modules/next/dist/api/constants.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/utils/isBuild.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/span-attributes-with-logic-attached.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/utils/wrapperUtils.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapGetStaticPropsWithSentry.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/buildPolyfills/_asyncNullishCoalesce.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapGetInitialPropsWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapAppGetInitialPropsWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapDocumentGetInitialPropsWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapErrorGetInitialPropsWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapGetServerSidePropsWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/utils/tracingUtils.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/wrapServerComponentWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/wrapRouteHandlerWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapApiHandlerWithSentryVercelCrons.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/wrapMiddlewareWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/pages-router-instrumentation/wrapPageComponentWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/wrapGenerationFunctionWithSentry.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/withServerActionInstrumentation.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/common/captureRequestError.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/hubextensions.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/captureconsole.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/feedback.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/debug.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/extraerrordata.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/getCurrentHubShim.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/transports/multiplexed.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metadata.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/metadata.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/parameterize.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/sessiontiming.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/third-party-errors-filter.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/integrations/zoderrors.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/utils/lazyLoadIntegration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/reportingobserver.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/httpclient.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/contextlines.js","webpack://_N_E/./node_modules/@sentry-internal/replay-canvas/build/npm/esm/index.js","webpack://_N_E/./node_modules/@sentry-internal/feedback/build/npm/esm/index.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/feedbackAsync.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/feedbackSync.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/constants.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/exports.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/utils.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/envelope.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/instance.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/metrics/browser-aggregator.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/metrics.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/transports/offline.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/transports/offline.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/profiling/utils.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/profiling/startProfileForSpan.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/profiling/integration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/spotlight.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/utils/featureFlags.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/featureFlags/featureFlagsIntegration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/featureFlags/launchdarkly/integration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/featureFlags/openfeature/integration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/featureFlags/unleash/integration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/integrations/featureFlags/statsig/integration.js","webpack://_N_E/./node_modules/@sentry/browser/build/npm/esm/index.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/error.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/constants.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/profiler.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/debug-build.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/errorboundary.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/redux.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/reactrouterv3.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/tanstackrouter.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/reactrouter.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/reactrouterv6-compat-utils.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/reactrouterv6.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/reactrouterv7.js","webpack://_N_E/./node_modules/@sentry/react/build/esm/index.js","webpack://_N_E/./node_modules/@sentry/nextjs/build/esm/index.client.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/compare-states.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/browser.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/node.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/isBrowser.js","webpack://_N_E/../../src/client/resolve-href.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/object.js","webpack://_N_E/../../../../src/shared/lib/page-path/denormalize-page-path.ts","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/onHidden.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getNavigationEntry.js","webpack://_N_E/../../src/client/route-loader.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/session.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/stacktrace.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-dynamic-param.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/constants.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/exports.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/propagationContext.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/misc.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/worldwide.js","webpack://_N_E/./node_modules/next/dist/lib/route-pattern-normalizer.js?a59d","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getActivationStart.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-match-utils.ts","webpack://_N_E/../../src/client/trusted-types.ts","webpack://_N_E/./node_modules/react-is/index.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/types.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/parseSampleRate.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-relative-url.ts","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/bindReporter.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/generateUniqueID.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/initMetric.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/observe.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/runOnce.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenActivated.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onFCP.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getCLS.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getFID.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/interactions.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenIdle.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getINP.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getLCP.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onTTFB.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/metrics/instrument.js","webpack://_N_E/../../src/client/script.tsx","webpack://_N_E/../../../src/shared/lib/modern-browserslist-target.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/hasTracingEnabled.js","webpack://_N_E/./node_modules/next/dist/lib/is-api-route.js?2cd1","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/spanOnScope.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/vendor/supportsHistory.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/instrument/history.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/sorted-routes.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-url.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/dsn.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/defaultScopes.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/asyncContext/stackStrategy.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/asyncContext/index.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/tracing.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/spanUtils.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/eventProcessors.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/applyScopeDataToEvent.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/prepareEvent.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/env.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/index.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/version.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/is.js","webpack://_N_E/../../../../src/shared/lib/router/router.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-local-url.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/carrier.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/time.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/debug-build.js","webpack://_N_E/../../../../src/shared/lib/i18n/normalize-locale-path.ts","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/instrument/xhr.js","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/envelope.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/baggage.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/supports.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/scope.js","webpack://_N_E/./node_modules/react-is/cjs/react-is.production.min.js","webpack://_N_E/../../../src/shared/lib/bloom-filter.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../src/client/router.ts","webpack://_N_E/../../src/client/detect-domain-locale.ts","webpack://_N_E/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-path-prefix.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils/merge.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-suffix.ts","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-path-sep.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/severity.js","webpack://_N_E/../../src/client/add-locale.ts","webpack://_N_E/./node_modules/next/dist/compiled/path-to-regexp/index.js?5ed8","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-asset-path-from-route.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/breadcrumbs.js","webpack://_N_E/../../../src/shared/lib/mitt.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/memo.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/normalize.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/semanticAttributes.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/tracing/dynamicSamplingContext.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/instrument/handlers.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/string.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/syncpromise.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/debug-ids.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/debug-build.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/buildPolyfills/_optionalChain.js","webpack://_N_E/./node_modules/@sentry-internal/browser-utils/build/esm/debug-build.js","webpack://_N_E/./node_modules/@sentry/core/build/esm/utils-hoist/logger.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-regex.ts"],"sourcesContent":["import { getAsyncContextStrategy } from './asyncContext/index.js';\nimport { getMainCarrier } from './carrier.js';\nimport { Scope } from './scope.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\nimport { getGlobalSingleton } from './utils-hoist/worldwide.js';\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nfunction getIsolationScope() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  return getGlobalSingleton('globalScope', () => new Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\n\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nfunction withIsolationScope(\n  ...rest\n\n) {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return getCurrentScope().getClient();\n}\n\n/**\n * Get a trace context for the given scope.\n */\nfunction getTraceContextFromScope(scope) {\n  const propagationContext = scope.getPropagationContext();\n\n  // TODO(v9): Use generateSpanId() instead of spanId\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceId, spanId, parentSpanId } = propagationContext;\n\n  const traceContext = dropUndefinedKeys({\n    trace_id: traceId,\n    span_id: spanId,\n    parent_span_id: parentSpanId,\n  });\n\n  return traceContext;\n}\n\nexport { getClient, getCurrentScope, getGlobalScope, getIsolationScope, getTraceContextFromScope, withIsolationScope, withScope };\n//# sourceMappingURL=currentScopes.js.map\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { getRouteMatcher } from './route-matcher'\nimport { getRouteRegex } from './route-regex'\n\nexport function interpolateAs(\n  route: string,\n  asPathname: string,\n  query: ParsedUrlQuery\n) {\n  let interpolatedRoute = ''\n\n  const dynamicRegex = getRouteRegex(route)\n  const dynamicGroups = dynamicRegex.groups\n  const dynamicMatches =\n    // Try to match the dynamic route against the asPath\n    (asPathname !== route ? getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n    // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query\n\n  interpolatedRoute = route\n  const params = Object.keys(dynamicGroups)\n\n  if (\n    !params.every((param) => {\n      let value = dynamicMatches[param] || ''\n      const { repeat, optional } = dynamicGroups[param]\n\n      // support single-level catch-all\n      // TODO: more robust handling for user-error (passing `/`)\n      let replaced = `[${repeat ? '...' : ''}${param}]`\n      if (optional) {\n        replaced = `${!value ? '/' : ''}[${replaced}]`\n      }\n      if (repeat && !Array.isArray(value)) value = [value]\n\n      return (\n        (optional || param in dynamicMatches) &&\n        // Interpolate group into data URL if present\n        (interpolatedRoute =\n          interpolatedRoute!.replace(\n            replaced,\n            repeat\n              ? (value as string[])\n                  .map(\n                    // these values should be fully encoded instead of just\n                    // path delimiter escaped since they are being inserted\n                    // into the URL and we expect URL encoded segments\n                    // when parsing dynamic route params\n                    (segment) => encodeURIComponent(segment)\n                  )\n                  .join('/')\n              : encodeURIComponent(value as string)\n          ) || '/')\n      )\n    })\n  ) {\n    interpolatedRoute = '' // did not satisfy all requirements\n\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params,\n    result: interpolatedRoute,\n  }\n}\n","export const requestIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    let start = Date.now()\n    return self.setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1)\n  }\n\nexport const cancelIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.cancelIdleCallback &&\n    self.cancelIdleCallback.bind(window)) ||\n  function (id: number) {\n    return clearTimeout(id)\n  }\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport enum AdapterOutputType {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `PRERENDER` represents an ISR enabled route that might\n   * have a seeded cache entry or fallback generated during build\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * `STATIC_FILE` represents a static file (ie /_next/static)\n   */\n  STATIC_FILE = 'STATIC_FILE',\n\n  /**\n   * `MIDDLEWARE` represents the middleware output if present\n   */\n  MIDDLEWARE = 'MIDDLEWARE',\n}\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const TURBOPACK_CLIENT_BUILD_MANIFEST = 'client-build-manifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import { dropUndefinedKeys } from '../utils-hoist/object.js';\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\n\nconst METRICS_SPAN_FIELD = '_sentryMetrics';\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nfunction getMetricSummaryJsonForSpan(span) {\n  const storage = (span )[METRICS_SPAN_FIELD];\n\n  if (!storage) {\n    return undefined;\n  }\n  const output = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    const arr = output[exportKey] || (output[exportKey] = []);\n    arr.push(dropUndefinedKeys(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on a span.\n */\nfunction updateMetricSummaryOnSpan(\n  span,\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const existingStorage = (span )[METRICS_SPAN_FIELD];\n  const storage =\n    existingStorage ||\n    ((span )[METRICS_SPAN_FIELD] = new Map());\n\n  const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n  const bucketItem = storage.get(bucketKey);\n\n  if (bucketItem) {\n    const [, summary] = bucketItem;\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: Math.min(summary.min, value),\n        max: Math.max(summary.max, value),\n        count: (summary.count += 1),\n        sum: (summary.sum += value),\n        tags: summary.tags,\n      },\n    ]);\n  } else {\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: value,\n        max: value,\n        count: 1,\n        sum: value,\n        tags,\n      },\n    ]);\n  }\n}\n\nexport { getMetricSummaryJsonForSpan, updateMetricSummaryOnSpan };\n//# sourceMappingURL=metric-summary.js.map\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import { isNativeFunction, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\nconst cachedImplementations = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nfunction getNativeImplementation(\n  name,\n) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] ;\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) );\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = contentWindow[name] ;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) );\n}\n\n/** Clear a cached implementation. */\nfunction clearCachedImplementation(name) {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction fetch(...rest) {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nfunction setTimeout(...rest) {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n\nexport { clearCachedImplementation, fetch, getNativeImplementation, setTimeout };\n//# sourceMappingURL=getNativeImplementation.js.map\n","import { addHandler, maybeInstrument, triggerHandlers, fill, addNonEnumerableProperty, uuid4 } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    const globalObject = WINDOW ;\n    const targetObj = globalObject[target];\n    const proto = targetObj && targetObj.prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function ( type, listener, options) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const handlers = (this.__sentry_instrumentation_handlers__ =\n              this.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function ( type, listener, options) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const handlers = this.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete this.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListeners` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { parsePath } from '../shared/lib/router/utils/parse-path'\n\nexport function removeLocale(path: string, locale?: string) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    const { pathname } = parsePath(path)\n    const pathLower = pathname.toLowerCase()\n    const localeLower = locale?.toLowerCase()\n\n    return locale &&\n      (pathLower.startsWith(`/${localeLower}/`) ||\n        pathLower === `/${localeLower}`)\n      ? `${pathname.length === locale.length + 1 ? `/` : ``}${path.slice(\n          locale.length + 1\n        )}`\n      : path\n  }\n  return path\n}\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","/**\n * Checks whether given url points to Sentry server\n *\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, client) {\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","const SPAN_STATUS_UNSET = 0;\nconst SPAN_STATUS_OK = 1;\nconst SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\nexport { SPAN_STATUS_ERROR, SPAN_STATUS_OK, SPAN_STATUS_UNSET, getSpanStatusFromHttpCode, setHttpStatus };\n//# sourceMappingURL=spanstatus.js.map\n","export function omit<T extends { [key: string]: unknown }, K extends keyof T>(\n  object: T,\n  keys: K[]\n): Omit<T, K> {\n  const omitted: { [key: string]: unknown } = {}\n  Object.keys(object).forEach((key) => {\n    if (!keys.includes(key as K)) {\n      omitted[key] = object[key]\n    }\n  })\n  return omitted as Omit<T, K>\n}\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeChangeListeners();\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst removeChangeListeners = () => {\n  removeEventListener('visibilitychange', onVisibilityUpdate, true);\n  removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst getVisibilityWatcher = () => {\n  if (WINDOW.document && firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","import React, { type JSX } from 'react'\nimport type {\n  BaseContext,\n  NextComponentType,\n  NextPageContext,\n} from '../shared/lib/utils'\nimport type { NextRouter } from './router'\nimport { useRouter } from './router'\n\nexport type WithRouterProps = {\n  router: NextRouter\n}\n\nexport type ExcludeRouterProps<P> = Pick<\n  P,\n  Exclude<keyof P, keyof WithRouterProps>\n>\n\nexport default function withRouter<\n  P extends WithRouterProps,\n  C extends BaseContext = NextPageContext,\n>(\n  ComposedComponent: NextComponentType<C, any, P>\n): React.ComponentType<ExcludeRouterProps<P>> {\n  function WithRouterWrapper(props: any): JSX.Element {\n    return <ComposedComponent router={useRouter()} {...props} />\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps\n  // This is needed to allow checking for custom getInitialProps in _app\n  ;(WithRouterWrapper as any).origGetInitialProps = (\n    ComposedComponent as any\n  ).origGetInitialProps\n  if (process.env.NODE_ENV !== 'production') {\n    const name =\n      ComposedComponent.displayName || ComposedComponent.name || 'Unknown'\n    WithRouterWrapper.displayName = `withRouter(${name})`\n  }\n\n  return WithRouterWrapper\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    ACTION_SUFFIX: null,\n    APP_DIR_ALIAS: null,\n    CACHE_ONE_YEAR: null,\n    DOT_NEXT_ALIAS: null,\n    ESLINT_DEFAULT_DIRS: null,\n    GSP_NO_RETURNED_VALUE: null,\n    GSSP_COMPONENT_MEMBER_ERROR: null,\n    GSSP_NO_RETURNED_VALUE: null,\n    HTML_CONTENT_TYPE_HEADER: null,\n    INFINITE_CACHE: null,\n    INSTRUMENTATION_HOOK_FILENAME: null,\n    JSON_CONTENT_TYPE_HEADER: null,\n    MATCHED_PATH_HEADER: null,\n    MIDDLEWARE_FILENAME: null,\n    MIDDLEWARE_LOCATION_REGEXP: null,\n    NEXT_BODY_SUFFIX: null,\n    NEXT_CACHE_IMPLICIT_TAG_ID: null,\n    NEXT_CACHE_REVALIDATED_TAGS_HEADER: null,\n    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: null,\n    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: null,\n    NEXT_CACHE_TAGS_HEADER: null,\n    NEXT_CACHE_TAG_MAX_ITEMS: null,\n    NEXT_CACHE_TAG_MAX_LENGTH: null,\n    NEXT_DATA_SUFFIX: null,\n    NEXT_INTERCEPTION_MARKER_PREFIX: null,\n    NEXT_META_SUFFIX: null,\n    NEXT_QUERY_PARAM_PREFIX: null,\n    NEXT_RESUME_HEADER: null,\n    NON_STANDARD_NODE_ENV: null,\n    PAGES_DIR_ALIAS: null,\n    PRERENDER_REVALIDATE_HEADER: null,\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: null,\n    PUBLIC_DIR_MIDDLEWARE_CONFLICT: null,\n    ROOT_DIR_ALIAS: null,\n    RSC_ACTION_CLIENT_WRAPPER_ALIAS: null,\n    RSC_ACTION_ENCRYPTION_ALIAS: null,\n    RSC_ACTION_PROXY_ALIAS: null,\n    RSC_ACTION_VALIDATE_ALIAS: null,\n    RSC_CACHE_WRAPPER_ALIAS: null,\n    RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS: null,\n    RSC_MOD_REF_PROXY_ALIAS: null,\n    RSC_PREFETCH_SUFFIX: null,\n    RSC_SEGMENTS_DIR_SUFFIX: null,\n    RSC_SEGMENT_SUFFIX: null,\n    RSC_SUFFIX: null,\n    SERVER_PROPS_EXPORT_ERROR: null,\n    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: null,\n    SERVER_PROPS_SSG_CONFLICT: null,\n    SERVER_RUNTIME: null,\n    SSG_FALLBACK_EXPORT_ERROR: null,\n    SSG_GET_INITIAL_PROPS_CONFLICT: null,\n    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: null,\n    TEXT_PLAIN_CONTENT_TYPE_HEADER: null,\n    UNSTABLE_REVALIDATE_RENAME_ERROR: null,\n    WEBPACK_LAYERS: null,\n    WEBPACK_RESOURCE_QUERIES: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ACTION_SUFFIX: function() {\n        return ACTION_SUFFIX;\n    },\n    APP_DIR_ALIAS: function() {\n        return APP_DIR_ALIAS;\n    },\n    CACHE_ONE_YEAR: function() {\n        return CACHE_ONE_YEAR;\n    },\n    DOT_NEXT_ALIAS: function() {\n        return DOT_NEXT_ALIAS;\n    },\n    ESLINT_DEFAULT_DIRS: function() {\n        return ESLINT_DEFAULT_DIRS;\n    },\n    GSP_NO_RETURNED_VALUE: function() {\n        return GSP_NO_RETURNED_VALUE;\n    },\n    GSSP_COMPONENT_MEMBER_ERROR: function() {\n        return GSSP_COMPONENT_MEMBER_ERROR;\n    },\n    GSSP_NO_RETURNED_VALUE: function() {\n        return GSSP_NO_RETURNED_VALUE;\n    },\n    HTML_CONTENT_TYPE_HEADER: function() {\n        return HTML_CONTENT_TYPE_HEADER;\n    },\n    INFINITE_CACHE: function() {\n        return INFINITE_CACHE;\n    },\n    INSTRUMENTATION_HOOK_FILENAME: function() {\n        return INSTRUMENTATION_HOOK_FILENAME;\n    },\n    JSON_CONTENT_TYPE_HEADER: function() {\n        return JSON_CONTENT_TYPE_HEADER;\n    },\n    MATCHED_PATH_HEADER: function() {\n        return MATCHED_PATH_HEADER;\n    },\n    MIDDLEWARE_FILENAME: function() {\n        return MIDDLEWARE_FILENAME;\n    },\n    MIDDLEWARE_LOCATION_REGEXP: function() {\n        return MIDDLEWARE_LOCATION_REGEXP;\n    },\n    NEXT_BODY_SUFFIX: function() {\n        return NEXT_BODY_SUFFIX;\n    },\n    NEXT_CACHE_IMPLICIT_TAG_ID: function() {\n        return NEXT_CACHE_IMPLICIT_TAG_ID;\n    },\n    NEXT_CACHE_REVALIDATED_TAGS_HEADER: function() {\n        return NEXT_CACHE_REVALIDATED_TAGS_HEADER;\n    },\n    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: function() {\n        return NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER;\n    },\n    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: function() {\n        return NEXT_CACHE_SOFT_TAG_MAX_LENGTH;\n    },\n    NEXT_CACHE_TAGS_HEADER: function() {\n        return NEXT_CACHE_TAGS_HEADER;\n    },\n    NEXT_CACHE_TAG_MAX_ITEMS: function() {\n        return NEXT_CACHE_TAG_MAX_ITEMS;\n    },\n    NEXT_CACHE_TAG_MAX_LENGTH: function() {\n        return NEXT_CACHE_TAG_MAX_LENGTH;\n    },\n    NEXT_DATA_SUFFIX: function() {\n        return NEXT_DATA_SUFFIX;\n    },\n    NEXT_INTERCEPTION_MARKER_PREFIX: function() {\n        return NEXT_INTERCEPTION_MARKER_PREFIX;\n    },\n    NEXT_META_SUFFIX: function() {\n        return NEXT_META_SUFFIX;\n    },\n    NEXT_QUERY_PARAM_PREFIX: function() {\n        return NEXT_QUERY_PARAM_PREFIX;\n    },\n    NEXT_RESUME_HEADER: function() {\n        return NEXT_RESUME_HEADER;\n    },\n    NON_STANDARD_NODE_ENV: function() {\n        return NON_STANDARD_NODE_ENV;\n    },\n    PAGES_DIR_ALIAS: function() {\n        return PAGES_DIR_ALIAS;\n    },\n    PRERENDER_REVALIDATE_HEADER: function() {\n        return PRERENDER_REVALIDATE_HEADER;\n    },\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {\n        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;\n    },\n    PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {\n        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;\n    },\n    ROOT_DIR_ALIAS: function() {\n        return ROOT_DIR_ALIAS;\n    },\n    RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {\n        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;\n    },\n    RSC_ACTION_ENCRYPTION_ALIAS: function() {\n        return RSC_ACTION_ENCRYPTION_ALIAS;\n    },\n    RSC_ACTION_PROXY_ALIAS: function() {\n        return RSC_ACTION_PROXY_ALIAS;\n    },\n    RSC_ACTION_VALIDATE_ALIAS: function() {\n        return RSC_ACTION_VALIDATE_ALIAS;\n    },\n    RSC_CACHE_WRAPPER_ALIAS: function() {\n        return RSC_CACHE_WRAPPER_ALIAS;\n    },\n    RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS: function() {\n        return RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS;\n    },\n    RSC_MOD_REF_PROXY_ALIAS: function() {\n        return RSC_MOD_REF_PROXY_ALIAS;\n    },\n    RSC_PREFETCH_SUFFIX: function() {\n        return RSC_PREFETCH_SUFFIX;\n    },\n    RSC_SEGMENTS_DIR_SUFFIX: function() {\n        return RSC_SEGMENTS_DIR_SUFFIX;\n    },\n    RSC_SEGMENT_SUFFIX: function() {\n        return RSC_SEGMENT_SUFFIX;\n    },\n    RSC_SUFFIX: function() {\n        return RSC_SUFFIX;\n    },\n    SERVER_PROPS_EXPORT_ERROR: function() {\n        return SERVER_PROPS_EXPORT_ERROR;\n    },\n    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {\n        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;\n    },\n    SERVER_PROPS_SSG_CONFLICT: function() {\n        return SERVER_PROPS_SSG_CONFLICT;\n    },\n    SERVER_RUNTIME: function() {\n        return SERVER_RUNTIME;\n    },\n    SSG_FALLBACK_EXPORT_ERROR: function() {\n        return SSG_FALLBACK_EXPORT_ERROR;\n    },\n    SSG_GET_INITIAL_PROPS_CONFLICT: function() {\n        return SSG_GET_INITIAL_PROPS_CONFLICT;\n    },\n    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {\n        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;\n    },\n    TEXT_PLAIN_CONTENT_TYPE_HEADER: function() {\n        return TEXT_PLAIN_CONTENT_TYPE_HEADER;\n    },\n    UNSTABLE_REVALIDATE_RENAME_ERROR: function() {\n        return UNSTABLE_REVALIDATE_RENAME_ERROR;\n    },\n    WEBPACK_LAYERS: function() {\n        return WEBPACK_LAYERS;\n    },\n    WEBPACK_RESOURCE_QUERIES: function() {\n        return WEBPACK_RESOURCE_QUERIES;\n    }\n});\nconst TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain';\nconst HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8';\nconst JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8';\nconst NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nconst NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nconst MATCHED_PATH_HEADER = 'x-matched-path';\nconst PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nconst RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nconst RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nconst RSC_SEGMENT_SUFFIX = '.segment.rsc';\nconst RSC_SUFFIX = '.rsc';\nconst ACTION_SUFFIX = '.action';\nconst NEXT_DATA_SUFFIX = '.json';\nconst NEXT_META_SUFFIX = '.meta';\nconst NEXT_BODY_SUFFIX = '.body';\nconst NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nconst NEXT_RESUME_HEADER = 'next-resume';\nconst NEXT_CACHE_TAG_MAX_ITEMS = 128;\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\nconst CACHE_ONE_YEAR = 31536000;\nconst INFINITE_CACHE = 0xfffffffe;\nconst MIDDLEWARE_FILENAME = 'middleware';\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\nconst INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\nconst PAGES_DIR_ALIAS = 'private-next-pages';\nconst DOT_NEXT_ALIAS = 'private-dot-next';\nconst ROOT_DIR_ALIAS = 'private-next-root-dir';\nconst APP_DIR_ALIAS = 'private-next-app-dir';\nconst RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';\nconst RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nconst RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nconst RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nconst RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS = 'private-next-rsc-track-dynamic-import';\nconst RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nconst GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nconst SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The Node.js bundle layer for the API routes.\n   */ apiNode: 'api-node',\n    /**\n   * The Edge Lite bundle layer for the API routes.\n   */ apiEdge: 'api-edge',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The browser client bundle layer for Pages directory.\n   */ pagesDirBrowser: 'pages-dir-browser',\n    /**\n   * The Edge Lite bundle layer for Pages directory.\n   */ pagesDirEdge: 'pages-dir-edge',\n    /**\n   * The Node.js bundle layer for Pages directory.\n   */ pagesDirNode: 'pages-dir-node'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.apiNode,\n            WEBPACK_LAYERS_NAMES.apiEdge\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\n\n//# sourceMappingURL=constants.js.map","import { SDK_VERSION } from '../utils-hoist/version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","import { getClient } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './utils-hoist/logger.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach((currentInstance) => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach((integration) => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    const resolvedUserIntegrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(resolvedUserIntegrations) ? resolvedUserIntegrations : [resolvedUserIntegrations];\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex > -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1) ;\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getEventDescription } from '../utils-hoist/misc.js';\nimport { stringMatchesSomePattern } from '../utils-hoist/string.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  \"undefined is not an object (evaluating 'a.L')\", // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n  /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/, // unactionable error from CEFSharp, a .NET library that embeds chromium in .NET apps\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isUselessError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n          event,\n        )}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event) {\n  if (event.type) {\n    // event is not an error\n    return false;\n  }\n\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception || !event.exception.values || event.exception.values.length === 0) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n\nexport { inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getClient } from '../currentScopes.js';\nimport { defineIntegration } from '../integration.js';\nimport { getOriginalFunction } from '../utils-hoist/object.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\nexport { functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { defineIntegration } from '../integration.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getFramesFromEvent } from '../utils-hoist/stacktrace.js';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\n/**\n * Deduplication filter.\n */\nconst dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nexport { _shouldDropEvent, dedupeIntegration };\n//# sourceMappingURL=dedupe.js.map\n","import { getCurrentScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { logger, consoleSandbox } from './utils-hoist/logger.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  getCurrentScope().setClient(client);\n}\n\nexport { initAndBind, setCurrentClient };\n//# sourceMappingURL=sdk.js.map\n","import { makeDsn, dsnToString } from './utils-hoist/dsn.js';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  const params = {\n    sentry_version: SENTRY_API_VERSION,\n  };\n\n  if (dsn.publicKey) {\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    params.sentry_key = dsn.publicKey;\n  }\n\n  if (sdkInfo) {\n    params.sentry_client = `${sdkInfo.name}/${sdkInfo.version}`;\n  }\n\n  return new URLSearchParams(params).toString();\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel, sdkInfo) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext.js';\nimport { dsnToString } from './utils-hoist/dsn.js';\nimport { getSdkMetadataForEnvelopeHeader, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem } from './utils-hoist/envelope.js';\nimport './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport { spanToJSON, showSpanDropWarning } from './utils/spanUtils.js';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nfunction createSpanEnvelope(spans, client) {\n  function dscHasRequiredProps(dsc) {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  const headers = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client && client.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span) => {\n        const spanJson = beforeSendSpan(spanToJSON(span) );\n        if (!spanJson) {\n          showSpanDropWarning();\n        }\n        return spanJson;\n      }\n    : (span) => spanToJSON(span);\n\n  const items = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope(headers, items);\n}\n\nexport { createEventEnvelope, createSessionEnvelope, createSpanEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n\n   constructor(\n     message,\n    logLevel = 'warn',\n  ) {\n    super(message);this.message = message;\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { getTraceContextFromScope, getCurrentScope, getIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromScope } from './tracing/dynamicSamplingContext.js';\nimport { createClientReportEnvelope } from './utils-hoist/clientreport.js';\nimport { makeDsn, dsnToString } from './utils-hoist/dsn.js';\nimport { addItemToEnvelope, createAttachmentEnvelopeItem } from './utils-hoist/envelope.js';\nimport { SentryError } from './utils-hoist/error.js';\nimport { isPrimitive, isThenable, isPlainObject, isParameterizedString } from './utils-hoist/is.js';\nimport { logger, consoleSandbox } from './utils-hoist/logger.js';\nimport { uuid4, checkOrSetAlreadyCaught } from './utils-hoist/misc.js';\nimport { resolvedSyncPromise, SyncPromise, rejectedSyncPromise } from './utils-hoist/syncpromise.js';\nimport { parseSampleRate } from './utils/parseSampleRate.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\nimport { showSpanDropWarning } from './utils/spanUtils.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n\n    // TODO(v9): Remove this deprecation warning\n    const tracingOptions = ['enableTracing', 'tracesSampleRate', 'tracesSampler'] ;\n    const undefinedOption = tracingOptions.find(option => option in options && options[option] == undefined);\n    if (undefinedOption) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Sentry] Deprecation warning: \\`${undefinedOption}\\` is set to undefined, which leads to tracing being enabled. In v9, a value of \\`undefined\\` will result in tracing being disabled.`,\n        );\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint, scope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    level,\n    hint,\n    currentScope,\n  ) {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, currentScope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, eventOrCount) {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n   sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && logger.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = event.level === 'fatal';\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope = getCurrentScope(),\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      evt.contexts = {\n        trace: getTraceContextFromScope(currentScope),\n        ...evt.contexts,\n      };\n\n      const dynamicSamplingContext = getDynamicSamplingContextFromScope(this, currentScope);\n\n      evt.sdkProcessingMetadata = {\n        dynamicSamplingContext,\n        ...evt.sdkProcessingMetadata,\n      };\n\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          if (reason instanceof SentryError && reason.logLevel === 'log') {\n            logger.log(reason.message);\n          } else {\n            logger.warn(reason);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, currentScope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, currentScope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = currentScope && currentScope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    DEBUG_BUILD && logger.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client,\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event)) {\n    if (event.spans && beforeSendSpan) {\n      const processedSpans = [];\n      for (const span of event.spans) {\n        const processedSpan = beforeSendSpan(span);\n        if (processedSpan) {\n          processedSpans.push(processedSpan);\n        } else {\n          showSpanDropWarning();\n          client.recordDroppedEvent('before_send', 'span');\n        }\n      }\n      event.spans = processedSpans;\n    }\n\n    if (beforeSendTransaction) {\n      if (event.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = event.spans.length;\n        event.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(event, hint);\n    }\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, isParameterizedString, getClient, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/core';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } ,\n      ],\n    },\n    extra,\n  } ;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex) {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex) {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception) {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nfunction extractType(ex) {\n  const name = ex && ex.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n  if (isWebAssemblyException(ex) && Array.isArray(ex.message) && ex.message.length == 2) {\n    return ex.message[1];\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport { eventFromException, eventFromMessage, eventFromUnknownInput, exceptionFromError, extractMessage, extractType };\n//# sourceMappingURL=eventbuilder.js.map\n","import { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, withScope, addExceptionTypeValue, addExceptionMechanism, captureException } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn ).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function ( ...args) {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } ;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property ] = fn[property ];\n      }\n    }\n  } catch (e2) {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n  } catch (e3) {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { dsnToString, createEnvelope } from '@sentry/core';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, getSDKSource, applySdkMetadata, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","import { isError } from '../is.js';\nimport { fill, addNonEnumerableProperty } from '../object.js';\nimport { supportsNativeFetch } from '../supports.js';\nimport { timestampInSeconds } from '../time.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(\n  handler,\n  skipNativeFetchCheck,\n) {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(undefined, skipNativeFetchCheck));\n}\n\n/**\n * Add an instrumentation handler for long-lived fetch requests, like consuming server-sent events (SSE) via fetch.\n * The handler will resolve the request body and emit the actual `endTimestamp`, so that the\n * span can be updated accordingly.\n *\n * Only used internally\n * @hidden\n */\nfunction addFetchEndInstrumentationHandler(handler) {\n  const type = 'fetch-body-resolved';\n  addHandler(type, handler);\n  maybeInstrument(type, () => instrumentFetch(streamHandler));\n}\n\nfunction instrumentFetch(onFetchResolved, skipNativeFetchCheck = false) {\n  if (skipNativeFetchCheck && !supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      // We capture the error right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualError = new Error();\n\n      const { method, url } = parseFetchArgs(args);\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n        // // Adding the error to be able to fingerprint the failed fetch event in HttpClient instrumentation\n        virtualError,\n      };\n\n      // if there is no callback, fetch is instrumented directly\n      if (!onFetchResolved) {\n        triggerHandlers('fetch', {\n          ...handlerData,\n        });\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        async (response) => {\n          if (onFetchResolved) {\n            onFetchResolved(response);\n          } else {\n            triggerHandlers('fetch', {\n              ...handlerData,\n              endTimestamp: timestampInSeconds() * 1000,\n              response,\n            });\n          }\n\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          });\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualError.stack;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nasync function resolveResponse(res, onFinishedResolving) {\n  if (res && res.body) {\n    const body = res.body;\n    const responseReader = body.getReader();\n\n    // Define a maximum duration after which we just cancel\n    const maxFetchDurationTimeout = setTimeout(\n      () => {\n        body.cancel().then(null, () => {\n          // noop\n        });\n      },\n      90 * 1000, // 90s\n    );\n\n    let readingActive = true;\n    while (readingActive) {\n      let chunkTimeout;\n      try {\n        // abort reading if read op takes more than 5s\n        chunkTimeout = setTimeout(() => {\n          body.cancel().then(null, () => {\n            // noop on error\n          });\n        }, 5000);\n\n        // This .read() call will reject/throw when we abort due to timeouts through `body.cancel()`\n        const { done } = await responseReader.read();\n\n        clearTimeout(chunkTimeout);\n\n        if (done) {\n          onFinishedResolving();\n          readingActive = false;\n        }\n      } catch (error) {\n        readingActive = false;\n      } finally {\n        clearTimeout(chunkTimeout);\n      }\n    }\n\n    clearTimeout(maxFetchDurationTimeout);\n\n    responseReader.releaseLock();\n    body.cancel().then(null, () => {\n      // noop on error\n    });\n  }\n}\n\nfunction streamHandler(response) {\n  // clone response for awaiting stream\n  let clonedResponseForResolving;\n  try {\n    clonedResponseForResolving = response.clone();\n  } catch (e) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  resolveResponse(clonedResponseForResolving, () => {\n    triggerHandlers('fetch-body-resolved', {\n      endTimestamp: timestampInSeconds() * 1000,\n      response,\n    });\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=fetch.js.map\n","/**\n * Determine a breadcrumb's log level (only `warning` or `error`) based on an HTTP status code.\n */\nfunction getBreadcrumbLogLevelFromHttpStatusCode(statusCode) {\n  // NOTE: undefined defaults to 'info' in Sentry\n  if (statusCode === undefined) {\n    return undefined;\n  } else if (statusCode >= 400 && statusCode < 500) {\n    return 'warning';\n  } else if (statusCode >= 500) {\n    return 'error';\n  } else {\n    return undefined;\n  }\n}\n\nexport { getBreadcrumbLogLevelFromHttpStatusCode };\n//# sourceMappingURL=breadcrumb-log-level.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n *\n * @deprecated This function will be removed in the next major version.\n */\n// TODO(v9): Hoist this function into the places where we use it. (as it stands only react router v6 instrumentation)\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { addClickKeypressInstrumentationHandler, addXhrInstrumentationHandler, addHistoryInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { defineIntegration, addConsoleInstrumentationHandler, addFetchInstrumentationHandler, getClient, addBreadcrumb, getEventDescription, logger, htmlTreeAsString, getComponentName, severityLevelFromString, safeJoin, getBreadcrumbLogLevelFromHttpStatusCode, parseUrl } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable max-lines */\n\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const level = getBreadcrumbLogLevelFromHttpStatusCode(status_code);\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n        level,\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      const level = getBreadcrumbLogLevelFromHttpStatusCode(data.status_code);\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n          level,\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { breadcrumbsIntegration };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) ;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nconst browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original) {\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original) {\n  return function ( callback) {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target) {\n  const globalObject = WINDOW ;\n  const targetObj = globalObject[target];\n  const proto = targetObj && targetObj.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function ( eventName, fn, options) {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (e2) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener)\n\n {\n    return function ( eventName, fn, options) {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn ).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch (e) {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj) {\n  return typeof (obj ).handleEvent === 'function';\n}\n\nexport { browserApiErrorsIntegration };\n//# sourceMappingURL=browserapierrors.js.map\n","import { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { defineIntegration, logger, startSession, captureSession } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nconst browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          logger.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n\nexport { browserSessionIntegration };\n//# sourceMappingURL=browsersession.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  // Note: The reason we are doing window.onunhandledrejection instead of window.addEventListener('unhandledrejection')\n  // is that we are using this handler in the Loader Script, to handle buffered rejections consistently\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { defineIntegration, addGlobalErrorInstrumentationHandler, getClient, captureEvent, addGlobalUnhandledRejectionInstrumentationHandler, isPrimitive, isString, getLocationHref, UNKNOWN_FUNCTION, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client) {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error )) {\n      return (error ).reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error ) && 'reason' in (error ).detail) {\n      return (error ).detail.reason;\n    }\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event,\n  url,\n  line,\n  column,\n) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\nexport { globalHandlersIntegration };\n//# sourceMappingURL=globalhandlers.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nconst httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n\nexport { httpContextIntegration };\n//# sourceMappingURL=httpcontext.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { defineIntegration, applyAggregateErrorsToEvent } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\n/**\n * Aggregrate linked errors in an event.\n */\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\nexport { linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","import { createStackParser, UNKNOWN_FUNCTION } from '@sentry/core';\n\n// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) ;\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line) ;\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line) ;\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line) ;\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] ) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { forEachEnvelopeItem, envelopeItemTypeToDataCategory, createEnvelope, serializeEnvelope } from '../utils-hoist/envelope.js';\nimport { SentryError } from '../utils-hoist/error.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { makePromiseBuffer } from '../utils-hoist/promisebuffer.js';\nimport { isRateLimited, updateRateLimits } from '../utils-hoist/ratelimit.js';\nimport { resolvedSyncPromise } from '../utils-hoist/syncpromise.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { getNativeImplementation, clearCachedImplementation } from '@sentry-internal/browser-utils';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeImplementation('fetch'),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // TODO: This may need a `suppressTracing` call in the future when we switch the browser SDK to OTEL\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { inboundFiltersIntegration, functionToStringIntegration, dedupeIntegration, consoleSandbox, supportsFetch, logger, stackParserFromStackParserOptions, getIntegrationsToSetup, initAndBind, getCurrentScope, lastEventId, getReportDialogEndpoint, getClient } from '@sentry/core';\nimport { BrowserClient } from './client.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './helpers.js';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nimport { browserSessionIntegration } from './integrations/browsersession.js';\nimport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nimport { httpContextIntegration } from './integrations/httpcontext.js';\nimport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(options) {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  const integrations = [\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n  ];\n\n  // eslint-disable-next-line deprecation/deprecation\n  if (options.autoSessionTracking !== false) {\n    integrations.push(browserSessionIntegration());\n  }\n\n  return integrations;\n}\n\nfunction applyDefaultOptions(optionsArg = {}) {\n  const defaultOptions = {\n    defaultIntegrations: getDefaultIntegrations(optionsArg),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  // TODO: Instead of dropping just `defaultIntegrations`, we should simply\n  // call `dropUndefinedKeys` on the entire `optionsArg`.\n  // However, for this to work we need to adjust the `hasTracingEnabled()` logic\n  // first as it differentiates between `undefined` and the key not being in the object.\n  if (optionsArg.defaultIntegrations == null) {\n    delete optionsArg.defaultIntegrations;\n  }\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\nfunction shouldShowBrowserExtensionError() {\n  const windowWithMaybeExtension =\n    typeof WINDOW.window !== 'undefined' && (WINDOW );\n  if (!windowWithMaybeExtension) {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (WINDOW.location && WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:', 'safari-web-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  const isNWjs = typeof windowWithMaybeExtension.nw !== 'undefined';\n\n  return !!runtimeId && !isDedicatedExtensionPage && !isNWjs;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(browserOptions = {}) {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (!options.skipBrowserExtensionCheck && shouldShowBrowserExtensionError()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    if (!supportsFetch()) {\n      logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeFetchTransport,\n  };\n\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * All properties the report dialog supports\n */\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = lastEventId();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event) => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getClient();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog };\n//# sourceMappingURL=sdk.js.map\n","import { setContext, init as init$1 } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\nimport { version } from 'react';\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n  setContext('react', { version });\n  return init$1(opts);\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","/**\n * Returns an environment setting value determined by Vercel's `VERCEL_ENV` environment variable.\n *\n * @param isClient Flag to indicate whether to use the `NEXT_PUBLIC_` prefixed version of the environment variable.\n */\nfunction getVercelEnv(isClient) {\n  const vercelEnvVar = isClient ? process.env.NEXT_PUBLIC_VERCEL_ENV : process.env.VERCEL_ENV;\n  return vercelEnvVar ? `vercel-${vercelEnvVar}` : undefined;\n}\n\nexport { getVercelEnv };\n//# sourceMappingURL=getVercelEnv.js.map\n","import { isError } from '@sentry/core';\n\n/**\n * Determines whether input is a Next.js not-found error.\n * https://beta.nextjs.org/docs/api-reference/notfound#notfound\n */\nfunction isNotFoundNavigationError(subject) {\n  return (\n    isError(subject) &&\n    ['NEXT_NOT_FOUND', 'NEXT_HTTP_ERROR_FALLBACK;404'].includes(\n      (subject ).digest ,\n    )\n  );\n}\n\n/**\n * Determines whether input is a Next.js redirect error.\n * https://beta.nextjs.org/docs/api-reference/redirect#redirect\n */\nfunction isRedirectNavigationError(subject) {\n  return (\n    isError(subject) &&\n    typeof (subject ).digest === 'string' &&\n    (subject ).digest.startsWith('NEXT_REDIRECT;') // a redirect digest looks like \"NEXT_REDIRECT;[redirect path]\"\n  );\n}\n\nexport { isNotFoundNavigationError, isRedirectNavigationError };\n//# sourceMappingURL=nextNavigationErrorUtils.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getRootSpan, getActiveSpan } from '../utils/spanUtils.js';\n\n/**\n * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n * as the 4th parameter.\n */\nfunction setMeasurement(name, value, unit, activeSpan = getActiveSpan()) {\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n  if (rootSpan) {\n    DEBUG_BUILD && logger.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n    rootSpan.addEvent(name, {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit ,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nfunction timedEventsToMeasurements(events) {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] ;\n    const value = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] ;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n\nexport { setMeasurement, timedEventsToMeasurements };\n//# sourceMappingURL=measurement.js.map\n","import { isThenable } from '../utils-hoist/is.js';\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nfunction handleCallbackErrors\n\n(\n  fn,\n  onError,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFinally = () => {},\n) {\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection(\n  value,\n  onError,\n  onFinally,\n) {\n  if (isThenable(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n\nexport { handleCallbackErrors };\n//# sourceMappingURL=handleCallbackErrors.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { spanToJSON, spanIsSampled, getRootSpan } from '../utils/spanUtils.js';\n\n/**\n * Print a log message for a started span.\n */\nfunction logSpanStart(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >', parent_span_id: parentSpanId } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n\n  const sampled = spanIsSampled(span);\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const header = `[Tracing] Starting ${sampled ? 'sampled' : 'unsampled'} ${isRootSpan ? 'root ' : ''}span`;\n\n  const infoParts = [`op: ${op}`, `name: ${description}`, `ID: ${spanId}`];\n\n  if (parentSpanId) {\n    infoParts.push(`parent ID: ${parentSpanId}`);\n  }\n\n  if (!isRootSpan) {\n    const { op, description } = spanToJSON(rootSpan);\n    infoParts.push(`root ID: ${rootSpan.spanContext().spanId}`);\n    if (op) {\n      infoParts.push(`root op: ${op}`);\n    }\n    if (description) {\n      infoParts.push(`root description: ${description}`);\n    }\n  }\n\n  logger.log(`${header}\n  ${infoParts.join('\\n  ')}`);\n}\n\n/**\n * Print a log message for an ended span.\n */\nfunction logSpanEnd(span) {\n  if (!DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >' } = spanToJSON(span);\n  const { spanId } = span.spanContext();\n  const rootSpan = getRootSpan(span);\n  const isRootSpan = rootSpan === span;\n\n  const msg = `[Tracing] Finishing \"${op}\" ${isRootSpan ? 'root ' : ''}span \"${description}\" with ID ${spanId}`;\n  logger.log(msg);\n}\n\nexport { logSpanEnd, logSpanStart };\n//# sourceMappingURL=logSpans.js.map\n","import { getIsolationScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { parseSampleRate } from '../utils/parseSampleRate.js';\n\n/**\n * Makes a sampling decision for the given options.\n *\n * Called every time a root span is created. Only root spans which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n */\nfunction sampleSpan(\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    return [false];\n  }\n\n  // Casting this from unknown, as the type of `sdkProcessingMetadata` is only changed in v9 and `normalizedRequest` is set in SentryHttpInstrumentation\n  const normalizedRequest = getIsolationScope().getScopeData().sdkProcessingMetadata\n    .normalizedRequest ;\n\n  const enhancedSamplingContext = {\n    ...samplingContext,\n    normalizedRequest: samplingContext.normalizedRequest || normalizedRequest,\n  };\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(enhancedSamplingContext);\n  } else if (enhancedSamplingContext.parentSampled !== undefined) {\n    sampleRate = enhancedSamplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get.\n  // (The only valid values are booleans or numbers between 0 and 1.)\n  const parsedSampleRate = parseSampleRate(sampleRate);\n\n  if (parsedSampleRate === undefined) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    return [false];\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!parsedSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const shouldSample = Math.random() < parsedSampleRate;\n\n  // if we're not going to keep it, we're done\n  if (!shouldSample) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  return [true, parsedSampleRate];\n}\n\nexport { sampleSpan };\n//# sourceMappingURL=sampling.js.map\n","import { generateTraceId, generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { TRACE_FLAG_NONE } from '../utils/spanUtils.js';\n\n/**\n * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n */\nclass SentryNonRecordingSpan  {\n\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    return {\n      spanId: this._spanId,\n      traceId: this._traceId,\n      traceFlags: TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n   end(_timestamp) {}\n\n  /** @inheritdoc */\n   setAttribute(_key, _value) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(_values) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setStatus(_status) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   updateName(_name) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return false;\n  }\n\n  /** @inheritdoc */\n   addEvent(\n    _name,\n    _attributesOrStartTime,\n    _startTime,\n  ) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLink(_link) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n}\n\nexport { SentryNonRecordingSpan };\n//# sourceMappingURL=sentryNonRecordingSpan.js.map\n","import { addNonEnumerableProperty } from '../utils-hoist/object.js';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan };\n//# sourceMappingURL=utils.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { createSpanEnvelope } from '../envelope.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { dropUndefinedKeys } from '../utils-hoist/object.js';\nimport { generateTraceId, generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { TRACE_FLAG_SAMPLED, TRACE_FLAG_NONE, spanTimeInputToSeconds, getStatusMessage, getRootSpan, spanToJSON, getSpanDescendants, spanToTransactionTraceContext } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { logSpanEnd } from './logSpans.js';\nimport { timedEventsToMeasurements } from './measurement.js';\nimport { getCapturedScopesOnSpan } from './utils.js';\n\nconst MAX_SPAN_COUNT = 1000;\n\n/**\n * Span contains all data about a span\n */\nclass SentrySpan  {\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /** The timed events added to this span. */\n\n  /** if true, treat span as a standalone span (not part of a transaction) */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startSpan()`\n   * or other span methods.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || generateTraceId();\n    this._spanId = spanContext.spanId || generateSpanId();\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    this._name = spanContext.name;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n\n    this._events = [];\n\n    this._isStandaloneSpan = spanContext.isStandalone;\n\n    // If the span is already ended, ensure we finalize the span immediately\n    if (this._endTime) {\n      this._onSpanEnded();\n    }\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLink(_link) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   addLinks(_links) {\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but it is needed for being compliant with the OTEL Span interface.\n   *\n   * @hidden\n   * @internal\n   */\n   recordException(_exception, _time) {\n    // noop\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n    return this;\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for browser tracing where we want to adjust the start time afterwards.\n   * USE THIS WITH CAUTION!\n   *\n   * @hidden\n   * @internal\n   */\n   updateStartTime(timeInput) {\n    this._startTime = spanTimeInputToSeconds(timeInput);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'custom');\n    return this;\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n    logSpanEnd(this);\n\n    this._onSpanEnded();\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return dropUndefinedKeys({\n      data: this._attributes,\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: getStatusMessage(this._status),\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._attributes[SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] ,\n      measurements: timedEventsToMeasurements(this._events),\n      is_segment: (this._isStandaloneSpan && getRootSpan(this) === this) || undefined,\n      segment_id: this._isStandaloneSpan ? getRootSpan(this).spanContext().spanId : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * @inheritdoc\n   */\n   addEvent(\n    name,\n    attributesOrStartTime,\n    startTime,\n  ) {\n    DEBUG_BUILD && logger.log('[Tracing] Adding an event to span:', name);\n\n    const time = isSpanTimeInput(attributesOrStartTime) ? attributesOrStartTime : startTime || timestampInSeconds();\n    const attributes = isSpanTimeInput(attributesOrStartTime) ? {} : attributesOrStartTime || {};\n\n    const event = {\n      name,\n      time: spanTimeInputToSeconds(time),\n      attributes,\n    };\n\n    this._events.push(event);\n\n    return this;\n  }\n\n  /**\n   * This method should generally not be used,\n   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.\n   * USE THIS WITH CAUTION!\n   * @internal\n   * @hidden\n   * @experimental\n   */\n   isStandaloneSpan() {\n    return !!this._isStandaloneSpan;\n  }\n\n  /** Emit `spanEnd` when the span is ended. */\n   _onSpanEnded() {\n    const client = getClient();\n    if (client) {\n      client.emit('spanEnd', this);\n    }\n\n    // A segment span is basically the root span of a local span tree.\n    // So for now, this is either what we previously refer to as the root span,\n    // or a standalone span.\n    const isSegmentSpan = this._isStandaloneSpan || this === getRootSpan(this);\n\n    if (!isSegmentSpan) {\n      return;\n    }\n\n    // if this is a standalone span, we send it immediately\n    if (this._isStandaloneSpan) {\n      if (this._sampled) {\n        sendSpanEnvelope(createSpanEnvelope([this], client));\n      } else {\n        DEBUG_BUILD &&\n          logger.log('[Tracing] Discarding standalone span because its trace was not chosen to be sampled.');\n        if (client) {\n          client.recordDroppedEvent('sample_rate', 'span');\n        }\n      }\n      return;\n    }\n\n    const transactionEvent = this._convertSpanToTransaction();\n    if (transactionEvent) {\n      const scope = getCapturedScopesOnSpan(this).scope || getCurrentScope();\n      scope.captureEvent(transactionEvent);\n    }\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _convertSpanToTransaction() {\n    // We can only convert finished spans\n    if (!isFullFinishedSpan(spanToJSON(this))) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n    const scope = capturedSpanScope || getCurrentScope();\n    const client = scope.getClient() || getClient();\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // The transaction span itself as well as any potential standalone spans should be filtered out\n    const finishedSpans = getSpanDescendants(this).filter(span => span !== this && !isStandaloneSpan(span));\n\n    const spans = finishedSpans.map(span => spanToJSON(span)).filter(isFullFinishedSpan);\n\n    const source = this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ;\n\n    // remove internal root span attributes we don't need to send.\n    /* eslint-disable @typescript-eslint/no-dynamic-delete */\n    delete this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    spans.forEach(span => {\n      span.data && delete span.data[SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME];\n    });\n    // eslint-enabled-next-line @typescript-eslint/no-dynamic-delete\n\n    const transaction = {\n      contexts: {\n        trace: spanToTransactionTraceContext(this),\n      },\n      spans:\n        // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here\n        // we do not use spans anymore after this point\n        spans.length > MAX_SPAN_COUNT\n          ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n          : spans,\n      start_timestamp: this._startTime,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const measurements = timedEventsToMeasurements(this._events);\n    const hasMeasurements = measurements && Object.keys(measurements).length;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction event',\n          JSON.stringify(measurements, undefined, 2),\n        );\n      transaction.measurements = measurements;\n    }\n\n    return transaction;\n  }\n}\n\nfunction isSpanTimeInput(value) {\n  return (value && typeof value === 'number') || value instanceof Date || Array.isArray(value);\n}\n\n// We want to filter out any incomplete SpanJSON objects\nfunction isFullFinishedSpan(input) {\n  return !!input.start_timestamp && !!input.timestamp && !!input.span_id && !!input.trace_id;\n}\n\n/** `SentrySpan`s can be sent as a standalone span rather than belonging to a transaction */\nfunction isStandaloneSpan(span) {\n  return span instanceof SentrySpan && span.isStandaloneSpan();\n}\n\n/**\n * Sends a `SpanEnvelope`.\n *\n * Note: If the envelope's spans are dropped, e.g. via `beforeSendSpan`,\n * the envelope will not be sent either.\n */\nfunction sendSpanEnvelope(envelope) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const spanItems = envelope[1];\n  if (!spanItems || spanItems.length === 0) {\n    client.recordDroppedEvent('before_send', 'span');\n    return;\n  }\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(envelope);\n}\n\nexport { SentrySpan };\n//# sourceMappingURL=sentrySpan.js.map\n","import { getMainCarrier } from '../carrier.js';\nimport { withScope, getCurrentScope, getIsolationScope, getClient } from '../currentScopes.js';\nimport { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { generateTraceId } from '../utils-hoist/propagationContext.js';\nimport { propagationContextFromHeaders } from '../utils-hoist/tracing.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { _setSpanForScope, _getSpanForScope } from '../utils/spanOnScope.js';\nimport { spanToJSON, addChildSpanToSpan, spanIsSampled, spanTimeInputToSeconds, getRootSpan } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan, freezeDscOnSpan } from './dynamicSamplingContext.js';\nimport { logSpanStart } from './logSpans.js';\nimport { sampleSpan } from './sampling.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SentrySpan } from './sentrySpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { setCapturedScopesOnSpan } from './utils.js';\n\nconst SUPPRESS_TRACING_KEY = '__SENTRY_SUPPRESS_TRACING__';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpan(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpan) {\n    return acs.startSpan(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  return withScope(options.scope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n        () => activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpanManual(options, callback) {\n  const acs = getAcs();\n  if (acs.startSpanManual) {\n    return acs.startSpanManual(options, callback);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  return withScope(options.scope, () => {\n    // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n    const wrapper = getActiveSpanWrapper(customParentSpan);\n\n    return wrapper(() => {\n      const scope = getCurrentScope();\n      const parentSpan = getParentSpan(scope);\n\n      const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? new SentryNonRecordingSpan()\n        : createChildOrRootSpan({\n            parentSpan,\n            spanArguments,\n            forceTransaction,\n            scope,\n          });\n\n      _setSpanForScope(scope, activeSpan);\n\n      function finishAndSetSpan() {\n        activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          const { status } = spanToJSON(activeSpan);\n          if (activeSpan.isRecording() && (!status || status === 'ok')) {\n            activeSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startInactiveSpan(options) {\n  const acs = getAcs();\n  if (acs.startInactiveSpan) {\n    return acs.startInactiveSpan(options);\n  }\n\n  const spanArguments = parseSentrySpanArguments(options);\n  const { forceTransaction, parentSpan: customParentSpan } = options;\n\n  // If `options.scope` is defined, we use this as as a wrapper,\n  // If `options.parentSpan` is defined, we want to wrap the callback in `withActiveSpan`\n  const wrapper = options.scope\n    ? (callback) => withScope(options.scope, callback)\n    : customParentSpan !== undefined\n      ? (callback) => withActiveSpan(customParentSpan, callback)\n      : (callback) => callback();\n\n  return wrapper(() => {\n    const scope = getCurrentScope();\n    const parentSpan = getParentSpan(scope);\n\n    const shouldSkipSpan = options.onlyIfParent && !parentSpan;\n\n    if (shouldSkipSpan) {\n      return new SentryNonRecordingSpan();\n    }\n\n    return createChildOrRootSpan({\n      parentSpan,\n      spanArguments,\n      forceTransaction,\n      scope,\n    });\n  });\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n */\nconst continueTrace = (\n  options\n\n,\n  callback,\n) => {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.continueTrace) {\n    return acs.continueTrace(options, callback);\n  }\n\n  const { sentryTrace, baggage } = options;\n\n  return withScope(scope => {\n    const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n    scope.setPropagationContext(propagationContext);\n    return callback();\n  });\n};\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will not be attached to a parent span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  const acs = getAcs();\n  if (acs.withActiveSpan) {\n    return acs.withActiveSpan(span, callback);\n  }\n\n  return withScope(scope => {\n    _setSpanForScope(scope, span || undefined);\n    return callback(scope);\n  });\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nfunction suppressTracing(callback) {\n  const acs = getAcs();\n\n  if (acs.suppressTracing) {\n    return acs.suppressTracing(callback);\n  }\n\n  return withScope(scope => {\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: true });\n    return callback();\n  });\n}\n\n/**\n * Starts a new trace for the duration of the provided callback. Spans started within the\n * callback will be part of the new trace instead of a potentially previously started trace.\n *\n * Important: Only use this function if you want to override the default trace lifetime and\n * propagation mechanism of the SDK for the duration and scope of the provided callback.\n * The newly created trace will also be the root of a new distributed trace, for example if\n * you make http requests within the callback.\n * This function might be useful if the operation you want to instrument should not be part\n * of a potentially ongoing trace.\n *\n * Default behavior:\n * - Server-side: A new trace is started for each incoming request.\n * - Browser: A new trace is started for each page our route. Navigating to a new route\n *            or page will automatically create a new trace.\n */\nfunction startNewTrace(callback) {\n  return withScope(scope => {\n    scope.setPropagationContext({ traceId: generateTraceId() });\n    DEBUG_BUILD && logger.info(`Starting a new trace with id ${scope.getPropagationContext().traceId}`);\n    return withActiveSpan(null, callback);\n  });\n}\n\nfunction createChildOrRootSpan({\n  parentSpan,\n  spanArguments,\n  forceTransaction,\n  scope,\n}\n\n) {\n  if (!hasTracingEnabled()) {\n    return new SentryNonRecordingSpan();\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    span = _startChildSpan(parentSpan, scope, spanArguments);\n    addChildSpanToSpan(parentSpan, span);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const parentSampled = spanIsSampled(parentSpan);\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    freezeDscOnSpan(span, dsc);\n  } else {\n    const {\n      traceId,\n      dsc,\n      parentSpanId,\n      sampled: parentSampled,\n    } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanArguments,\n      },\n      scope,\n      parentSampled,\n    );\n\n    if (dsc) {\n      freezeDscOnSpan(span, dsc);\n    }\n  }\n\n  logSpanStart(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to SentrySpanArguments.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n */\nfunction parseSentrySpanArguments(options) {\n  const exp = options.experimental || {};\n  const initialCtx = {\n    isStandalone: exp.standalone,\n    ...options,\n  };\n\n  if (options.startTime) {\n    const ctx = { ...initialCtx };\n    ctx.startTimestamp = spanTimeInputToSeconds(options.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return initialCtx;\n}\n\nfunction getAcs() {\n  const carrier = getMainCarrier();\n  return getAsyncContextStrategy(carrier);\n}\n\nfunction _startRootSpan(spanArguments, scope, parentSampled) {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const { name = '', attributes } = spanArguments;\n  const [sampled, sampleRate] = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY]\n    ? [false]\n    : sampleSpan(options, {\n        name,\n        parentSampled,\n        attributes,\n        transactionContext: {\n          name,\n          parentSampled,\n        },\n      });\n\n  const rootSpan = new SentrySpan({\n    ...spanArguments,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n      ...spanArguments.attributes,\n    },\n    sampled,\n  });\n  if (sampleRate !== undefined) {\n    rootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  if (client) {\n    client.emit('spanStart', rootSpan);\n  }\n\n  return rootSpan;\n}\n\n/**\n * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n * This inherits the sampling decision from the parent span.\n */\nfunction _startChildSpan(parentSpan, scope, spanArguments) {\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY] ? false : spanIsSampled(parentSpan);\n\n  const childSpan = sampled\n    ? new SentrySpan({\n        ...spanArguments,\n        parentSpanId: spanId,\n        traceId,\n        sampled,\n      })\n    : new SentryNonRecordingSpan({ traceId });\n\n  addChildSpanToSpan(parentSpan, childSpan);\n\n  const client = getClient();\n  if (client) {\n    client.emit('spanStart', childSpan);\n    // If it has an endTimestamp, it's already ended\n    if (spanArguments.endTimestamp) {\n      client.emit('spanEnd', childSpan);\n    }\n  }\n\n  return childSpan;\n}\n\nfunction getParentSpan(scope) {\n  const span = _getSpanForScope(scope) ;\n\n  if (!span) {\n    return undefined;\n  }\n\n  const client = getClient();\n  const options = client ? client.getOptions() : {};\n  if (options.parentSpanIsAlwaysRootSpan) {\n    return getRootSpan(span) ;\n  }\n\n  return span;\n}\n\nfunction getActiveSpanWrapper(parentSpan) {\n  return parentSpan !== undefined\n    ? (callback) => {\n        return withActiveSpan(parentSpan, callback);\n      }\n    : (callback) => callback();\n}\n\nexport { continueTrace, startInactiveSpan, startNewTrace, startSpan, startSpanManual, suppressTracing, withActiveSpan };\n//# sourceMappingURL=trace.js.map\n","import { spanToJSON, withActiveSpan, startInactiveSpan, getClient, getCurrentScope } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/**\n * Starts an inactive, standalone span used to send web vital values to Sentry.\n * DO NOT use this for arbitrary spans, as these spans require special handling\n * during ingestion to extract metrics.\n *\n * This function adds a bunch of attributes and data to the span that's shared\n * by all web vital standalone spans. However, you need to take care of adding\n * the actual web vital value as an event to the span. Also, you need to assign\n * a transaction name and some other values that are specific to the web vital.\n *\n * Ultimately, you also need to take care of ending the span to send it off.\n *\n * @param options\n *\n * @returns an inactive, standalone and NOT YET ended span\n */\nfunction startStandaloneWebVitalSpan(options) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const { name, transaction, attributes: passedAttributes, startTime } = options;\n\n  const { release, environment } = client.getOptions();\n  // We need to get the replay, user, and activeTransaction from the current scope\n  // so that we can associate replay id, profile id, and a user display to the span\n  const replay = client.getIntegrationByName('Replay');\n  const replayId = replay && replay.getReplayId();\n\n  const scope = getCurrentScope();\n\n  const user = scope.getUser();\n  const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n\n  let profileId;\n  try {\n    // @ts-expect-error skip optional chaining to save bundle size with try catch\n    profileId = scope.getScopeData().contexts.profile.profile_id;\n  } catch (e) {\n    // do nothing\n  }\n\n  const attributes = {\n    release,\n    environment,\n\n    user: userDisplay || undefined,\n    profile_id: profileId || undefined,\n    replay_id: replayId || undefined,\n\n    transaction,\n\n    // Web vital score calculation relies on the user agent to account for different\n    // browsers setting different thresholds for what is considered a good/meh/bad value.\n    // For example: Chrome vs. Chrome Mobile\n    'user_agent.original': WINDOW.navigator && WINDOW.navigator.userAgent,\n\n    ...passedAttributes,\n  };\n\n  return startInactiveSpan({\n    name,\n    attributes,\n    startTime,\n    experimental: {\n      standalone: true,\n    },\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') ;\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] ;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nexport { extractNetworkProtocol, getBrowserPerformanceAPI, isMeasurementValue, msToSec, startAndEndSpan, startStandaloneWebVitalSpan };\n//# sourceMappingURL=utils.js.map\n","import { getClient, getActiveSpan, getRootSpan, spanToJSON, logger, browserPerformanceTimeOrigin, getCurrentScope, htmlTreeAsString, dropUndefinedKeys, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { addClsInstrumentationHandler } from './instrument.js';\nimport { msToSec, startStandaloneWebVitalSpan } from './utils.js';\nimport { onHidden } from './web-vitals/lib/onHidden.js';\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value once\n *\n * - the page visibility is hidden\n * - a navigation span is started (to stop CLS measurement for SPA soft navigations)\n *\n * Once either of these events triggers, the CLS value is sent as a standalone span and we stop\n * measuring CLS.\n */\nfunction trackClsAsStandaloneSpan() {\n  let standaloneCLsValue = 0;\n  let standaloneClsEntry;\n  let pageloadSpanId;\n\n  if (!supportsLayoutShift()) {\n    return;\n  }\n\n  let sentSpan = false;\n  function _collectClsOnce() {\n    if (sentSpan) {\n      return;\n    }\n    sentSpan = true;\n    if (pageloadSpanId) {\n      sendStandaloneClsSpan(standaloneCLsValue, standaloneClsEntry, pageloadSpanId);\n    }\n    cleanupClsHandler();\n  }\n\n  const cleanupClsHandler = addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    standaloneCLsValue = metric.value;\n    standaloneClsEntry = entry;\n  }, true);\n\n  // use pagehide event from web-vitals\n  onHidden(() => {\n    _collectClsOnce();\n  });\n\n  // Since the call chain of this function is synchronous and evaluates before the SDK client is created,\n  // we need to wait with subscribing to a client hook until the client is created. Therefore, we defer\n  // to the next tick after the SDK setup.\n  setTimeout(() => {\n    const client = getClient();\n\n    if (!client) {\n      return;\n    }\n\n    const unsubscribeStartNavigation = client.on('startNavigationSpan', () => {\n      _collectClsOnce();\n      unsubscribeStartNavigation && unsubscribeStartNavigation();\n    });\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    const spanJSON = rootSpan && spanToJSON(rootSpan);\n    if (spanJSON && spanJSON.op === 'pageload') {\n      pageloadSpanId = rootSpan.spanContext().spanId;\n    }\n  }, 0);\n}\n\nfunction sendStandaloneClsSpan(clsValue, entry, pageloadSpanId) {\n  DEBUG_BUILD && logger.log(`Sending CLS span (${clsValue})`);\n\n  const startTime = msToSec((browserPerformanceTimeOrigin || 0) + ((entry && entry.startTime) || 0));\n  const routeName = getCurrentScope().getScopeData().transactionName;\n\n  const name = entry ? htmlTreeAsString(entry.sources[0] && entry.sources[0].node) : 'Layout shift';\n\n  const attributes = dropUndefinedKeys({\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.cls',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.cls',\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: (entry && entry.duration) || 0,\n    // attach the pageload span id to the CLS span so that we can link them in the UI\n    'sentry.pageload.span_id': pageloadSpanId,\n  });\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('cls', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: '',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: clsValue,\n    });\n\n    // LayoutShift performance entries always have a duration of 0, so we don't need to add `entry.duration` here\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration\n    span.end(startTime);\n  }\n}\n\nfunction supportsLayoutShift() {\n  try {\n    return PerformanceObserver.supportedEntryTypes.includes('layout-shift');\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { trackClsAsStandaloneSpan };\n//# sourceMappingURL=cls.js.map\n","import { browserPerformanceTimeOrigin, getActiveSpan, spanToJSON, setMeasurement, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, parseUrl, htmlTreeAsString, getComponentName } from '@sentry/core';\nimport { WINDOW } from '../types.js';\nimport { trackClsAsStandaloneSpan } from './cls.js';\nimport { addPerformanceInstrumentationHandler, addClsInstrumentationHandler, addLcpInstrumentationHandler, addFidInstrumentationHandler, addTtfbInstrumentationHandler } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startAndEndSpan, extractNetworkProtocol, isMeasurementValue } from './utils.js';\nimport { getActivationStart } from './web-vitals/lib/getActivationStart.js';\nimport { getNavigationEntry } from './web-vitals/lib/getNavigationEntry.js';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher.js';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals({ recordClsStandaloneSpans }) {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCleanupCallback = _trackFID();\n    const lcpCleanupCallback = _trackLCP();\n    const ttfbCleanupCallback = _trackTtfb();\n    const clsCleanupCallback = recordClsStandaloneSpans ? trackClsAsStandaloneSpan() : _trackCLS();\n\n    return () => {\n      fidCleanupCallback();\n      lcpCleanupCallback();\n      ttfbCleanupCallback();\n      clsCleanupCallback && clsCleanupCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n\n    const { op: parentOp, start_timestamp: parentStartTimestamp } = spanToJSON(parent);\n\n    for (const entry of entries) {\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n        // Skip adding a span if the long task started before the navigation started.\n        // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n        // time, potentially skewing the duration of the actual navigation as reported via our\n        // routing instrumentations\n        continue;\n      }\n\n      startAndEndSpan(parent, startTime, startTime + duration, {\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n    }\n  });\n}\n\n/**\n * Start tracking long animation frames.\n */\nfunction startTrackingLongAnimationFrames() {\n  // NOTE: the current web-vitals version (3.5.2) does not support long-animation-frame, so\n  // we directly observe `long-animation-frame` events instead of through the web-vitals\n  // `observe` helper function.\n  const observer = new PerformanceObserver(list => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n    for (const entry of list.getEntries() ) {\n      if (!entry.scripts[0]) {\n        continue;\n      }\n\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n\n      const { start_timestamp: parentStartTimestamp, op: parentOp } = spanToJSON(parent);\n\n      if (parentOp === 'navigation' && parentStartTimestamp && startTime < parentStartTimestamp) {\n        // Skip adding the span if the long animation frame started before the navigation started.\n        // `startAndEndSpan` will otherwise adjust the parent's start time to the span's start\n        // time, potentially skewing the duration of the actual navigation as reported via our\n        // routing instrumentations\n        continue;\n      }\n\n      const duration = msToSec(entry.duration);\n\n      const attributes = {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      };\n\n      const initialScript = entry.scripts[0];\n      const { invoker, invokerType, sourceURL, sourceFunctionName, sourceCharPosition } = initialScript;\n      attributes['browser.script.invoker'] = invoker;\n      attributes['browser.script.invoker_type'] = invokerType;\n      if (sourceURL) {\n        attributes['code.filepath'] = sourceURL;\n      }\n      if (sourceFunctionName) {\n        attributes['code.function'] = sourceFunctionName;\n      }\n      if (sourceCharPosition !== -1) {\n        attributes['browser.script.source_char_position'] = sourceCharPosition;\n      }\n\n      startAndEndSpan(parent, startTime, startTime + duration, {\n        name: 'Main UI thread blocked',\n        op: 'ui.long-animation-frame',\n        attributes,\n      });\n    }\n  });\n\n  observer.observe({ type: 'long-animation-frame', buffered: true });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    const parent = getActiveSpan();\n    if (!parent) {\n      return;\n    }\n    for (const entry of entries) {\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const spanOptions = {\n          name: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        startAndEndSpan(parent, startTime, startTime + duration, spanOptions);\n      }\n    }\n  });\n}\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value and last entry\n * to the `_measurements` object which ultimately is applied to the pageload span's measurements.\n */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(span, options) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(span);\n\n  performanceEntries.slice(_performanceCursor).forEach(entry => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(\n      // Inexplicably, Chrome sometimes emits a negative duration. We need to work around this.\n      // There is a SO post attempting to explain this, but it leaves one with open questions: https://stackoverflow.com/questions/23191918/peformance-getentries-and-negative-duration-display\n      // The way we clamp the value is probably not accurate, since we have observed this happen for things that may take a while to load, like for example the replay worker.\n      // TODO: Investigate why this happens and how to properly mitigate. For now, this is a workaround to prevent transactions being dropped due to negative duration spans.\n      Math.max(0, entry.duration),\n    );\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry , timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(span, entry , entry.name, startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      startAndEndSpan(span, fidMark.value, fidMark.value + msToSec(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    // TODO: Check if the first condition is still necessary: `onCLS` already only fires once `onFCP` was called.\n    if (!('fcp' in _measurements) || !options.recordClsOnPageloadSpan) {\n      delete _measurements.cls;\n    }\n\n    Object.entries(_measurements).forEach(([measurementName, measurement]) => {\n      setMeasurement(measurementName, measurement.value, measurement.unit);\n    });\n\n    // Set timeOrigin which denotes the timestamp which to base the LCP/FCP/FP/TTFB measurements on\n    span.setAttribute('performance.timeOrigin', timeOrigin);\n\n    // In prerendering scenarios, where a page might be prefetched and pre-rendered before the user clicks the link,\n    // the navigation starts earlier than when the user clicks it. Web Vitals should always be based on the\n    // user-perceived time, so they are not reported from the actual start of the navigation, but rather from the\n    // time where the user actively started the navigation, for example by clicking a link.\n    // This is user action is called \"activation\" and the time between navigation and activation is stored in\n    // the `activationStart` attribute of the \"navigation\" PerformanceEntry.\n    span.setAttribute('performance.activationStart', getActivationStart());\n\n    _setWebVitalAttributes(span);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/**\n * Create measure related spans.\n * Exported only for tests.\n */\nfunction _addMeasureSpans(\n  span,\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const navEntry = getNavigationEntry(false);\n  const requestTime = msToSec(navEntry ? navEntry.requestStart : 0);\n  // Because performance.measure accepts arbitrary timestamps it can produce\n  // spans that happen before the browser even makes a request for the page.\n  //\n  // An example of this is the automatically generated Next.js-before-hydration\n  // spans created by the Next.js framework.\n  //\n  // To prevent this we will pin the start timestamp to the request start time\n  // This does make duration inaccurate, so if this does happen, we will add\n  // an attribute to the span\n  const measureStartTimestamp = timeOrigin + Math.max(startTime, requestTime);\n  const startTimeStamp = timeOrigin + startTime;\n  const measureEndTimestamp = startTimeStamp + duration;\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n\n  if (measureStartTimestamp !== startTimeStamp) {\n    attributes['sentry.browser.measure_happened_before_request'] = true;\n    attributes['sentry.browser.measure_start_time'] = measureStartTimestamp;\n  }\n\n  startAndEndSpan(span, measureStartTimestamp, measureEndTimestamp, {\n    name: entry.name ,\n    op: entry.entryType ,\n    attributes,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\nfunction _addNavigationSpans(span, entry, timeOrigin) {\n  (['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'] ).forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span,\n  entry,\n  event,\n  timeOrigin,\n  name = event,\n) {\n  const eventEnd = _getEndPropertyNameForNavigationTiming(event) ;\n  const end = entry[eventEnd];\n  const start = entry[`${event}Start`];\n  if (!start || !end) {\n    return;\n  }\n  startAndEndSpan(span, timeOrigin + msToSec(start), timeOrigin + msToSec(end), {\n    op: `browser.${name}`,\n    name: entry.name,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n    },\n  });\n}\n\nfunction _getEndPropertyNameForNavigationTiming(event) {\n  if (event === 'secureConnection') {\n    return 'connectEnd';\n  }\n  if (event === 'fetch') {\n    return 'domainLookupStart';\n  }\n  return `${event}End`;\n}\n\n/** Create request and response related spans */\nfunction _addRequest(span, entry, timeOrigin) {\n  const requestStartTimestamp = timeOrigin + msToSec(entry.requestStart );\n  const responseEndTimestamp = timeOrigin + msToSec(entry.responseEnd );\n  const responseStartTimestamp = timeOrigin + msToSec(entry.responseStart );\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    startAndEndSpan(span, requestStartTimestamp, responseEndTimestamp, {\n      op: 'browser.request',\n      name: entry.name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n\n    startAndEndSpan(span, responseStartTimestamp, responseEndTimestamp, {\n      op: 'browser.response',\n      name: entry.name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n  }\n}\n\n/**\n * Create resource-related spans.\n * Exported only for tests.\n */\nfunction _addResourceSpans(\n  span,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  // `deliveryType` is experimental and does not exist everywhere\n  const deliveryType = (entry ).deliveryType;\n  if (deliveryType != null) {\n    attributes['http.response_delivery_type'] = deliveryType;\n  }\n\n  // Types do not reflect this property yet\n  const renderBlockingStatus = (entry )\n    .renderBlockingStatus;\n  if (renderBlockingStatus) {\n    attributes['resource.render_blocking_status'] = renderBlockingStatus;\n  }\n\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const { name, version } = extractNetworkProtocol(entry.nextHopProtocol);\n  attributes['network.protocol.name'] = name;\n  attributes['network.protocol.version'] = version;\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  startAndEndSpan(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(WINDOW.location.origin, ''),\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _setWebVitalAttributes(span) {\n  if (_lcpEntry) {\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    if (_lcpEntry.loadTime != null) {\n      // loadTime is the time of LCP that's related to receiving the LCP element response..\n      span.setAttribute('lcp.loadTime', _lcpEntry.loadTime);\n    }\n\n    if (_lcpEntry.renderTime != null) {\n      // renderTime is loadTime + rendering time\n      // it's 0 if the LCP element is loaded from a 3rd party origin that doesn't send the\n      // `Timing-Allow-Origin` header.\n      span.setAttribute('lcp.renderTime', _lcpEntry.renderTime);\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = getNavigationEntry(false);\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingInteractions, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=browserMetrics.js.map\n","import { browserPerformanceTimeOrigin, getActiveSpan, getRootSpan, spanToJSON, getCurrentScope, htmlTreeAsString, dropUndefinedKeys, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '@sentry/core';\nimport { addInpInstrumentationHandler, addPerformanceInstrumentationHandler, isPerformanceEventTiming } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startStandaloneWebVitalSpan } from './utils.js';\n\nconst LAST_INTERACTIONS = [];\nconst INTERACTIONS_SPAN_MAP = new Map();\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP();\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP() {\n  return addInpInstrumentationHandler(({ metric }) => {\n    if (metric.value == undefined) {\n      return;\n    }\n\n    const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n    if (!entry) {\n      return;\n    }\n\n    const { interactionId } = entry;\n    const interactionType = INP_ENTRY_MAP[entry.name];\n\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n    // We first try to lookup the span from our INTERACTIONS_SPAN_MAP,\n    // where we cache the route per interactionId\n    const cachedSpan = interactionId != null ? INTERACTIONS_SPAN_MAP.get(interactionId) : undefined;\n\n    const spanToUse = cachedSpan || rootSpan;\n\n    // Else, we try to use the active span.\n    // Finally, we fall back to look at the transactionName on the scope\n    const routeName = spanToUse ? spanToJSON(spanToUse).description : getCurrentScope().getScopeData().transactionName;\n\n    const name = htmlTreeAsString(entry.target);\n    const attributes = dropUndefinedKeys({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: `ui.interaction.${interactionType}`,\n      [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry.duration,\n    });\n\n    const span = startStandaloneWebVitalSpan({\n      name,\n      transaction: routeName,\n      attributes,\n      startTime,\n    });\n\n    if (span) {\n      span.addEvent('inp', {\n        [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n        [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n      });\n\n      span.end(startTime + duration);\n    }\n  });\n}\n\n/**\n * Register a listener to cache route information for INP interactions.\n * TODO(v9): `latestRoute` no longer needs to be passed in and will be removed in v9.\n */\nfunction registerInpInteractionListener(_latestRoute) {\n  const handleEntries = ({ entries }) => {\n    const activeSpan = getActiveSpan();\n    const activeRootSpan = activeSpan && getRootSpan(activeSpan);\n\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !activeRootSpan) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_SPAN_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() ;\n        INTERACTIONS_SPAN_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the span for this interaction\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_SPAN_MAP.set(interactionId, activeRootSpan);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n\nexport { registerInpInteractionListener, startTrackingINP };\n//# sourceMappingURL=inp.js.map\n","import { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '../semanticAttributes.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { _setSpanForScope } from '../utils/spanOnScope.js';\nimport { getActiveSpan, spanTimeInputToSeconds, getSpanDescendants, spanToJSON, removeChildSpanFromSpan } from '../utils/spanUtils.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { startInactiveSpan } from './trace.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  childSpanTimeout: 15000,\n};\n\nconst FINISH_REASON_HEARTBEAT_FAILED = 'heartbeatFailed';\nconst FINISH_REASON_IDLE_TIMEOUT = 'idleTimeout';\nconst FINISH_REASON_FINAL_TIMEOUT = 'finalTimeout';\nconst FINISH_REASON_EXTERNAL_FINISH = 'externalFinish';\n\n/**\n * An idle span is a span that automatically finishes. It does this by tracking child spans as activities.\n * An idle span is always the active span.\n */\nfunction startIdleSpan(startSpanOptions, options = {}) {\n  // Activities store a list of active spans\n  const activities = new Map();\n\n  // We should not use heartbeat if we finished a span\n  let _finished = false;\n\n  // Timer that tracks idleTimeout\n  let _idleTimeoutID;\n\n  // The reason why the span was finished\n  let _finishReason = FINISH_REASON_EXTERNAL_FINISH;\n\n  let _autoFinishAllowed = !options.disableAutoFinish;\n\n  const _cleanupHooks = [];\n\n  const {\n    idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    finalTimeout = TRACING_DEFAULTS.finalTimeout,\n    childSpanTimeout = TRACING_DEFAULTS.childSpanTimeout,\n    beforeSpanEnd,\n  } = options;\n\n  const client = getClient();\n\n  if (!client || !hasTracingEnabled()) {\n    return new SentryNonRecordingSpan();\n  }\n\n  const scope = getCurrentScope();\n  const previousActiveSpan = getActiveSpan();\n  const span = _startIdleSpan(startSpanOptions);\n\n  // We patch span.end to ensure we can run some things before the span is ended\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  span.end = new Proxy(span.end, {\n    apply(target, thisArg, args) {\n      if (beforeSpanEnd) {\n        beforeSpanEnd(span);\n      }\n\n      // Just ensuring that this keeps working, even if we ever have more arguments here\n      const [definedEndTimestamp, ...rest] = args;\n      const timestamp = definedEndTimestamp || timestampInSeconds();\n      const spanEndTimestamp = spanTimeInputToSeconds(timestamp);\n\n      // Ensure we end with the last span timestamp, if possible\n      const spans = getSpanDescendants(span).filter(child => child !== span);\n\n      // If we have no spans, we just end, nothing else to do here\n      if (!spans.length) {\n        onIdleSpanEnded(spanEndTimestamp);\n        return Reflect.apply(target, thisArg, [spanEndTimestamp, ...rest]);\n      }\n\n      const childEndTimestamps = spans\n        .map(span => spanToJSON(span).timestamp)\n        .filter(timestamp => !!timestamp) ;\n      const latestSpanEndTimestamp = childEndTimestamps.length ? Math.max(...childEndTimestamps) : undefined;\n\n      // In reality this should always exist here, but type-wise it may be undefined...\n      const spanStartTimestamp = spanToJSON(span).start_timestamp;\n\n      // The final endTimestamp should:\n      // * Never be before the span start timestamp\n      // * Be the latestSpanEndTimestamp, if there is one, and it is smaller than the passed span end timestamp\n      // * Otherwise be the passed end timestamp\n      // Final timestamp can never be after finalTimeout\n      const endTimestamp = Math.min(\n        spanStartTimestamp ? spanStartTimestamp + finalTimeout / 1000 : Infinity,\n        Math.max(spanStartTimestamp || -Infinity, Math.min(spanEndTimestamp, latestSpanEndTimestamp || Infinity)),\n      );\n\n      onIdleSpanEnded(endTimestamp);\n      return Reflect.apply(target, thisArg, [endTimestamp, ...rest]);\n    },\n  });\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   */\n  function _cancelIdleTimeout() {\n    if (_idleTimeoutID) {\n      clearTimeout(_idleTimeoutID);\n      _idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  function _restartIdleTimeout(endTimestamp) {\n    _cancelIdleTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && activities.size === 0 && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_IDLE_TIMEOUT;\n        span.end(endTimestamp);\n      }\n    }, idleTimeout);\n  }\n\n  /**\n   * Restarts child span timeout, if there is none running it will start one.\n   */\n  function _restartChildSpanTimeout(endTimestamp) {\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_HEARTBEAT_FAILED;\n        span.end(endTimestamp);\n      }\n    }, childSpanTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  function _pushActivity(spanId) {\n    _cancelIdleTimeout();\n    activities.set(spanId, true);\n\n    const endTimestamp = timestampInSeconds();\n    // We need to add the timeout here to have the real endtimestamp of the idle span\n    // Remember timestampInSeconds is in seconds, timeout is in ms\n    _restartChildSpanTimeout(endTimestamp + childSpanTimeout / 1000);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  function _popActivity(spanId) {\n    if (activities.has(spanId)) {\n      activities.delete(spanId);\n    }\n\n    if (activities.size === 0) {\n      const endTimestamp = timestampInSeconds();\n      // We need to add the timeout here to have the real endtimestamp of the idle span\n      // Remember timestampInSeconds is in seconds, timeout is in ms\n      _restartIdleTimeout(endTimestamp + idleTimeout / 1000);\n    }\n  }\n\n  function onIdleSpanEnded(endTimestamp) {\n    _finished = true;\n    activities.clear();\n\n    _cleanupHooks.forEach(cleanup => cleanup());\n\n    _setSpanForScope(scope, previousActiveSpan);\n\n    const spanJSON = spanToJSON(span);\n\n    const { start_timestamp: startTimestamp } = spanJSON;\n    // This should never happen, but to make TS happy...\n    if (!startTimestamp) {\n      return;\n    }\n\n    const attributes = spanJSON.data || {};\n    if (!attributes[SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON]) {\n      span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, _finishReason);\n    }\n\n    logger.log(`[Tracing] Idle span \"${spanJSON.op}\" finished`);\n\n    const childSpans = getSpanDescendants(span).filter(child => child !== span);\n\n    let discardedSpans = 0;\n    childSpans.forEach(childSpan => {\n      // We cancel all pending spans with status \"cancelled\" to indicate the idle span was finished early\n      if (childSpan.isRecording()) {\n        childSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'cancelled' });\n        childSpan.end(endTimestamp);\n        DEBUG_BUILD &&\n          logger.log('[Tracing] Cancelling span since span ended early', JSON.stringify(childSpan, undefined, 2));\n      }\n\n      const childSpanJSON = spanToJSON(childSpan);\n      const { timestamp: childEndTimestamp = 0, start_timestamp: childStartTimestamp = 0 } = childSpanJSON;\n\n      const spanStartedBeforeIdleSpanEnd = childStartTimestamp <= endTimestamp;\n\n      // Add a delta with idle timeout so that we prevent false positives\n      const timeoutWithMarginOfError = (finalTimeout + idleTimeout) / 1000;\n      const spanEndedBeforeFinalTimeout = childEndTimestamp - childStartTimestamp <= timeoutWithMarginOfError;\n\n      if (DEBUG_BUILD) {\n        const stringifiedSpan = JSON.stringify(childSpan, undefined, 2);\n        if (!spanStartedBeforeIdleSpanEnd) {\n          logger.log('[Tracing] Discarding span since it happened after idle span was finished', stringifiedSpan);\n        } else if (!spanEndedBeforeFinalTimeout) {\n          logger.log('[Tracing] Discarding span since it finished after idle span final timeout', stringifiedSpan);\n        }\n      }\n\n      if (!spanEndedBeforeFinalTimeout || !spanStartedBeforeIdleSpanEnd) {\n        removeChildSpanFromSpan(span, childSpan);\n        discardedSpans++;\n      }\n    });\n\n    if (discardedSpans > 0) {\n      span.setAttribute('sentry.idle_span_discarded_spans', discardedSpans);\n    }\n  }\n\n  _cleanupHooks.push(\n    client.on('spanStart', startedSpan => {\n      // If we already finished the idle span,\n      // or if this is the idle span itself being started,\n      // or if the started span has already been closed,\n      // we don't care about it for activity\n      if (_finished || startedSpan === span || !!spanToJSON(startedSpan).timestamp) {\n        return;\n      }\n\n      const allSpans = getSpanDescendants(span);\n\n      // If the span that was just started is a child of the idle span, we should track it\n      if (allSpans.includes(startedSpan)) {\n        _pushActivity(startedSpan.spanContext().spanId);\n      }\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('spanEnd', endedSpan => {\n      if (_finished) {\n        return;\n      }\n\n      _popActivity(endedSpan.spanContext().spanId);\n    }),\n  );\n\n  _cleanupHooks.push(\n    client.on('idleSpanEnableAutoFinish', spanToAllowAutoFinish => {\n      if (spanToAllowAutoFinish === span) {\n        _autoFinishAllowed = true;\n        _restartIdleTimeout();\n\n        if (activities.size) {\n          _restartChildSpanTimeout();\n        }\n      }\n    }),\n  );\n\n  // We only start the initial idle timeout if we are not delaying the auto finish\n  if (!options.disableAutoFinish) {\n    _restartIdleTimeout();\n  }\n\n  setTimeout(() => {\n    if (!_finished) {\n      span.setStatus({ code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' });\n      _finishReason = FINISH_REASON_FINAL_TIMEOUT;\n      span.end();\n    }\n  }, finalTimeout);\n\n  return span;\n}\n\nfunction _startIdleSpan(options) {\n  const span = startInactiveSpan(options);\n\n  _setSpanForScope(getCurrentScope(), span);\n\n  DEBUG_BUILD && logger.log('[Tracing] Started span is an idle span');\n\n  return span;\n}\n\nexport { TRACING_DEFAULTS, startIdleSpan };\n//# sourceMappingURL=idleSpan.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { addGlobalErrorInstrumentationHandler } from '../utils-hoist/instrument/globalError.js';\nimport { addGlobalUnhandledRejectionInstrumentationHandler } from '../utils-hoist/instrument/globalUnhandledRejection.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Ensure that global errors automatically set the active span status.\n */\nfunction registerSpanErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active root span as failed\n */\nfunction errorCallback() {\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n  if (rootSpan) {\n    const message = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Root span: ${message} -> Global error occurred`);\n    rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message });\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerSpanErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getActiveSpan, getRootSpan, spanToJSON, logger, SPAN_STATUS_ERROR } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = getActiveSpan();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = getRootSpan(activeSpan);\n\n      if (WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = spanToJSON(rootSpan);\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getClient, getCurrentScope } from '../currentScopes.js';\nimport { isEnabled } from '../exports.js';\nimport '../tracing/errors.js';\nimport '../utils-hoist/debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport '../debug-build.js';\nimport '../utils-hoist/time.js';\nimport { getActiveSpan, spanToTraceHeader } from './spanUtils.js';\nimport { TRACEPARENT_REGEXP, generateSentryTraceHeader } from '../utils-hoist/tracing.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromScope } from '../tracing/dynamicSamplingContext.js';\nimport { dynamicSamplingContextToSentryBaggageHeader } from '../utils-hoist/baggage.js';\n\n/**\n * Extracts trace propagation data from the current span or from the client's scope (via transaction or propagation\n * context) and serializes it to `sentry-trace` and `baggage` values to strings. These values can be used to propagate\n * a trace via our tracing Http headers or Html `<meta>` tags.\n *\n * This function also applies some validation to the generated sentry-trace and baggage values to ensure that\n * only valid strings are returned.\n *\n * @returns an object with the tracing data values. The object keys are the name of the tracing key to be used as header\n * or meta tag name.\n */\nfunction getTraceData(options = {}) {\n  const client = getClient();\n  if (!isEnabled() || !client) {\n    return {};\n  }\n\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getTraceData) {\n    return acs.getTraceData(options);\n  }\n\n  const scope = getCurrentScope();\n  const span = options.span || getActiveSpan();\n  const sentryTrace = span ? spanToTraceHeader(span) : scopeToTraceHeader(scope);\n  const dsc = span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromScope(client, scope);\n  const baggage = dynamicSamplingContextToSentryBaggageHeader(dsc);\n\n  const isValidSentryTraceHeader = TRACEPARENT_REGEXP.test(sentryTrace);\n  if (!isValidSentryTraceHeader) {\n    logger.warn('Invalid sentry-trace data. Cannot generate trace data');\n    return {};\n  }\n\n  return {\n    'sentry-trace': sentryTrace,\n    baggage,\n  };\n}\n\n/**\n * Get a sentry-trace header value for the given scope.\n */\nfunction scopeToTraceHeader(scope) {\n  // TODO(v9): Use generateSpanId() instead of spanId\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceId, sampled, spanId } = scope.getPropagationContext();\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\nexport { getTraceData };\n//# sourceMappingURL=traceData.js.map\n","import { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP } from './semanticAttributes.js';\nimport './tracing/errors.js';\nimport { isInstanceOf } from './utils-hoist/is.js';\nimport './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport './utils-hoist/time.js';\nimport './utils-hoist/syncpromise.js';\nimport { parseUrl } from './utils-hoist/url.js';\nimport { SENTRY_BAGGAGE_KEY_PREFIX } from './utils-hoist/baggage.js';\nimport './debug-build.js';\nimport { hasTracingEnabled } from './utils/hasTracingEnabled.js';\nimport { getActiveSpan } from './utils/spanUtils.js';\nimport { SentryNonRecordingSpan } from './tracing/sentryNonRecordingSpan.js';\nimport { setHttpStatus, SPAN_STATUS_ERROR } from './tracing/spanstatus.js';\nimport { startInactiveSpan } from './tracing/trace.js';\nimport { getTraceData } from './utils/traceData.js';\n\n/**\n * Create and track fetch request spans for usage in combination with `addFetchInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${method} ${url}`,\n          attributes: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n            'http.url': fullUrl,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  handlerData.fetchData.__span = span.spanContext().spanId;\n  spans[span.spanContext().spanId] = span;\n\n  if (shouldAttachHeaders(handlerData.fetchData.url)) {\n    const request = handlerData.args[0];\n\n    const options = handlerData.args[1] || {};\n\n    const headers = _addTracingHeadersToFetchRequest(\n      request,\n      options,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n    if (headers) {\n      // Ensure this is actually set, if no options have been passed previously\n      handlerData.args[1] = options;\n      options.headers = headers;\n    }\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n */\nfunction _addTracingHeadersToFetchRequest(\n  request,\n  fetchOptionsObj\n\n,\n  span,\n) {\n  const traceHeaders = getTraceData({ span });\n  const sentryTrace = traceHeaders['sentry-trace'];\n  const baggage = traceHeaders.baggage;\n\n  // Nothing to do, when we return undefined here, the original headers will be used\n  if (!sentryTrace) {\n    return undefined;\n  }\n\n  const headers = fetchOptionsObj.headers || (isRequest(request) ? request.headers : undefined);\n\n  if (!headers) {\n    return { ...traceHeaders };\n  } else if (isHeaders(headers)) {\n    const newHeaders = new Headers(headers);\n    newHeaders.set('sentry-trace', sentryTrace);\n\n    if (baggage) {\n      const prevBaggageHeader = newHeaders.get('baggage');\n      if (prevBaggageHeader) {\n        const prevHeaderStrippedFromSentryBaggage = stripBaggageHeaderOfSentryBaggageValues(prevBaggageHeader);\n        newHeaders.set(\n          'baggage',\n          // If there are non-sentry entries (i.e. if the stripped string is non-empty/truthy) combine the stripped header and sentry baggage header\n          // otherwise just set the sentry baggage header\n          prevHeaderStrippedFromSentryBaggage ? `${prevHeaderStrippedFromSentryBaggage},${baggage}` : baggage,\n        );\n      } else {\n        newHeaders.set('baggage', baggage);\n      }\n    }\n\n    return newHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [\n      ...headers\n        // Remove any existing sentry-trace headers\n        .filter(header => {\n          return !(Array.isArray(header) && header[0] === 'sentry-trace');\n        })\n        // Get rid of previous sentry baggage values in baggage header\n        .map(header => {\n          if (Array.isArray(header) && header[0] === 'baggage' && typeof header[1] === 'string') {\n            const [headerName, headerValue, ...rest] = header;\n            return [headerName, stripBaggageHeaderOfSentryBaggageValues(headerValue), ...rest];\n          } else {\n            return header;\n          }\n        }),\n      // Attach the new sentry-trace header\n      ['sentry-trace', sentryTrace],\n    ];\n\n    if (baggage) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push(['baggage', baggage]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    let newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders = existingBaggageHeader\n        .map(headerItem =>\n          typeof headerItem === 'string' ? stripBaggageHeaderOfSentryBaggageValues(headerItem) : headerItem,\n        )\n        .filter(headerItem => headerItem === '');\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(stripBaggageHeaderOfSentryBaggageValues(existingBaggageHeader));\n    }\n\n    if (baggage) {\n      newBaggageHeaders.push(baggage);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTrace,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers.\n *\n * @deprecated This function will not be exported anymore in v9.\n */\nfunction addTracingHeadersToFetchRequest(\n  request,\n  _client,\n  _scope,\n  fetchOptionsObj\n\n,\n  span,\n) {\n  return _addTracingHeadersToFetchRequest(request , fetchOptionsObj, span);\n}\n\nfunction getFullURL(url) {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction endSpan(span, handlerData) {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n  }\n  span.end();\n}\n\nfunction stripBaggageHeaderOfSentryBaggageValues(baggageHeader) {\n  return (\n    baggageHeader\n      .split(',')\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      .filter(baggageEntry => !baggageEntry.split('=')[0].startsWith(SENTRY_BAGGAGE_KEY_PREFIX))\n      .join(',')\n  );\n}\n\nfunction isRequest(request) {\n  return typeof Request !== 'undefined' && isInstanceOf(request, Request);\n}\n\nfunction isHeaders(headers) {\n  return typeof Headers !== 'undefined' && isInstanceOf(headers, Headers);\n}\n\nexport { addTracingHeadersToFetchRequest, instrumentFetchRequest };\n//# sourceMappingURL=fetch.js.map\n","import { addXhrInstrumentationHandler, addPerformanceInstrumentationHandler, extractNetworkProtocol, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { addFetchEndInstrumentationHandler, addFetchInstrumentationHandler, instrumentFetchRequest, parseUrl, spanToJSON, browserPerformanceTimeOrigin, hasTracingEnabled, setHttpStatus, getActiveSpan, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SentryNonRecordingSpan, getTraceData, stringMatchesSomePattern } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** Options for Request Instrumentation */\n\nconst responseToSpanId = new WeakMap();\nconst spanIdToEndTimestamp = new Map();\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  trackFetchStreamPerformance: false,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(client, _options) {\n  const {\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    tracePropagationTargets,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    trackFetchStreamPerformance: defaultRequestInstrumentationOptions.trackFetchStreamPerformance,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  const shouldAttachHeadersWithTargets = (url) => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans = {};\n\n  if (traceFetch) {\n    // Keeping track of http requests, whose body payloads resolved later than the initial resolved request\n    // e.g. streaming using server sent events (SSE)\n    client.addEventProcessor(event => {\n      if (event.type === 'transaction' && event.spans) {\n        event.spans.forEach(span => {\n          if (span.op === 'http.client') {\n            const updatedTimestamp = spanIdToEndTimestamp.get(span.span_id);\n            if (updatedTimestamp) {\n              span.timestamp = updatedTimestamp / 1000;\n              spanIdToEndTimestamp.delete(span.span_id);\n            }\n          }\n        });\n      }\n      return event;\n    });\n\n    if (trackFetchStreamPerformance) {\n      addFetchEndInstrumentationHandler(handlerData => {\n        if (handlerData.response) {\n          const span = responseToSpanId.get(handlerData.response);\n          if (span && handlerData.endTimestamp) {\n            spanIdToEndTimestamp.set(span, handlerData.endTimestamp);\n          }\n        }\n      });\n    }\n\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n\n      if (handlerData.response && handlerData.fetchData.__span) {\n        responseToSpanId.set(handlerData.response, handlerData.fetchData.__span);\n      }\n\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nfunction shouldAttachHeaders(\n  targetUrl,\n  tracePropagationTargets,\n) {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href = WINDOW.location && WINDOW.location.href;\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch (e) {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          attributes: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            'http.url': fullUrl,\n            url: sentryXhrData.url,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  if (shouldAttachHeaders(sentryXhrData.url)) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr, span) {\n  const { 'sentry-trace': sentryTrace, baggage } = getTraceData({ span });\n\n  if (sentryTrace) {\n    setHeaderOnXhr(xhr, sentryTrace, baggage);\n  }\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader('baggage', sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { startTrackingWebVitals, startTrackingINP, startTrackingLongAnimationFrames, startTrackingLongTasks, startTrackingInteractions, addHistoryInstrumentationHandler, registerInpInteractionListener, addPerformanceEntries } from '@sentry-internal/browser-utils';\nimport { TRACING_DEFAULTS, registerSpanErrorInstrumentation, GLOBAL_OBJ, getClient, propagationContextFromHeaders, getCurrentScope, spanToJSON, getRootSpan, spanIsSampled, getDynamicSamplingContextFromSpan, browserPerformanceTimeOrigin, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, getIsolationScope, generateTraceId, getDomElement, startIdleSpan, logger, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\n\n/* eslint-disable max-lines */\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableLongAnimationFrame: true,\n  enableInp: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  registerSpanErrorInstrumentation();\n\n  const {\n    enableInp,\n    enableLongTask,\n    enableLongAnimationFrame,\n    _experiments: { enableInteractions, enableStandaloneClsSpans },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    instrumentPageLoad,\n    instrumentNavigation,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals({ recordClsStandaloneSpans: enableStandaloneClsSpans || false });\n\n  if (enableInp) {\n    startTrackingINP();\n  }\n\n  if (\n    enableLongAnimationFrame &&\n    GLOBAL_OBJ.PerformanceObserver &&\n    PerformanceObserver.supportedEntryTypes &&\n    PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')\n  ) {\n    startTrackingLongAnimationFrames();\n  } else if (enableLongTask) {\n    startTrackingLongTasks();\n  }\n\n  if (enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client, startSpanOptions) {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = startIdleSpan(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        _collectWebVitals();\n        addPerformanceEntries(span, { recordClsOnPageloadSpan: !enableStandaloneClsSpans });\n      },\n    });\n\n    function emitFinish() {\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n\n    return idleSpan;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    afterAllSetup(client) {\n      let activeSpan;\n      let startingUrl = WINDOW.location && WINDOW.location.href;\n\n      function maybeEndActiveSpan() {\n        if (activeSpan && !spanToJSON(activeSpan).timestamp) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current active span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open active span, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n      }\n\n      client.on('startNavigationSpan', startSpanOptions => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        maybeEndActiveSpan();\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if (getClient() !== client) {\n          return;\n        }\n        maybeEndActiveSpan();\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n        getCurrentScope().setPropagationContext(propagationContext);\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n\n      // A trace should to stay the consistent over the entire time span of one route.\n      // Therefore, when the initial pageload or navigation root span ends, we update the\n      // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n      // the dynamic sampling context valid, even after the root span has ended.\n      // This ensures that the trace data is consistent for the entire duration of the route.\n      client.on('spanEnd', span => {\n        const op = spanToJSON(span).op;\n        if (span !== getRootSpan(span) || (op !== 'navigation' && op !== 'pageload')) {\n          return;\n        }\n\n        const scope = getCurrentScope();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : spanIsSampled(span),\n          dsc: oldPropagationContext.dsc || getDynamicSamplingContextFromSpan(span),\n        });\n      });\n\n      if (WINDOW.location) {\n        if (instrumentPageLoad) {\n          startBrowserTracingPageLoadSpan(client, {\n            name: WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          addHistoryInstrumentationHandler(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            if (from !== to) {\n              startingUrl = undefined;\n              startBrowserTracingNavigationSpan(client, {\n                name: WINDOW.location.pathname,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              });\n            }\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      if (enableInp) {\n        registerInpInteractionListener();\n      }\n\n      instrumentOutgoingRequests(client, {\n        traceFetch,\n        traceXHR,\n        trackFetchStreamPerformance,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nfunction startBrowserTracingPageLoadSpan(\n  client,\n  spanOptions,\n  traceOptions,\n) {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(client, spanOptions) {\n  getIsolationScope().setPropagationContext({ traceId: generateTraceId() });\n  getCurrentScope().setPropagationContext({ traceId: generateTraceId() });\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  // eslint-disable-next-line deprecation/deprecation\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  idleTimeout,\n  finalTimeout,\n  childSpanTimeout,\n  latestRoute,\n) {\n  let inflightInteractionSpan;\n  const registerInteractionTransaction = () => {\n    const op = 'ui.action.click';\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    if (rootSpan) {\n      const currentRootSpanOp = spanToJSON(rootSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp )) {\n        DEBUG_BUILD &&\n          logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = startIdleSpan(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (WINDOW.document) {\n    addEventListener('click', registerInteractionTransaction, { once: false, capture: true });\n  }\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, browserTracingIntegration, getMetaContent, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, GLOBAL_OBJ } from '@sentry/core';\nimport { startBrowserTracingPageLoadSpan, WINDOW, startBrowserTracingNavigationSpan } from '@sentry/react';\n\nconst INCOMPLETE_APP_ROUTER_INSTRUMENTATION_TRANSACTION_NAME = 'incomplete-app-router-transaction';\n\n/** Instruments the Next.js app router for pageloads. */\nfunction appRouterInstrumentPageLoad(client) {\n  startBrowserTracingPageLoadSpan(client, {\n    name: WINDOW.location.pathname,\n    // pageload should always start at timeOrigin (and needs to be in s, not ms)\n    startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.nextjs.app_router_instrumentation',\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n    },\n  });\n}\n\n// Yes, yes, I know we shouldn't depend on these internals. But that's where we are at. We write the ugly code, so you don't have to.\nconst GLOBAL_OBJ_WITH_NEXT_ROUTER = GLOBAL_OBJ\n\n;\n\n/*\n * The routing instrumentation needs to handle a few cases:\n * - Router operations:\n *  - router.push() (either explicitly called or implicitly through <Link /> tags)\n *  - router.replace() (either explicitly called or implicitly through <Link replace /> tags)\n *  - router.back()\n *  - router.forward()\n * - Browser operations:\n *  - native Browser-back / popstate event (implicitly called by router.back())\n *  - native Browser-forward / popstate event (implicitly called by router.forward())\n */\n\n/** Instruments the Next.js app router for navigation. */\nfunction appRouterInstrumentNavigation(client) {\n  let currentNavigationSpan = undefined;\n\n  WINDOW.addEventListener('popstate', () => {\n    if (currentNavigationSpan && currentNavigationSpan.isRecording()) {\n      currentNavigationSpan.updateName(WINDOW.location.pathname);\n      currentNavigationSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'url');\n    } else {\n      currentNavigationSpan = startBrowserTracingNavigationSpan(client, {\n        name: WINDOW.location.pathname,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.nextjs.app_router_instrumentation',\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          'navigation.type': 'browser.popstate',\n        },\n      });\n    }\n  });\n\n  let routerPatched = false;\n  let triesToFindRouter = 0;\n  const MAX_TRIES_TO_FIND_ROUTER = 500;\n  const ROUTER_AVAILABILITY_CHECK_INTERVAL_MS = 20;\n  const checkForRouterAvailabilityInterval = setInterval(() => {\n    triesToFindRouter++;\n    const router = _nullishCoalesce(_optionalChain([GLOBAL_OBJ_WITH_NEXT_ROUTER, 'optionalAccess', _ => _.next, 'optionalAccess', _2 => _2.router]), () => ( _optionalChain([GLOBAL_OBJ_WITH_NEXT_ROUTER, 'optionalAccess', _3 => _3.nd, 'optionalAccess', _4 => _4.router])));\n\n    if (routerPatched || triesToFindRouter > MAX_TRIES_TO_FIND_ROUTER) {\n      clearInterval(checkForRouterAvailabilityInterval);\n    } else if (router) {\n      clearInterval(checkForRouterAvailabilityInterval);\n      routerPatched = true;\n      (['back', 'forward', 'push', 'replace'] ).forEach(routerFunctionName => {\n        if (_optionalChain([router, 'optionalAccess', _5 => _5[routerFunctionName]])) {\n          // @ts-expect-error Weird type error related to not knowing how to associate return values with the individual functions - we can just ignore\n          router[routerFunctionName] = new Proxy(router[routerFunctionName], {\n            apply(target, thisArg, argArray) {\n              const span = startBrowserTracingNavigationSpan(client, {\n                name: INCOMPLETE_APP_ROUTER_INSTRUMENTATION_TRANSACTION_NAME,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.nextjs.app_router_instrumentation',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                },\n              });\n\n              currentNavigationSpan = span;\n\n              if (routerFunctionName === 'push') {\n                _optionalChain([span, 'optionalAccess', _6 => _6.updateName, 'call', _7 => _7(transactionNameifyRouterArgument(argArray[0]))]);\n                _optionalChain([span, 'optionalAccess', _8 => _8.setAttribute, 'call', _9 => _9(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'url')]);\n                _optionalChain([span, 'optionalAccess', _10 => _10.setAttribute, 'call', _11 => _11('navigation.type', 'router.push')]);\n              } else if (routerFunctionName === 'replace') {\n                _optionalChain([span, 'optionalAccess', _12 => _12.updateName, 'call', _13 => _13(transactionNameifyRouterArgument(argArray[0]))]);\n                _optionalChain([span, 'optionalAccess', _14 => _14.setAttribute, 'call', _15 => _15(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'url')]);\n                _optionalChain([span, 'optionalAccess', _16 => _16.setAttribute, 'call', _17 => _17('navigation.type', 'router.replace')]);\n              } else if (routerFunctionName === 'back') {\n                _optionalChain([span, 'optionalAccess', _18 => _18.setAttribute, 'call', _19 => _19('navigation.type', 'router.back')]);\n              } else if (routerFunctionName === 'forward') {\n                _optionalChain([span, 'optionalAccess', _20 => _20.setAttribute, 'call', _21 => _21('navigation.type', 'router.forward')]);\n              }\n\n              return target.apply(thisArg, argArray);\n            },\n          });\n        }\n      });\n    }\n  }, ROUTER_AVAILABILITY_CHECK_INTERVAL_MS);\n}\n\nfunction transactionNameifyRouterArgument(target) {\n  try {\n    // We provide an arbitrary base because we only care about the pathname and it makes URL parsing more resilient.\n    return new URL(target, 'http://example.com/').pathname;\n  } catch (e) {\n    return '/';\n  }\n}\n\nexport { INCOMPLETE_APP_ROUTER_INSTRUMENTATION_TRANSACTION_NAME, appRouterInstrumentNavigation, appRouterInstrumentPageLoad };\n//# sourceMappingURL=appRouterRoutingInstrumentation.js.map\n","export { default } from '../client/router';\nexport * from '../client/router';\n\n//# sourceMappingURL=router.js.map","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { parseBaggageHeader, browserPerformanceTimeOrigin, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, stripUrlQueryAndFragment, logger } from '@sentry/core';\nimport { startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan, WINDOW } from '@sentry/react';\nimport RouterImport from 'next/router';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\n\n// next/router v10 is CJS\n//\n// For ESM/CJS interoperability 'reasons', depending on how this file is loaded, Router might be on the default export\nconst Router = RouterImport.events\n  ? RouterImport\n  : (RouterImport ).default;\n\nconst globalObject = WINDOW\n\n;\n\n/**\n * Describes data located in the __NEXT_DATA__ script tag. This tag is present on every page of a Next.js app.\n */\n\n/**\n * Every Next.js page (static and dynamic ones) comes with a script tag with the id \"__NEXT_DATA__\". This script tag\n * contains a JSON object with data that was either generated at build time for static pages (`getStaticProps`), or at\n * runtime with data fetchers like `getServerSideProps.`.\n *\n * We can use this information to:\n * - Always get the parameterized route we're in when loading a page.\n * - Send trace information (trace-id, baggage) from the server to the client.\n *\n * This function extracts this information.\n */\nfunction extractNextDataTagInformation() {\n  let nextData;\n  // Let's be on the safe side and actually check first if there is really a __NEXT_DATA__ script tag on the page.\n  // Theoretically this should always be the case though.\n  const nextDataTag = globalObject.document.getElementById('__NEXT_DATA__');\n  if (nextDataTag && nextDataTag.innerHTML) {\n    try {\n      nextData = JSON.parse(nextDataTag.innerHTML);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not extract __NEXT_DATA__');\n    }\n  }\n\n  if (!nextData) {\n    return {};\n  }\n\n  const nextDataTagInfo = {};\n\n  const { page, query, props } = nextData;\n\n  // `nextData.page` always contains the parameterized route - except for when an error occurs in a data fetching\n  // function, then it is \"/_error\", but that isn't a problem since users know which route threw by looking at the\n  // parent transaction\n  // TODO: Actually this is a problem (even though it is not that big), because the DSC and the transaction payload will contain\n  // a different transaction name. Maybe we can fix this. Idea: Also send transaction name via pageProps when available.\n  nextDataTagInfo.route = page;\n  nextDataTagInfo.params = query;\n\n  if (props && props.pageProps) {\n    nextDataTagInfo.sentryTrace = props.pageProps._sentryTraceData;\n    nextDataTagInfo.baggage = props.pageProps._sentryBaggage;\n  }\n\n  return nextDataTagInfo;\n}\n\n/**\n * Instruments the Next.js pages router for pageloads.\n * Only supported for client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction pagesRouterInstrumentPageLoad(client) {\n  const { route, params, sentryTrace, baggage } = extractNextDataTagInformation();\n  const parsedBaggage = parseBaggageHeader(baggage);\n  let name = route || globalObject.location.pathname;\n\n  // /_error is the fallback page for all errors. If there is a transaction name for /_error, use that instead\n  if (parsedBaggage && parsedBaggage['sentry-transaction'] && name === '/_error') {\n    name = parsedBaggage['sentry-transaction'];\n    // Strip any HTTP method from the span name\n    name = name.replace(/^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|TRACE|CONNECT)\\s+/i, '');\n  }\n\n  startBrowserTracingPageLoadSpan(\n    client,\n    {\n      name,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.nextjs.pages_router_instrumentation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: route ? 'route' : 'url',\n        ...(params && client.getOptions().sendDefaultPii && { ...params }),\n      },\n    },\n    { sentryTrace, baggage },\n  );\n}\n\n/**\n * Instruments the Next.js pages router for navigation.\n * Only supported for client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction pagesRouterInstrumentNavigation(client) {\n  Router.events.on('routeChangeStart', (navigationTarget) => {\n    const strippedNavigationTarget = stripUrlQueryAndFragment(navigationTarget);\n    const matchedRoute = getNextRouteFromPathname(strippedNavigationTarget);\n\n    let newLocation;\n    let spanSource;\n\n    if (matchedRoute) {\n      newLocation = matchedRoute;\n      spanSource = 'route';\n    } else {\n      newLocation = strippedNavigationTarget;\n      spanSource = 'url';\n    }\n\n    startBrowserTracingNavigationSpan(client, {\n      name: newLocation,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.nextjs.pages_router_instrumentation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: spanSource,\n      },\n    });\n  });\n}\n\nfunction getNextRouteFromPathname(pathname) {\n  const pageRoutes = (globalObject.__BUILD_MANIFEST || {}).sortedPages;\n\n  // Page route should in 99.999% of the cases be defined by now but just to be sure we make a check here\n  if (!pageRoutes) {\n    return;\n  }\n\n  return pageRoutes.find(route => {\n    const routeRegExp = convertNextRouteToRegExp(route);\n    return pathname.match(routeRegExp);\n  });\n}\n\n/**\n * Converts a Next.js style route to a regular expression that matches on pathnames (no query params or URL fragments).\n *\n * In general this involves replacing any instances of square brackets in a route with a wildcard:\n * e.g. \"/users/[id]/info\" becomes /\\/users\\/([^/]+?)\\/info/\n *\n * Some additional edgecases need to be considered:\n * - All routes have an optional slash at the end, meaning users can navigate to \"/users/[id]/info\" or\n *   \"/users/[id]/info/\" - both will be resolved to \"/users/[id]/info\".\n * - Non-optional \"catchall\"s at the end of a route must be considered when matching (e.g. \"/users/[...params]\").\n * - Optional \"catchall\"s at the end of a route must be considered when matching (e.g. \"/users/[[...params]]\").\n *\n * @param route A Next.js style route as it is found in `global.__BUILD_MANIFEST.sortedPages`\n */\nfunction convertNextRouteToRegExp(route) {\n  // We can assume a route is at least \"/\".\n  const routeParts = route.split('/');\n\n  let optionalCatchallWildcardRegex = '';\n  if (_optionalChain([routeParts, 'access', _ => _[routeParts.length - 1], 'optionalAccess', _2 => _2.match, 'call', _3 => _3(/^\\[\\[\\.\\.\\..+\\]\\]$/)])) {\n    // If last route part has pattern \"[[...xyz]]\" we pop the latest route part to get rid of the required trailing\n    // slash that would come before it if we didn't pop it.\n    routeParts.pop();\n    optionalCatchallWildcardRegex = '(?:/(.+?))?';\n  }\n\n  const rejoinedRouteParts = routeParts\n    .map(\n      routePart =>\n        routePart\n          .replace(/^\\[\\.\\.\\..+\\]$/, '(.+?)') // Replace catch all wildcard with regex wildcard\n          .replace(/^\\[.*\\]$/, '([^/]+?)'), // Replace route wildcards with lazy regex wildcards\n    )\n    .join('/');\n\n  // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- routeParts are from the build manifest, so no raw user input\n  return new RegExp(\n    `^${rejoinedRouteParts}${optionalCatchallWildcardRegex}(?:/)?$`, // optional slash at the end\n  );\n}\n\nexport { pagesRouterInstrumentNavigation, pagesRouterInstrumentPageLoad };\n//# sourceMappingURL=pagesRouterRoutingInstrumentation.js.map\n","import { WINDOW } from '@sentry/react';\nimport { appRouterInstrumentPageLoad, appRouterInstrumentNavigation } from './appRouterRoutingInstrumentation.js';\nimport { pagesRouterInstrumentPageLoad, pagesRouterInstrumentNavigation } from './pagesRouterRoutingInstrumentation.js';\n\n/**\n * Instruments the Next.js Client Router for page loads.\n */\nfunction nextRouterInstrumentPageLoad(client) {\n  const isAppRouter = !WINDOW.document.getElementById('__NEXT_DATA__');\n  if (isAppRouter) {\n    appRouterInstrumentPageLoad(client);\n  } else {\n    pagesRouterInstrumentPageLoad(client);\n  }\n}\n\n/**\n * Instruments the Next.js Client Router for navigation.\n */\nfunction nextRouterInstrumentNavigation(client) {\n  const isAppRouter = !WINDOW.document.getElementById('__NEXT_DATA__');\n  if (isAppRouter) {\n    appRouterInstrumentNavigation(client);\n  } else {\n    pagesRouterInstrumentNavigation(client);\n  }\n}\n\nexport { nextRouterInstrumentNavigation, nextRouterInstrumentPageLoad };\n//# sourceMappingURL=nextRoutingInstrumentation.js.map\n","import { browserTracingIntegration as browserTracingIntegration$1 } from '@sentry/react';\nimport { nextRouterInstrumentNavigation, nextRouterInstrumentPageLoad } from './routing/nextRoutingInstrumentation.js';\n\n/**\n * A custom browser tracing integration for Next.js.\n */\nfunction browserTracingIntegration(\n  options = {},\n) {\n  const browserTracingIntegrationInstance = browserTracingIntegration$1({\n    ...options,\n    instrumentNavigation: false,\n    instrumentPageLoad: false,\n  });\n\n  const { instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...browserTracingIntegrationInstance,\n    afterAllSetup(client) {\n      // We need to run the navigation span instrumentation before the `afterAllSetup` hook on the normal browser\n      // tracing integration because we need to ensure the order of execution is as follows:\n      // Instrumentation to start span on RSC fetch request runs -> Instrumentation to put tracing headers from active span on fetch runs\n      // If it were the other way around, the RSC fetch request would not receive the tracing headers from the navigation transaction.\n      if (instrumentNavigation) {\n        nextRouterInstrumentNavigation(client);\n      }\n\n      browserTracingIntegrationInstance.afterAllSetup(client);\n\n      if (instrumentPageLoad) {\n        nextRouterInstrumentPageLoad(client);\n      }\n    },\n  };\n}\n\nexport { browserTracingIntegration };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0] || '';\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2] || '';\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\nexport { basename, dirname, isAbsolute, join, normalizePath, relative, resolve };\n//# sourceMappingURL=path.js.map\n","import { defineIntegration } from '../integration.js';\nimport { relative, basename } from '../utils-hoist/path.js';\nimport { GLOBAL_OBJ } from '../utils-hoist/worldwide.js';\n\nconst INTEGRATION_NAME = 'RewriteFrames';\n\n/**\n * Rewrite event frames paths.\n */\nconst rewriteFramesIntegration = defineIntegration((options = {}) => {\n  const root = options.root;\n  const prefix = options.prefix || 'app:///';\n\n  const isBrowser = 'window' in GLOBAL_OBJ && GLOBAL_OBJ.window !== undefined;\n\n  const iteratee = options.iteratee || generateIteratee({ isBrowser, root, prefix });\n\n  /** Process an exception event. */\n  function _processExceptionsEvent(event) {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception.values.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: _processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** Process a stack trace. */\n  function _processStacktrace(stacktrace) {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => iteratee(f)),\n    };\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(originalEvent) {\n      let processedEvent = originalEvent;\n\n      if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n        processedEvent = _processExceptionsEvent(processedEvent);\n      }\n\n      return processedEvent;\n    },\n  };\n});\n\n/**\n * Exported only for tests.\n */\nfunction generateIteratee({\n  isBrowser,\n  root,\n  prefix,\n}\n\n) {\n  return (frame) => {\n    if (!frame.filename) {\n      return frame;\n    }\n\n    // Determine if this is a Windows frame by checking for a Windows-style prefix such as `C:\\`\n    const isWindowsFrame =\n      /^[a-zA-Z]:\\\\/.test(frame.filename) ||\n      // or the presence of a backslash without a forward slash (which are not allowed on Windows)\n      (frame.filename.includes('\\\\') && !frame.filename.includes('/'));\n\n    // Check if the frame filename begins with `/`\n    const startsWithSlash = /^\\//.test(frame.filename);\n\n    if (isBrowser) {\n      if (root) {\n        const oldFilename = frame.filename;\n        if (oldFilename.indexOf(root) === 0) {\n          frame.filename = oldFilename.replace(root, prefix);\n        }\n      }\n    } else {\n      if (isWindowsFrame || startsWithSlash) {\n        const filename = isWindowsFrame\n          ? frame.filename\n              .replace(/^[a-zA-Z]:/, '') // remove Windows-style prefix\n              .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n          : frame.filename;\n        const base = root ? relative(root, filename) : basename(filename);\n        frame.filename = `${prefix}${base}`;\n      }\n    }\n\n    return frame;\n  };\n}\n\nexport { generateIteratee, rewriteFramesIntegration };\n//# sourceMappingURL=rewriteframes.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { defineIntegration, rewriteFramesIntegration } from '@sentry/core';\n\nconst nextjsClientStackFrameNormalizationIntegration = defineIntegration(\n  ({ assetPrefixPath }) => {\n    const rewriteFramesInstance = rewriteFramesIntegration({\n      // Turn `<origin>/<path>/_next/static/...` into `app:///_next/static/...`\n      iteratee: frame => {\n        try {\n          const { origin } = new URL(frame.filename );\n          frame.filename = _optionalChain([frame, 'access', _ => _.filename, 'optionalAccess', _2 => _2.replace, 'call', _3 => _3(origin, 'app://'), 'access', _4 => _4.replace, 'call', _5 => _5(assetPrefixPath, '')]);\n        } catch (err) {\n          // Filename wasn't a properly formed URL, so there's nothing we can do\n        }\n\n        // We need to URI-decode the filename because Next.js has wildcard routes like \"/users/[id].js\" which show up as \"/users/%5id%5.js\" in Error stacktraces.\n        // The corresponding sources that Next.js generates have proper brackets so we also need proper brackets in the frame so that source map resolving works.\n        if (frame.filename && frame.filename.startsWith('app:///_next')) {\n          frame.filename = decodeURI(frame.filename);\n        }\n\n        if (\n          frame.filename &&\n          frame.filename.match(\n            /^app:\\/\\/\\/_next\\/static\\/chunks\\/(main-|main-app-|polyfills-|webpack-|framework-|framework\\.)[0-9a-f]+\\.js$/,\n          )\n        ) {\n          // We don't care about these frames. It's Next.js internal code.\n          frame.in_app = false;\n        }\n\n        return frame;\n      },\n    });\n\n    return {\n      ...rewriteFramesInstance,\n      name: 'NextjsClientStackFrameNormalization',\n    };\n  },\n);\n\nexport { nextjsClientStackFrameNormalizationIntegration };\n//# sourceMappingURL=clientNormalizationIntegration.js.map\n","import { dsnFromString, logger, GLOBAL_OBJ } from '@sentry/core';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\n\nconst globalWithInjectedValues = GLOBAL_OBJ\n\n;\n\n/**\n * Applies the `tunnel` option to the Next.js SDK options based on `withSentryConfig`'s `tunnelRoute` option.\n */\nfunction applyTunnelRouteOption(options) {\n  const tunnelRouteOption = process.env._sentryRewritesTunnelPath || globalWithInjectedValues._sentryRewritesTunnelPath;\n  if (tunnelRouteOption && options.dsn) {\n    const dsnComponents = dsnFromString(options.dsn);\n    if (!dsnComponents) {\n      return;\n    }\n    const sentrySaasDsnMatch = dsnComponents.host.match(/^o(\\d+)\\.ingest(?:\\.([a-z]{2}))?\\.sentry\\.io$/);\n    if (sentrySaasDsnMatch) {\n      const orgId = sentrySaasDsnMatch[1];\n      const regionCode = sentrySaasDsnMatch[2];\n      let tunnelPath = `${tunnelRouteOption}?o=${orgId}&p=${dsnComponents.projectId}`;\n      if (regionCode) {\n        tunnelPath += `&r=${regionCode}`;\n      }\n      options.tunnel = tunnelPath;\n      DEBUG_BUILD && logger.info(`Tunneling events to \"${tunnelPath}\"`);\n    } else {\n      DEBUG_BUILD && logger.warn('Provided DSN is not a Sentry SaaS DSN. Will not tunnel events.');\n    }\n  }\n}\n\nexport { applyTunnelRouteOption };\n//# sourceMappingURL=tunnelRoute.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { applySdkMetadata, addEventProcessor, GLOBAL_OBJ } from '@sentry/core';\nimport { init as init$1, getDefaultIntegrations as getDefaultIntegrations$1 } from '@sentry/react';\nexport * from '@sentry/react';\nimport { devErrorSymbolicationEventProcessor } from '../common/devErrorSymbolicationEventProcessor.js';\nimport { getVercelEnv } from '../common/getVercelEnv.js';\nimport { isRedirectNavigationError } from '../common/nextNavigationErrorUtils.js';\nimport { browserTracingIntegration } from './browserTracingIntegration.js';\nimport { nextjsClientStackFrameNormalizationIntegration } from './clientNormalizationIntegration.js';\nimport { INCOMPLETE_APP_ROUTER_INSTRUMENTATION_TRANSACTION_NAME } from './routing/appRouterRoutingInstrumentation.js';\nimport { applyTunnelRouteOption } from './tunnelRoute.js';\nexport { wrapGetStaticPropsWithSentry } from '../common/pages-router-instrumentation/wrapGetStaticPropsWithSentry.js';\nexport { wrapGetInitialPropsWithSentry } from '../common/pages-router-instrumentation/wrapGetInitialPropsWithSentry.js';\nexport { wrapAppGetInitialPropsWithSentry } from '../common/pages-router-instrumentation/wrapAppGetInitialPropsWithSentry.js';\nexport { wrapDocumentGetInitialPropsWithSentry } from '../common/pages-router-instrumentation/wrapDocumentGetInitialPropsWithSentry.js';\nexport { wrapErrorGetInitialPropsWithSentry } from '../common/pages-router-instrumentation/wrapErrorGetInitialPropsWithSentry.js';\nexport { wrapGetServerSidePropsWithSentry } from '../common/pages-router-instrumentation/wrapGetServerSidePropsWithSentry.js';\nexport { wrapServerComponentWithSentry } from '../common/wrapServerComponentWithSentry.js';\nexport { wrapRouteHandlerWithSentry } from '../common/wrapRouteHandlerWithSentry.js';\nexport { wrapApiHandlerWithSentryVercelCrons } from '../common/pages-router-instrumentation/wrapApiHandlerWithSentryVercelCrons.js';\nexport { wrapMiddlewareWithSentry } from '../common/wrapMiddlewareWithSentry.js';\nexport { wrapPageComponentWithSentry } from '../common/pages-router-instrumentation/wrapPageComponentWithSentry.js';\nexport { wrapGenerationFunctionWithSentry } from '../common/wrapGenerationFunctionWithSentry.js';\nexport { withServerActionInstrumentation } from '../common/withServerActionInstrumentation.js';\nexport { captureRequestError, experimental_captureRequestError } from '../common/captureRequestError.js';\nexport { captureUnderscoreErrorException } from '../common/pages-router-instrumentation/_error.js';\n\nconst globalWithInjectedValues = GLOBAL_OBJ\n\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n/** Inits the Sentry NextJS SDK on the browser with the React SDK. */\nfunction init(options) {\n  const opts = {\n    environment: getVercelEnv(true) || process.env.NODE_ENV,\n    defaultIntegrations: getDefaultIntegrations(options),\n    ...options,\n  } ;\n\n  applyTunnelRouteOption(opts);\n  applySdkMetadata(opts, 'nextjs', ['nextjs', 'react']);\n\n  const client = init$1(opts);\n\n  const filterTransactions = event =>\n    event.type === 'transaction' && event.transaction === '/404' ? null : event;\n  filterTransactions.id = 'NextClient404Filter';\n  addEventProcessor(filterTransactions);\n\n  const filterIncompleteNavigationTransactions = event =>\n    event.type === 'transaction' && event.transaction === INCOMPLETE_APP_ROUTER_INSTRUMENTATION_TRANSACTION_NAME\n      ? null\n      : event;\n  filterIncompleteNavigationTransactions.id = 'IncompleteTransactionFilter';\n  addEventProcessor(filterIncompleteNavigationTransactions);\n\n  const filterNextRedirectError = (event, hint) =>\n    isRedirectNavigationError(_optionalChain([hint, 'optionalAccess', _ => _.originalException])) ? null : event;\n  filterNextRedirectError.id = 'NextRedirectErrorFilter';\n  addEventProcessor(filterNextRedirectError);\n\n  if (process.env.NODE_ENV === 'development') {\n    addEventProcessor(devErrorSymbolicationEventProcessor);\n  }\n\n  return client;\n}\n\nfunction getDefaultIntegrations(options) {\n  const customDefaultIntegrations = getDefaultIntegrations$1(options);\n  // This evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\",\n  // in which case everything inside will get tree-shaken away\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    customDefaultIntegrations.push(browserTracingIntegration());\n  }\n\n  // This value is injected at build time, based on the output directory specified in the build config. Though a default\n  // is set there, we set it here as well, just in case something has gone wrong with the injection.\n  const assetPrefixPath =\n    process.env._sentryRewriteFramesAssetPrefixPath ||\n    globalWithInjectedValues._sentryRewriteFramesAssetPrefixPath ||\n    '';\n  customDefaultIntegrations.push(nextjsClientStackFrameNormalizationIntegration({ assetPrefixPath }));\n\n  return customDefaultIntegrations;\n}\n\n/**\n * Just a passthrough in case this is imported from the client.\n */\nfunction withSentryConfig(exportedUserNextConfig) {\n  return exportedUserNextConfig;\n}\n\nexport { browserTracingIntegration, init, withSentryConfig };\n//# sourceMappingURL=index.js.map\n","import { parseCookie } from './cookie.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isString, isPlainObject } from './is.js';\nimport { logger } from './logger.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\nimport { truncate } from './string.js';\nimport { stripUrlQueryAndFragment } from './url.js';\nimport { ipHeaderNames, getClientIPAddress } from './vendor/getIpAddress.js';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n * @deprecated This method will be removed in v9. It is not in use anymore.\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n *\n * @deprecated Instead manually normalize the request data into a format that fits `addNormalizedRequestDataToEvent`.\n */\nfunction extractRequestData(\n  req,\n  options\n\n = {},\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES } = options;\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        // Remove IP headers in case IP data should not be included in the event\n        if (!include.includes('ip')) {\n          ipHeaderNames.forEach(ipHeaderName => {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete (requestData.headers )[ipHeaderName];\n          });\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && parseCookie(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        requestData.query_string = extractQueryParams(req);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // NOTE: As of v8, request is (unless a user sets this manually) ALWAYS a http request\n        // Which does not have a body by default\n        // However, in our http instrumentation, we patch the request to capture the body and store it on the\n        // request as `.body` anyhow\n        // In v9, we may update requestData to only work with plain http requests\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        const body = req.body;\n        if (body !== undefined) {\n          const stringBody = isString(body)\n            ? body\n            : isPlainObject(body)\n              ? JSON.stringify(normalize(body))\n              : truncate(`${body}`, 1024);\n          if (stringBody) {\n            requestData.data = stringBody;\n          }\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add already normalized request data to an event.\n * This mutates the passed in event.\n */\nfunction addNormalizedRequestDataToEvent(\n  event,\n  req,\n  // This is non-standard data that is not part of the regular HTTP request\n  additionalData,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const includeRequest = Array.isArray(include.request) ? [...include.request] : [...DEFAULT_REQUEST_INCLUDES];\n    if (include.ip) {\n      includeRequest.push('ip');\n    }\n\n    const extractedRequestData = extractNormalizedRequestData(req, { include: includeRequest });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser =\n      additionalData.user && isPlainObject(additionalData.user)\n        ? extractUserData(additionalData.user, include.user)\n        : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...extractedUser,\n        ...event.user,\n      };\n    }\n  }\n\n  if (include.ip) {\n    const ip = (req.headers && getClientIPAddress(req.headers)) || additionalData.ipAddress;\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n *\n * @deprecated Use `addNormalizedRequestDataToEvent` instead.\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const includeRequest = Array.isArray(include.request) ? [...include.request] : [...DEFAULT_REQUEST_INCLUDES];\n    if (include.ip) {\n      includeRequest.push('ip');\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const extractedRequestData = extractRequestData(req, { include: includeRequest });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  //   It may also be sent by proxies as specified in X-Forwarded-For or similar headers\n  if (include.ip) {\n    const ip = (req.headers && getClientIPAddress(req.headers)) || req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(req) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    const queryParams = req.query || new URL(originalUrl).search.slice(1);\n    return queryParams.length ? queryParams : undefined;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    DEBUG_BUILD &&\n      logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Convert common request headers to a simple dictionary.\n */\nfunction headersToDict(reqHeaders) {\n  const headers = Object.create(null);\n\n  try {\n    Object.entries(reqHeaders).forEach(([key, value]) => {\n      if (typeof value === 'string') {\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    DEBUG_BUILD &&\n      logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n\n  return {\n    method: req.method,\n    url: req.url,\n    query_string: extractQueryParamsFromUrl(req.url),\n    headers,\n    // TODO: Can we extract body data from the request?\n  };\n}\n\n/**\n * Convert a HTTP request object to RequestEventData to be passed as normalizedRequest.\n * Instead of allowing `PolymorphicRequest` to be passed,\n * we want to be more specific and generally require a http.IncomingMessage-like object.\n */\nfunction httpRequestToRequestData(request\n\n) {\n  const headers = request.headers || {};\n  const host = headers.host || '<no host>';\n  const protocol = request.socket && (request.socket ).encrypted ? 'https' : 'http';\n  const originalUrl = request.url || '';\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n\n  // This is non-standard, but may be sometimes set\n  // It may be overwritten later by our own body handling\n  const data = (request ).body || undefined;\n\n  // This is non-standard, but may be set on e.g. Next.js or Express requests\n  const cookies = (request ).cookies;\n\n  return dropUndefinedKeys({\n    url: absoluteUrl,\n    method: request.method,\n    query_string: extractQueryParamsFromUrl(originalUrl),\n    headers: headersToDict(headers),\n    cookies,\n    data,\n  });\n}\n\n/** Extract the query params from an URL. */\nfunction extractQueryParamsFromUrl(url) {\n  // url is path and query string\n  if (!url) {\n    return;\n  }\n\n  try {\n    // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n    // hostname as the base. Since the point here is just to grab the query string, it doesn't matter what we use.\n    const queryParams = new URL(url, 'http://dogs.are.great').search.slice(1);\n    return queryParams.length ? queryParams : undefined;\n  } catch (e3) {\n    return undefined;\n  }\n}\n\nfunction extractNormalizedRequestData(\n  normalizedRequest,\n  { include },\n) {\n  const includeKeys = include ? (Array.isArray(include) ? include : DEFAULT_REQUEST_INCLUDES) : [];\n\n  const requestData = {};\n  const headers = { ...normalizedRequest.headers };\n\n  if (includeKeys.includes('headers')) {\n    requestData.headers = headers;\n\n    // Remove the Cookie header in case cookie data should not be included in the event\n    if (!include.includes('cookies')) {\n      delete (headers ).cookie;\n    }\n\n    // Remove IP headers in case IP data should not be included in the event\n    if (!include.includes('ip')) {\n      ipHeaderNames.forEach(ipHeaderName => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete (headers )[ipHeaderName];\n      });\n    }\n  }\n\n  if (includeKeys.includes('method')) {\n    requestData.method = normalizedRequest.method;\n  }\n\n  if (includeKeys.includes('url')) {\n    requestData.url = normalizedRequest.url;\n  }\n\n  if (includeKeys.includes('cookies')) {\n    const cookies = normalizedRequest.cookies || (headers && headers.cookie ? parseCookie(headers.cookie) : undefined);\n    requestData.cookies = cookies || {};\n  }\n\n  if (includeKeys.includes('query_string')) {\n    requestData.query_string = normalizedRequest.query_string;\n  }\n\n  if (includeKeys.includes('data')) {\n    requestData.data = normalizedRequest.data;\n  }\n\n  return requestData;\n}\n\nexport { DEFAULT_USER_INCLUDES, addNormalizedRequestDataToEvent, addRequestDataToEvent, extractPathForTransaction, extractQueryParamsFromUrl, extractRequestData, headersToDict, httpRequestToRequestData, winterCGHeadersToDict, winterCGRequestToRequestData };\n//# sourceMappingURL=requestdata.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Function that delays closing of a Vercel lambda until the provided promise is resolved.\n *\n * Vendored from https://www.npmjs.com/package/@vercel/functions\n */\nfunction vercelWaitUntil(task) {\n  const vercelRequestContextGlobal =\n    // @ts-expect-error This is not typed\n    GLOBAL_OBJ[Symbol.for('@vercel/request-context')];\n\n  const ctx =\n    vercelRequestContextGlobal && vercelRequestContextGlobal.get && vercelRequestContextGlobal.get()\n      ? vercelRequestContextGlobal.get()\n      : {};\n\n  if (ctx && ctx.waitUntil) {\n    ctx.waitUntil(task);\n  }\n}\n\nexport { vercelWaitUntil };\n//# sourceMappingURL=vercelWaitUntil.js.map\n","import { logger, flush } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\n/**\n * Flushes pending Sentry events with a 2 second timeout and in a way that cannot create unhandled promise rejections.\n */\nasync function flushSafelyWithTimeout() {\n  try {\n    DEBUG_BUILD && logger.log('Flushing events...');\n    await flush(2000);\n    DEBUG_BUILD && logger.log('Done flushing events');\n  } catch (e) {\n    DEBUG_BUILD && logger.log('Error while flushing events:\\n', e);\n  }\n}\n\nexport { flushSafelyWithTimeout };\n//# sourceMappingURL=responseEnd.js.map\n","import { withScope, httpRequestToRequestData, captureException, vercelWaitUntil } from '@sentry/core';\nimport { flushSafelyWithTimeout } from '../utils/responseEnd.js';\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  const statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  withScope(scope => {\n    if (req) {\n      const normalizedRequest = httpRequestToRequestData(req);\n      scope.setSDKProcessingMetadata({ normalizedRequest });\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    captureException(err || `_error.js called with falsy error (${err})`, {\n      mechanism: {\n        type: 'instrument',\n        handled: false,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      },\n    });\n  });\n\n  vercelWaitUntil(flushSafelyWithTimeout());\n}\n\nexport { captureUnderscoreErrorException };\n//# sourceMappingURL=_error.js.map\n","export * from '../shared/lib/constants';\n\n//# sourceMappingURL=constants.js.map","import { PHASE_PRODUCTION_BUILD } from 'next/constants';\n\n/**\n * Decide if the currently running process is part of the build phase or happening at runtime.\n */\nfunction isBuild() {\n  return process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD;\n}\n\nexport { isBuild };\n//# sourceMappingURL=isBuild.js.map\n","/**\n * If this attribute is attached to a transaction, the Next.js SDK will drop that transaction.\n */\nconst TRANSACTION_ATTR_SHOULD_DROP_TRANSACTION = 'sentry.drop_transaction';\n\nconst TRANSACTION_ATTR_SENTRY_TRACE_BACKFILL = 'sentry.sentry_trace_backfill';\n\nconst TRANSACTION_ATTR_SENTRY_ROUTE_BACKFILL = 'sentry.route_backfill';\n\nexport { TRANSACTION_ATTR_SENTRY_ROUTE_BACKFILL, TRANSACTION_ATTR_SENTRY_TRACE_BACKFILL, TRANSACTION_ATTR_SHOULD_DROP_TRANSACTION };\n//# sourceMappingURL=span-attributes-with-logic-attached.js.map\n","import { httpRequestToRequestData, getCurrentScope, getIsolationScope, getActiveSpan, getRootSpan, getTraceData, captureException } from '@sentry/core';\nimport { TRANSACTION_ATTR_SENTRY_ROUTE_BACKFILL } from '../span-attributes-with-logic-attached.js';\n\n/**\n * Wraps a function that potentially throws. If it does, the error is passed to `captureException` and rethrown.\n *\n * Note: This function turns the wrapped function into an asynchronous one.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorInstrumentation(\n  origFunction,\n) {\n  return async function ( ...origFunctionArguments) {\n    try {\n      return await origFunction.apply(this, origFunctionArguments);\n    } catch (e) {\n      // TODO: Extract error logic from `withSentry` in here or create a new wrapper with said logic or something like that.\n      captureException(e, { mechanism: { handled: false } });\n      throw e;\n    }\n  };\n}\n\n/**\n * Calls a server-side data fetching function (that takes a `req` and `res` object in its context) with tracing\n * instrumentation. A transaction will be created for the incoming request (if it doesn't already exist) in addition to\n * a span for the wrapped data fetching function.\n *\n * All of the above happens in an isolated domain, meaning all thrown errors will be associated with the correct span.\n *\n * @param origDataFetcher The data fetching method to call.\n * @param origFunctionArguments The arguments to call the data fetching method with.\n * @param req The data fetching function's request object.\n * @param res The data fetching function's response object.\n * @param options Options providing details for the created transaction and span.\n * @returns what the data fetching method call returned.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withTracedServerSideDataFetcher(\n  origDataFetcher,\n  req,\n  res,\n  options\n\n,\n) {\n  return async function (\n\n    ...args\n  ) {\n    const normalizedRequest = httpRequestToRequestData(req);\n    getCurrentScope().setTransactionName(`${options.dataFetchingMethodName} (${options.dataFetcherRouteName})`);\n    getIsolationScope().setSDKProcessingMetadata({ normalizedRequest });\n\n    const span = getActiveSpan();\n\n    // Only set the route backfill if the span is not for /_error\n    if (span && options.requestedRouteName !== '/_error') {\n      const root = getRootSpan(span);\n      root.setAttribute(TRANSACTION_ATTR_SENTRY_ROUTE_BACKFILL, options.requestedRouteName);\n    }\n\n    const { 'sentry-trace': sentryTrace, baggage } = getTraceData();\n\n    return {\n      sentryTrace: sentryTrace,\n      baggage: baggage,\n      data: await origDataFetcher.apply(this, args),\n    };\n  };\n}\n\n/**\n * Call a data fetcher and trace it. Only traces the function if there is an active transaction on the scope.\n *\n * We only do the following until we move transaction creation into this function: When called, the wrapped function\n * will also update the name of the active transaction with a parameterized route provided via the `options` argument.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function callDataFetcherTraced(\n  origFunction,\n  origFunctionArgs,\n) {\n  try {\n    return await origFunction(...origFunctionArgs);\n  } catch (e) {\n    captureException(e, { mechanism: { handled: false } });\n    throw e;\n  }\n}\n\nexport { callDataFetcherTraced, withErrorInstrumentation, withTracedServerSideDataFetcher };\n//# sourceMappingURL=wrapperUtils.js.map\n","import { isBuild } from '../utils/isBuild.js';\nimport { callDataFetcherTraced, withErrorInstrumentation } from '../utils/wrapperUtils.js';\n\n/**\n * Create a wrapped version of the user's exported `getStaticProps` function\n *\n * @param origGetStaticProps The user's `getStaticProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetStaticPropsWithSentry(\n  origGetStaticPropsa,\n  _parameterizedRoute,\n) {\n  return new Proxy(origGetStaticPropsa, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if (isBuild()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const errorWrappedGetStaticProps = withErrorInstrumentation(wrappingTarget);\n      return callDataFetcherTraced(errorWrappedGetStaticProps, args);\n    },\n  });\n}\n\nexport { wrapGetStaticPropsWithSentry };\n//# sourceMappingURL=wrapGetStaticPropsWithSentry.js.map\n","import { _nullishCoalesce } from './_nullishCoalesce.js';\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return _nullishCoalesce(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\nexport { _asyncNullishCoalesce };\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n","import { _asyncNullishCoalesce } from '@sentry/core';\nimport { isBuild } from '../utils/isBuild.js';\nimport { withTracedServerSideDataFetcher, withErrorInstrumentation } from '../utils/wrapperUtils.js';\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function\n *\n * @param origGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetInitialPropsWithSentry(origGetInitialProps) {\n  return new Proxy(origGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if (isBuild()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = withErrorInstrumentation(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = withTracedServerSideDataFetcher(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: context.pathname,\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const {\n          data: initialProps,\n          baggage,\n          sentryTrace,\n        }\n\n = await _asyncNullishCoalesce((await tracedGetInitialProps.apply(thisArg, args)), async () => ( {})); // Next.js allows undefined to be returned from a getInitialPropsFunction.\n\n        if (typeof initialProps === 'object' && initialProps !== null) {\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (sentryTrace) {\n            (initialProps )._sentryTraceData = sentryTrace;\n          }\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            (initialProps )._sentryBaggage = baggage;\n          }\n        }\n\n        return initialProps;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\nexport { wrapGetInitialPropsWithSentry };\n//# sourceMappingURL=wrapGetInitialPropsWithSentry.js.map\n","import { isBuild } from '../utils/isBuild.js';\nimport { withTracedServerSideDataFetcher, withErrorInstrumentation } from '../utils/wrapperUtils.js';\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom app (\"_app.js\").\n *\n * @param origAppGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapAppGetInitialPropsWithSentry(origAppGetInitialProps) {\n  return new Proxy(origAppGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if (isBuild()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context.ctx;\n\n      const errorWrappedAppGetInitialProps = withErrorInstrumentation(wrappingTarget);\n\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = withTracedServerSideDataFetcher(errorWrappedAppGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_app',\n          requestedRouteName: context.ctx.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const {\n          data: appGetInitialProps,\n          sentryTrace,\n          baggage,\n        }\n\n = await tracedGetInitialProps.apply(thisArg, args);\n\n        if (typeof appGetInitialProps === 'object' && appGetInitialProps !== null) {\n          // Per definition, `pageProps` is not optional, however an increased amount of users doesn't seem to call\n          // `App.getInitialProps(appContext)` in their custom `_app` pages which is required as per\n          // https://nextjs.org/docs/advanced-features/custom-app - resulting in missing `pageProps`.\n          // For this reason, we just handle the case where `pageProps` doesn't exist explicitly.\n          if (!(appGetInitialProps ).pageProps) {\n            (appGetInitialProps ).pageProps = {};\n          }\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (sentryTrace) {\n            (appGetInitialProps ).pageProps._sentryTraceData = sentryTrace;\n          }\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            (appGetInitialProps ).pageProps._sentryBaggage = baggage;\n          }\n        }\n\n        return appGetInitialProps;\n      } else {\n        return errorWrappedAppGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\nexport { wrapAppGetInitialPropsWithSentry };\n//# sourceMappingURL=wrapAppGetInitialPropsWithSentry.js.map\n","import { isBuild } from '../utils/isBuild.js';\nimport { withTracedServerSideDataFetcher, withErrorInstrumentation } from '../utils/wrapperUtils.js';\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom document (\"_document.js\").\n *\n * @param origDocumentGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapDocumentGetInitialPropsWithSentry(\n  origDocumentGetInitialProps,\n) {\n  return new Proxy(origDocumentGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if (isBuild()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = withErrorInstrumentation(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = withTracedServerSideDataFetcher(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_document',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const { data } = await tracedGetInitialProps.apply(thisArg, args);\n        return data;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\nexport { wrapDocumentGetInitialPropsWithSentry };\n//# sourceMappingURL=wrapDocumentGetInitialPropsWithSentry.js.map\n","import { isBuild } from '../utils/isBuild.js';\nimport { withTracedServerSideDataFetcher, withErrorInstrumentation } from '../utils/wrapperUtils.js';\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom error page (\"_error.js\").\n *\n * @param origErrorGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapErrorGetInitialPropsWithSentry(\n  origErrorGetInitialProps,\n) {\n  return new Proxy(origErrorGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if (isBuild()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = withErrorInstrumentation(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = withTracedServerSideDataFetcher(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_error',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const {\n          data: errorGetInitialProps,\n          baggage,\n          sentryTrace,\n        }\n\n = await tracedGetInitialProps.apply(thisArg, args);\n\n        if (typeof errorGetInitialProps === 'object' && errorGetInitialProps !== null) {\n          if (sentryTrace) {\n            // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n            (errorGetInitialProps )._sentryTraceData = sentryTrace;\n          }\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            (errorGetInitialProps )._sentryBaggage = baggage;\n          }\n        }\n\n        return errorGetInitialProps;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\nexport { wrapErrorGetInitialPropsWithSentry };\n//# sourceMappingURL=wrapErrorGetInitialPropsWithSentry.js.map\n","import { isBuild } from '../utils/isBuild.js';\nimport { withTracedServerSideDataFetcher, withErrorInstrumentation } from '../utils/wrapperUtils.js';\n\n/**\n * Create a wrapped version of the user's exported `getServerSideProps` function\n *\n * @param origGetServerSideProps The user's `getServerSideProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetServerSidePropsWithSentry(\n  origGetServerSideProps,\n  parameterizedRoute,\n) {\n  return new Proxy(origGetServerSideProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if (isBuild()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetServerSideProps = withErrorInstrumentation(wrappingTarget);\n      const tracedGetServerSideProps = withTracedServerSideDataFetcher(errorWrappedGetServerSideProps, req, res, {\n        dataFetcherRouteName: parameterizedRoute,\n        requestedRouteName: parameterizedRoute,\n        dataFetchingMethodName: 'getServerSideProps',\n      });\n\n      const {\n        data: serverSideProps,\n        baggage,\n        sentryTrace,\n      }\n\n = await (tracedGetServerSideProps.apply(thisArg, args) );\n\n      if (typeof serverSideProps === 'object' && serverSideProps !== null && 'props' in serverSideProps) {\n        // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n        if (sentryTrace) {\n          (serverSideProps.props )._sentryTraceData = sentryTrace;\n        }\n\n        // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n        if (baggage) {\n          (serverSideProps.props )._sentryBaggage = baggage;\n        }\n      }\n\n      return serverSideProps;\n    },\n  });\n}\n\nexport { wrapGetServerSidePropsWithSentry };\n//# sourceMappingURL=wrapGetServerSidePropsWithSentry.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { Scope, GLOBAL_OBJ, logger, startNewTrace, getActiveSpan, getRootSpan, spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { TRANSACTION_ATTR_SHOULD_DROP_TRANSACTION } from '../span-attributes-with-logic-attached.js';\n\nconst commonPropagationContextMap = new WeakMap();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param propagationContext The propagation context that should be shared between all the resources if no propagation context was registered yet.\n * @returns the shared propagation context.\n */\nfunction commonObjectToPropagationContext(\n  commonObject,\n  propagationContext,\n) {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoPropagationContext = commonPropagationContextMap.get(commonObject);\n    if (memoPropagationContext) {\n      return memoPropagationContext;\n    } else {\n      commonPropagationContextMap.set(commonObject, propagationContext);\n      return propagationContext;\n    }\n  } else {\n    return propagationContext;\n  }\n}\n\nconst commonIsolationScopeMap = new WeakMap();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param isolationScope The isolationScope that should be shared between all the resources if no isolation scope was created yet.\n * @returns the shared isolation scope.\n */\nfunction commonObjectToIsolationScope(commonObject) {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoIsolationScope = commonIsolationScopeMap.get(commonObject);\n    if (memoIsolationScope) {\n      return memoIsolationScope;\n    } else {\n      const newIsolationScope = new Scope();\n      commonIsolationScopeMap.set(commonObject, newIsolationScope);\n      return newIsolationScope;\n    }\n  } else {\n    return new Scope();\n  }\n}\n\nlet nextjsEscapedAsyncStorage;\n\n/**\n * Will mark the execution context of the callback as \"escaped\" from Next.js internal tracing by unsetting the active\n * span and propagation context. When an execution passes through this function multiple times, it is a noop after the\n * first time.\n */\nfunction escapeNextjsTracing(cb) {\n  const MaybeGlobalAsyncLocalStorage = (GLOBAL_OBJ )\n    .AsyncLocalStorage;\n\n  if (!MaybeGlobalAsyncLocalStorage) {\n    DEBUG_BUILD &&\n      logger.warn(\n        \"Tried to register AsyncLocalStorage async context strategy in a runtime that doesn't support AsyncLocalStorage.\",\n      );\n    return cb();\n  }\n\n  if (!nextjsEscapedAsyncStorage) {\n    nextjsEscapedAsyncStorage = new MaybeGlobalAsyncLocalStorage();\n  }\n\n  if (nextjsEscapedAsyncStorage.getStore()) {\n    return cb();\n  } else {\n    return startNewTrace(() => {\n      return nextjsEscapedAsyncStorage.run(true, () => {\n        return cb();\n      });\n    });\n  }\n}\n\n/**\n * Ideally this function never lands in the develop branch.\n *\n * Drops the entire span tree this function was called in, if it was a span tree created by Next.js.\n */\nfunction dropNextjsRootContext() {\n  const nextJsOwnedSpan = getActiveSpan();\n  if (nextJsOwnedSpan) {\n    const rootSpan = getRootSpan(nextJsOwnedSpan);\n    const rootSpanAttributes = spanToJSON(rootSpan).data;\n    if (_optionalChain([rootSpanAttributes, 'optionalAccess', _ => _['next.span_type']])) {\n      _optionalChain([getRootSpan, 'call', _2 => _2(nextJsOwnedSpan), 'optionalAccess', _3 => _3.setAttribute, 'call', _4 => _4(TRANSACTION_ATTR_SHOULD_DROP_TRANSACTION, true)]);\n    }\n  }\n}\n\nexport { commonObjectToIsolationScope, commonObjectToPropagationContext, dropNextjsRootContext, escapeNextjsTracing };\n//# sourceMappingURL=tracingUtils.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/core';\nimport { getActiveSpan, getRootSpan, getCapturedScopesOnSpan, setCapturedScopesOnSpan, winterCGHeadersToDict, withIsolationScope, withScope, propagationContextFromHeaders, generateTraceId, generateSpanId, startSpanManual, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, handleCallbackErrors, SPAN_STATUS_ERROR, SPAN_STATUS_OK, captureException, vercelWaitUntil, Scope } from '@sentry/core';\nimport { isNotFoundNavigationError, isRedirectNavigationError } from './nextNavigationErrorUtils.js';\nimport { TRANSACTION_ATTR_SENTRY_TRACE_BACKFILL } from './span-attributes-with-logic-attached.js';\nimport { flushSafelyWithTimeout } from './utils/responseEnd.js';\nimport { commonObjectToIsolationScope, commonObjectToPropagationContext } from './utils/tracingUtils.js';\n\n/**\n * Wraps an `app` directory server component with Sentry error instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapServerComponentWithSentry(\n  appDirComponent,\n  context,\n) {\n  const { componentRoute, componentType } = context;\n  // Even though users may define server components as async functions, for the client bundles\n  // Next.js will turn them into synchronous functions and it will transform any `await`s into instances of the `use`\n  // hook. 🤯\n  return new Proxy(appDirComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      const requestTraceId = _optionalChain([getActiveSpan, 'call', _ => _(), 'optionalAccess', _2 => _2.spanContext, 'call', _3 => _3(), 'access', _4 => _4.traceId]);\n      const isolationScope = commonObjectToIsolationScope(context.headers);\n\n      const activeSpan = getActiveSpan();\n      if (activeSpan) {\n        const rootSpan = getRootSpan(activeSpan);\n        const { scope } = getCapturedScopesOnSpan(rootSpan);\n        setCapturedScopesOnSpan(rootSpan, _nullishCoalesce(scope, () => ( new Scope())), isolationScope);\n      }\n\n      const headersDict = context.headers ? winterCGHeadersToDict(context.headers) : undefined;\n\n      isolationScope.setSDKProcessingMetadata({\n        normalizedRequest: {\n          headers: headersDict,\n        } ,\n      });\n\n      return withIsolationScope(isolationScope, () => {\n        return withScope(scope => {\n          scope.setTransactionName(`${componentType} Server Component (${componentRoute})`);\n\n          if (process.env.NEXT_RUNTIME === 'edge') {\n            const propagationContext = commonObjectToPropagationContext(\n              context.headers,\n              _optionalChain([headersDict, 'optionalAccess', _5 => _5['sentry-trace']])\n                ? propagationContextFromHeaders(headersDict['sentry-trace'], headersDict['baggage'])\n                : {\n                    traceId: requestTraceId || generateTraceId(),\n                    spanId: generateSpanId(),\n                  },\n            );\n\n            scope.setPropagationContext(propagationContext);\n          }\n\n          const activeSpan = getActiveSpan();\n          if (activeSpan) {\n            const rootSpan = getRootSpan(activeSpan);\n            const sentryTrace = _optionalChain([headersDict, 'optionalAccess', _6 => _6['sentry-trace']]);\n            if (sentryTrace) {\n              rootSpan.setAttribute(TRANSACTION_ATTR_SENTRY_TRACE_BACKFILL, sentryTrace);\n            }\n          }\n\n          return startSpanManual(\n            {\n              op: 'function.nextjs',\n              name: `${componentType} Server Component (${componentRoute})`,\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'component',\n                [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n              },\n            },\n            span => {\n              return handleCallbackErrors(\n                () => originalFunction.apply(thisArg, args),\n                error => {\n                  // When you read this code you might think: \"Wait a minute, shouldn't we set the status on the root span too?\"\n                  // The answer is: \"No.\" - The status of the root span is determined by whatever status code Next.js decides to put on the response.\n                  if (isNotFoundNavigationError(error)) {\n                    // We don't want to report \"not-found\"s\n                    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'not_found' });\n                  } else if (isRedirectNavigationError(error)) {\n                    // We don't want to report redirects\n                    span.setStatus({ code: SPAN_STATUS_OK });\n                  } else {\n                    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n                    captureException(error, {\n                      mechanism: {\n                        handled: false,\n                      },\n                    });\n                  }\n                },\n                () => {\n                  span.end();\n                  vercelWaitUntil(flushSafelyWithTimeout());\n                },\n              );\n            },\n          );\n        });\n      });\n    },\n  });\n}\n\nexport { wrapServerComponentWithSentry };\n//# sourceMappingURL=wrapServerComponentWithSentry.js.map\n","import { _nullishCoalesce } from '@sentry/core';\nimport { getActiveSpan, getRootSpan, getCapturedScopesOnSpan, setCapturedScopesOnSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_OP, withIsolationScope, getIsolationScope, withScope, winterCGHeadersToDict, propagationContextFromHeaders, handleCallbackErrors, setHttpStatus, captureException, Scope } from '@sentry/core';\nimport { isRedirectNavigationError, isNotFoundNavigationError } from './nextNavigationErrorUtils.js';\nimport { commonObjectToIsolationScope } from './utils/tracingUtils.js';\n\n/**\n * Wraps a Next.js App Router Route handler with Sentry error and performance instrumentation.\n *\n * NOTICE: This wrapper is for App Router API routes. If you are looking to wrap Pages Router API routes use `wrapApiHandlerWithSentry` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapRouteHandlerWithSentry(\n  routeHandler,\n  context,\n) {\n  const { method, parameterizedRoute, headers } = context;\n\n  return new Proxy(routeHandler, {\n    apply: async (originalFunction, thisArg, args) => {\n      const activeSpan = getActiveSpan();\n      const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n      let edgeRuntimeIsolationScopeOverride;\n      if (rootSpan && process.env.NEXT_RUNTIME === 'edge') {\n        const isolationScope = commonObjectToIsolationScope(headers);\n        const { scope } = getCapturedScopesOnSpan(rootSpan);\n        setCapturedScopesOnSpan(rootSpan, _nullishCoalesce(scope, () => ( new Scope())), isolationScope);\n\n        edgeRuntimeIsolationScopeOverride = isolationScope;\n\n        rootSpan.updateName(`${method} ${parameterizedRoute}`);\n        rootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n        rootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'http.server');\n      }\n\n      return withIsolationScope(\n        process.env.NEXT_RUNTIME === 'edge' ? edgeRuntimeIsolationScopeOverride : getIsolationScope(),\n        () => {\n          return withScope(async scope => {\n            scope.setTransactionName(`${method} ${parameterizedRoute}`);\n\n            if (process.env.NEXT_RUNTIME === 'edge') {\n              const completeHeadersDict = headers ? winterCGHeadersToDict(headers) : {};\n              const incomingPropagationContext = propagationContextFromHeaders(\n                completeHeadersDict['sentry-trace'],\n                completeHeadersDict['baggage'],\n              );\n              scope.setPropagationContext(incomingPropagationContext);\n              scope.setSDKProcessingMetadata({\n                normalizedRequest: {\n                  method,\n                  headers: completeHeadersDict,\n                } ,\n              });\n            }\n\n            const response = await handleCallbackErrors(\n              () => originalFunction.apply(thisArg, args),\n              error => {\n                // Next.js throws errors when calling `redirect()`. We don't wanna report these.\n                if (isRedirectNavigationError(error)) ; else if (isNotFoundNavigationError(error)) {\n                  if (activeSpan) {\n                    setHttpStatus(activeSpan, 404);\n                  }\n                  if (rootSpan) {\n                    setHttpStatus(rootSpan, 404);\n                  }\n                } else {\n                  captureException(error, {\n                    mechanism: {\n                      handled: false,\n                    },\n                  });\n                }\n              },\n            );\n\n            try {\n              if (response.status) {\n                if (activeSpan) {\n                  setHttpStatus(activeSpan, response.status);\n                }\n                if (rootSpan) {\n                  setHttpStatus(rootSpan, response.status);\n                }\n              }\n            } catch (e) {\n              // best effort - response may be undefined?\n            }\n\n            return response;\n          });\n        },\n      );\n    },\n  });\n}\n\nexport { wrapRouteHandlerWithSentry };\n//# sourceMappingURL=wrapRouteHandlerWithSentry.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { captureCheckIn } from '@sentry/core';\n\n/**\n * Wraps a function with Sentry crons instrumentation by automatically sending check-ins for the given Vercel crons config.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapApiHandlerWithSentryVercelCrons(\n  handler,\n  vercelCronsConfig,\n) {\n  return new Proxy(handler, {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    apply: (originalFunction, thisArg, args) => {\n      if (!args || !args[0]) {\n        return originalFunction.apply(thisArg, args);\n      }\n\n      const [req] = args ;\n\n      let maybePromiseResult;\n      const cronsKey = 'nextUrl' in req ? req.nextUrl.pathname : req.url;\n      const userAgentHeader = 'nextUrl' in req ? req.headers.get('user-agent') : req.headers['user-agent'];\n\n      if (\n        !vercelCronsConfig || // do nothing if vercel crons config is missing\n        !_optionalChain([userAgentHeader, 'optionalAccess', _ => _.includes, 'call', _2 => _2('vercel-cron')]) // do nothing if endpoint is not called from vercel crons\n      ) {\n        return originalFunction.apply(thisArg, args);\n      }\n\n      const vercelCron = vercelCronsConfig.find(vercelCron => vercelCron.path === cronsKey);\n\n      if (!vercelCron || !vercelCron.path || !vercelCron.schedule) {\n        return originalFunction.apply(thisArg, args);\n      }\n\n      const monitorSlug = vercelCron.path;\n\n      const checkInId = captureCheckIn(\n        {\n          monitorSlug,\n          status: 'in_progress',\n        },\n        {\n          maxRuntime: 60 * 12, // (minutes) so 12 hours - just a very high arbitrary number since we don't know the actual duration of the users cron job\n          schedule: {\n            type: 'crontab',\n            value: vercelCron.schedule,\n          },\n        },\n      );\n\n      const startTime = Date.now() / 1000;\n\n      const handleErrorCase = () => {\n        captureCheckIn({\n          checkInId,\n          monitorSlug,\n          status: 'error',\n          duration: Date.now() / 1000 - startTime,\n        });\n      };\n\n      try {\n        maybePromiseResult = originalFunction.apply(thisArg, args);\n      } catch (e) {\n        handleErrorCase();\n        throw e;\n      }\n\n      if (typeof maybePromiseResult === 'object' && maybePromiseResult !== null && 'then' in maybePromiseResult) {\n        Promise.resolve(maybePromiseResult).then(\n          () => {\n            captureCheckIn({\n              checkInId,\n              monitorSlug,\n              status: 'ok',\n              duration: Date.now() / 1000 - startTime,\n            });\n          },\n          () => {\n            handleErrorCase();\n          },\n        );\n\n        // It is very important that we return the original promise here, because Next.js attaches various properties\n        // to that promise and will throw if they are not on the returned value.\n        return maybePromiseResult;\n      } else {\n        captureCheckIn({\n          checkInId,\n          monitorSlug,\n          status: 'ok',\n          duration: Date.now() / 1000 - startTime,\n        });\n        return maybePromiseResult;\n      }\n    },\n  });\n}\n\nexport { wrapApiHandlerWithSentryVercelCrons };\n//# sourceMappingURL=wrapApiHandlerWithSentryVercelCrons.js.map\n","import { withIsolationScope, getCurrentScope, winterCGRequestToRequestData, getActiveSpan, getRootSpan, setCapturedScopesOnSpan, startSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, handleCallbackErrors, captureException, vercelWaitUntil } from '@sentry/core';\nimport { flushSafelyWithTimeout } from './utils/responseEnd.js';\n\n/**\n * Wraps Next.js middleware with Sentry error and performance instrumentation.\n *\n * @param middleware The middleware handler.\n * @returns a wrapped middleware handler.\n */\nfunction wrapMiddlewareWithSentry(\n  middleware,\n) {\n  return new Proxy(middleware, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      // TODO: We still should add central isolation scope creation for when our build-time instrumentation does not work anymore with turbopack.\n      return withIsolationScope(isolationScope => {\n        const req = args[0];\n        const currentScope = getCurrentScope();\n\n        let spanName;\n        let spanSource;\n\n        if (req instanceof Request) {\n          isolationScope.setSDKProcessingMetadata({\n            normalizedRequest: winterCGRequestToRequestData(req),\n          });\n          spanName = `middleware ${req.method} ${new URL(req.url).pathname}`;\n          spanSource = 'url';\n        } else {\n          spanName = 'middleware';\n          spanSource = 'component';\n        }\n\n        currentScope.setTransactionName(spanName);\n\n        const activeSpan = getActiveSpan();\n\n        if (activeSpan) {\n          // If there is an active span, it likely means that the automatic Next.js OTEL instrumentation worked and we can\n          // rely on that for parameterization.\n          spanName = 'middleware';\n          spanSource = 'component';\n\n          const rootSpan = getRootSpan(activeSpan);\n          if (rootSpan) {\n            setCapturedScopesOnSpan(rootSpan, currentScope, isolationScope);\n          }\n        }\n\n        return startSpan(\n          {\n            name: spanName,\n            op: 'http.server.middleware',\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: spanSource,\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs.wrapMiddlewareWithSentry',\n            },\n          },\n          () => {\n            return handleCallbackErrors(\n              () => wrappingTarget.apply(thisArg, args),\n              error => {\n                captureException(error, {\n                  mechanism: {\n                    type: 'instrument',\n                    handled: false,\n                  },\n                });\n              },\n              () => {\n                vercelWaitUntil(flushSafelyWithTimeout());\n              },\n            );\n          },\n        );\n      });\n    },\n  });\n}\n\nexport { wrapMiddlewareWithSentry };\n//# sourceMappingURL=wrapMiddlewareWithSentry.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { withIsolationScope, getCurrentScope, extractTraceparentData, captureException } from '@sentry/core';\n\nfunction isReactClassComponent(target) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return typeof target === 'function' && _optionalChain([target, 'optionalAccess', _ => _.prototype, 'optionalAccess', _2 => _2.isReactComponent]);\n}\n\n/**\n * Wraps a page component with Sentry error instrumentation.\n */\nfunction wrapPageComponentWithSentry(pageComponent) {\n  if (isReactClassComponent(pageComponent)) {\n    return class SentryWrappedPageComponent extends pageComponent {\n       render(...args) {\n        return withIsolationScope(() => {\n          const scope = getCurrentScope();\n          // We extract the sentry trace data that is put in the component props by datafetcher wrappers\n          const sentryTraceData =\n            typeof this.props === 'object' &&\n            this.props !== null &&\n            '_sentryTraceData' in this.props &&\n            typeof this.props._sentryTraceData === 'string'\n              ? this.props._sentryTraceData\n              : undefined;\n\n          if (sentryTraceData) {\n            const traceparentData = extractTraceparentData(sentryTraceData);\n            scope.setContext('trace', {\n              span_id: _optionalChain([traceparentData, 'optionalAccess', _3 => _3.parentSpanId]),\n              trace_id: _optionalChain([traceparentData, 'optionalAccess', _4 => _4.traceId]),\n            });\n          }\n\n          try {\n            return super.render(...args);\n          } catch (e) {\n            captureException(e, {\n              mechanism: {\n                handled: false,\n              },\n            });\n            throw e;\n          }\n        });\n      }\n    };\n  } else if (typeof pageComponent === 'function') {\n    return new Proxy(pageComponent, {\n      apply(target, thisArg, argArray) {\n        return withIsolationScope(() => {\n          const scope = getCurrentScope();\n          // We extract the sentry trace data that is put in the component props by datafetcher wrappers\n          const sentryTraceData = _optionalChain([argArray, 'optionalAccess', _5 => _5[0], 'optionalAccess', _6 => _6._sentryTraceData]);\n\n          if (sentryTraceData) {\n            const traceparentData = extractTraceparentData(sentryTraceData);\n            scope.setContext('trace', {\n              span_id: _optionalChain([traceparentData, 'optionalAccess', _7 => _7.parentSpanId]),\n              trace_id: _optionalChain([traceparentData, 'optionalAccess', _8 => _8.traceId]),\n            });\n          }\n\n          try {\n            return target.apply(thisArg, argArray);\n          } catch (e) {\n            captureException(e, {\n              mechanism: {\n                handled: false,\n              },\n            });\n            throw e;\n          }\n        });\n      },\n    });\n  } else {\n    return pageComponent;\n  }\n}\n\nexport { wrapPageComponentWithSentry };\n//# sourceMappingURL=wrapPageComponentWithSentry.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/core';\nimport { getActiveSpan, getRootSpan, getCapturedScopesOnSpan, setCapturedScopesOnSpan, winterCGHeadersToDict, withIsolationScope, withScope, propagationContextFromHeaders, generateTraceId, generateSpanId, startSpanManual, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, handleCallbackErrors, SPAN_STATUS_ERROR, SPAN_STATUS_OK, captureException, Scope, getClient } from '@sentry/core';\nimport { isNotFoundNavigationError, isRedirectNavigationError } from './nextNavigationErrorUtils.js';\nimport { TRANSACTION_ATTR_SENTRY_TRACE_BACKFILL } from './span-attributes-with-logic-attached.js';\nimport { commonObjectToIsolationScope, commonObjectToPropagationContext } from './utils/tracingUtils.js';\n\n/**\n * Wraps a generation function (e.g. generateMetadata) with Sentry error and performance instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapGenerationFunctionWithSentry(\n  generationFunction,\n  context,\n) {\n  const { requestAsyncStorage, componentRoute, componentType, generationFunctionIdentifier } = context;\n  return new Proxy(generationFunction, {\n    apply: (originalFunction, thisArg, args) => {\n      const requestTraceId = _optionalChain([getActiveSpan, 'call', _ => _(), 'optionalAccess', _2 => _2.spanContext, 'call', _3 => _3(), 'access', _4 => _4.traceId]);\n      let headers = undefined;\n      // We try-catch here just in case anything goes wrong with the async storage here goes wrong since it is Next.js internal API\n      try {\n        headers = _optionalChain([requestAsyncStorage, 'optionalAccess', _5 => _5.getStore, 'call', _6 => _6(), 'optionalAccess', _7 => _7.headers]);\n      } catch (e) {\n        /** empty */\n      }\n\n      const isolationScope = commonObjectToIsolationScope(headers);\n\n      const activeSpan = getActiveSpan();\n      if (activeSpan) {\n        const rootSpan = getRootSpan(activeSpan);\n        const { scope } = getCapturedScopesOnSpan(rootSpan);\n        setCapturedScopesOnSpan(rootSpan, _nullishCoalesce(scope, () => ( new Scope())), isolationScope);\n      }\n\n      let data = undefined;\n      if (_optionalChain([getClient, 'call', _8 => _8(), 'optionalAccess', _9 => _9.getOptions, 'call', _10 => _10(), 'access', _11 => _11.sendDefaultPii])) {\n        const props = args[0];\n        const params = props && typeof props === 'object' && 'params' in props ? props.params : undefined;\n        const searchParams =\n          props && typeof props === 'object' && 'searchParams' in props ? props.searchParams : undefined;\n        data = { params, searchParams };\n      }\n\n      const headersDict = headers ? winterCGHeadersToDict(headers) : undefined;\n\n      return withIsolationScope(isolationScope, () => {\n        return withScope(scope => {\n          scope.setTransactionName(`${componentType}.${generationFunctionIdentifier} (${componentRoute})`);\n\n          isolationScope.setSDKProcessingMetadata({\n            normalizedRequest: {\n              headers: headersDict,\n            } ,\n          });\n\n          const activeSpan = getActiveSpan();\n          if (activeSpan) {\n            const rootSpan = getRootSpan(activeSpan);\n            const sentryTrace = _optionalChain([headersDict, 'optionalAccess', _12 => _12['sentry-trace']]);\n            if (sentryTrace) {\n              rootSpan.setAttribute(TRANSACTION_ATTR_SENTRY_TRACE_BACKFILL, sentryTrace);\n            }\n          }\n\n          const propagationContext = commonObjectToPropagationContext(\n            headers,\n            _optionalChain([headersDict, 'optionalAccess', _13 => _13['sentry-trace']])\n              ? propagationContextFromHeaders(headersDict['sentry-trace'], headersDict['baggage'])\n              : {\n                  traceId: requestTraceId || generateTraceId(),\n                  spanId: generateSpanId(),\n                },\n          );\n          scope.setPropagationContext(propagationContext);\n\n          scope.setExtra('route_data', data);\n\n          return startSpanManual(\n            {\n              op: 'function.nextjs',\n              name: `${componentType}.${generationFunctionIdentifier} (${componentRoute})`,\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n              },\n            },\n            span => {\n              return handleCallbackErrors(\n                () => originalFunction.apply(thisArg, args),\n                err => {\n                  // When you read this code you might think: \"Wait a minute, shouldn't we set the status on the root span too?\"\n                  // The answer is: \"No.\" - The status of the root span is determined by whatever status code Next.js decides to put on the response.\n                  if (isNotFoundNavigationError(err)) {\n                    // We don't want to report \"not-found\"s\n                    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'not_found' });\n                    getRootSpan(span).setStatus({ code: SPAN_STATUS_ERROR, message: 'not_found' });\n                  } else if (isRedirectNavigationError(err)) {\n                    // We don't want to report redirects\n                    span.setStatus({ code: SPAN_STATUS_OK });\n                  } else {\n                    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n                    getRootSpan(span).setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n                    captureException(err, {\n                      mechanism: {\n                        handled: false,\n                      },\n                    });\n                  }\n                },\n                () => {\n                  span.end();\n                },\n              );\n            },\n          );\n        });\n      });\n    },\n  });\n}\n\nexport { wrapGenerationFunctionWithSentry };\n//# sourceMappingURL=wrapGenerationFunctionWithSentry.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/core';\nimport { withIsolationScope, logger, getActiveSpan, continueTrace, startSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, handleCallbackErrors, SPAN_STATUS_ERROR, captureException, getIsolationScope, vercelWaitUntil, getClient } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isNotFoundNavigationError, isRedirectNavigationError } from './nextNavigationErrorUtils.js';\nimport { flushSafelyWithTimeout } from './utils/responseEnd.js';\n\n/**\n * Wraps a Next.js Server Action implementation with Sentry Error and Performance instrumentation.\n */\nfunction withServerActionInstrumentation(\n  ...args\n) {\n  if (typeof args[1] === 'function') {\n    const [serverActionName, callback] = args;\n    return withServerActionInstrumentationImplementation(serverActionName, {}, callback);\n  } else {\n    const [serverActionName, options, callback] = args;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return withServerActionInstrumentationImplementation(serverActionName, options, callback);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function withServerActionInstrumentationImplementation(\n  serverActionName,\n  options,\n  callback,\n) {\n  return withIsolationScope(async isolationScope => {\n    const sendDefaultPii = _optionalChain([getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3(), 'access', _4 => _4.sendDefaultPii]);\n\n    let sentryTraceHeader;\n    let baggageHeader;\n    const fullHeadersObject = {};\n    try {\n      const awaitedHeaders = await options.headers;\n      sentryTraceHeader = _nullishCoalesce(_optionalChain([awaitedHeaders, 'optionalAccess', _5 => _5.get, 'call', _6 => _6('sentry-trace')]), () => ( undefined));\n      baggageHeader = _optionalChain([awaitedHeaders, 'optionalAccess', _7 => _7.get, 'call', _8 => _8('baggage')]);\n      _optionalChain([awaitedHeaders, 'optionalAccess', _9 => _9.forEach, 'call', _10 => _10((value, key) => {\n        fullHeadersObject[key] = value;\n      })]);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.warn(\n          \"Sentry wasn't able to extract the tracing headers for a server action. Will not trace this request.\",\n        );\n    }\n\n    isolationScope.setTransactionName(`serverAction/${serverActionName}`);\n    isolationScope.setSDKProcessingMetadata({\n      normalizedRequest: {\n        headers: fullHeadersObject,\n      } ,\n    });\n\n    // Normally, there is an active span here (from Next.js OTEL) and we just use that as parent\n    // Else, we manually continueTrace from the incoming headers\n    const continueTraceIfNoActiveSpan = getActiveSpan()\n      ? (_opts, callback) => callback()\n      : continueTrace;\n\n    return continueTraceIfNoActiveSpan(\n      {\n        sentryTrace: sentryTraceHeader,\n        baggage: baggageHeader,\n      },\n      async () => {\n        try {\n          return await startSpan(\n            {\n              op: 'function.server_action',\n              name: `serverAction/${serverActionName}`,\n              forceTransaction: true,\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n              },\n            },\n            async span => {\n              const result = await handleCallbackErrors(callback, error => {\n                if (isNotFoundNavigationError(error)) {\n                  // We don't want to report \"not-found\"s\n                  span.setStatus({ code: SPAN_STATUS_ERROR, message: 'not_found' });\n                } else if (isRedirectNavigationError(error)) {\n                  // Don't do anything for redirects\n                } else {\n                  span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n                  captureException(error, {\n                    mechanism: {\n                      handled: false,\n                    },\n                  });\n                }\n              });\n\n              if (options.recordResponse !== undefined ? options.recordResponse : sendDefaultPii) {\n                getIsolationScope().setExtra('server_action_result', result);\n              }\n\n              if (options.formData) {\n                options.formData.forEach((value, key) => {\n                  getIsolationScope().setExtra(\n                    `server_action_form_data.${key}`,\n                    typeof value === 'string' ? value : '[non-string value]',\n                  );\n                });\n              }\n\n              return result;\n            },\n          );\n        } finally {\n          vercelWaitUntil(flushSafelyWithTimeout());\n        }\n      },\n    );\n  });\n}\n\nexport { withServerActionInstrumentation };\n//# sourceMappingURL=withServerActionInstrumentation.js.map\n","import { withScope, headersToDict, captureException } from '@sentry/core';\n\n/**\n * Reports errors passed to the the Next.js `onRequestError` instrumentation hook.\n */\nfunction captureRequestError(error, request, errorContext) {\n  withScope(scope => {\n    scope.setSDKProcessingMetadata({\n      normalizedRequest: {\n        headers: headersToDict(request.headers),\n        method: request.method,\n      } ,\n    });\n\n    scope.setContext('nextjs', {\n      request_path: request.path,\n      router_kind: errorContext.routerKind,\n      router_path: errorContext.routePath,\n      route_type: errorContext.routeType,\n    });\n\n    scope.setTransactionName(errorContext.routePath);\n\n    captureException(error, {\n      mechanism: {\n        handled: false,\n      },\n    });\n  });\n}\n\n/**\n * Reports errors passed to the the Next.js `onRequestError` instrumentation hook.\n *\n * @deprecated Use `captureRequestError` instead.\n */\n// TODO(v9): Remove this export\nconst experimental_captureRequestError = captureRequestError;\n\nexport { captureRequestError, experimental_captureRequestError };\n//# sourceMappingURL=captureRequestError.js.map\n","import { registerSpanErrorInstrumentation } from './errors.js';\n\n/**\n * @deprecated Use `registerSpanErrorInstrumentation()` instead. In v9, this function will be removed. Note that you don't need to call this in Node-based SDKs or when using `browserTracingIntegration`.\n */\nfunction addTracingExtensions() {\n  registerSpanErrorInstrumentation();\n}\n\nexport { addTracingExtensions };\n//# sourceMappingURL=hubextensions.js.map\n","import { getClient, withScope } from '../currentScopes.js';\nimport { captureMessage, captureException } from '../exports.js';\nimport { defineIntegration } from '../integration.js';\nimport { addConsoleInstrumentationHandler } from '../utils-hoist/instrument/console.js';\nimport { CONSOLE_LEVELS } from '../utils-hoist/logger.js';\nimport { addExceptionMechanism } from '../utils-hoist/misc.js';\nimport { severityLevelFromString } from '../utils-hoist/severity.js';\nimport { safeJoin } from '../utils-hoist/string.js';\nimport { GLOBAL_OBJ } from '../utils-hoist/worldwide.js';\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n  // TODO(v9): Flip default value to `true`\n  const handled = !!options.handled;\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level, handled);\n      });\n    },\n  };\n}) ;\n\n/**\n * Send Console API calls as Sentry Events.\n */\nconst captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\nfunction consoleHandler(args, level, handled) {\n  const captureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert') {\n      if (!args[0]) {\n        const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n        scope.setExtra('arguments', args.slice(1));\n        captureMessage(message, captureContext);\n      }\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n\nexport { captureConsoleIntegration };\n//# sourceMappingURL=captureconsole.js.map\n","import { getClient, getCurrentScope } from './currentScopes.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\n\n/**\n * Send user feedback to Sentry.\n */\nfunction captureFeedback(\n  params,\n  hint = {},\n  scope = getCurrentScope(),\n) {\n  const { message, name, email, url, source, associatedEventId, tags } = params;\n\n  const feedbackEvent = {\n    contexts: {\n      feedback: dropUndefinedKeys({\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n        associated_event_id: associatedEventId,\n      }),\n    },\n    type: 'feedback',\n    level: 'info',\n    tags,\n  };\n\n  const client = (scope && scope.getClient()) || getClient();\n\n  if (client) {\n    client.emit('beforeSendFeedback', feedbackEvent, hint);\n  }\n\n  const eventId = scope.captureEvent(feedbackEvent, hint);\n\n  return eventId;\n}\n\nexport { captureFeedback };\n//# sourceMappingURL=feedback.js.map\n","import { defineIntegration } from '../integration.js';\nimport { consoleSandbox } from '../utils-hoist/logger.js';\n\nconst INTEGRATION_NAME = 'Debug';\n\nconst _debugIntegration = ((options = {}) => {\n  const _options = {\n    debugger: false,\n    stringify: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      client.on('beforeSendEvent', (event, hint) => {\n        if (_options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        consoleSandbox(() => {\n          if (_options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint && Object.keys(hint).length) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint && Object.keys(hint).length) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      });\n    },\n  };\n}) ;\n\n/**\n * Integration to debug sent Sentry events.\n * This integration should not be used in production.\n *\n * @deprecated This integration is deprecated and will be removed in the next major version of the SDK.\n * To log outgoing events, use [Hook Options](https://docs.sentry.io/platforms/javascript/configuration/options/#hooks) (`beforeSend`, `beforeSendTransaction`, ...).\n */\nconst debugIntegration = defineIntegration(_debugIntegration);\n\nexport { debugIntegration };\n//# sourceMappingURL=debug.js.map\n","import { defineIntegration } from '../integration.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { isError, isPlainObject } from '../utils-hoist/is.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { normalize } from '../utils-hoist/normalize.js';\nimport { addNonEnumerableProperty } from '../utils-hoist/object.js';\nimport { truncate } from '../utils-hoist/string.js';\n\nconst INTEGRATION_NAME = 'ExtraErrorData';\n\n/**\n * Extract additional data for from original exceptions.\n */\nconst _extraErrorDataIntegration = ((options = {}) => {\n  const { depth = 3, captureErrorCause = true } = options;\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, hint, client) {\n      const { maxValueLength = 250 } = client.getOptions();\n      return _enhanceEventWithErrorData(event, hint, depth, captureErrorCause, maxValueLength);\n    },\n  };\n}) ;\n\nconst extraErrorDataIntegration = defineIntegration(_extraErrorDataIntegration);\n\nfunction _enhanceEventWithErrorData(\n  event,\n  hint = {},\n  depth,\n  captureErrorCause,\n  maxValueLength,\n) {\n  if (!hint.originalException || !isError(hint.originalException)) {\n    return event;\n  }\n  const exceptionName = (hint.originalException ).name || hint.originalException.constructor.name;\n\n  const errorData = _extractErrorData(hint.originalException , captureErrorCause, maxValueLength);\n\n  if (errorData) {\n    const contexts = {\n      ...event.contexts,\n    };\n\n    const normalizedErrorData = normalize(errorData, depth);\n\n    if (isPlainObject(normalizedErrorData)) {\n      // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n      // potentially truncate the data we just already normalized, with a certain depth setting.\n      addNonEnumerableProperty(normalizedErrorData, '__sentry_skip_normalization__', true);\n      contexts[exceptionName] = normalizedErrorData;\n    }\n\n    return {\n      ...event,\n      contexts,\n    };\n  }\n\n  return event;\n}\n\n/**\n * Extract extra information from the Error object\n */\nfunction _extractErrorData(\n  error,\n  captureErrorCause,\n  maxValueLength,\n) {\n  // We are trying to enhance already existing event, so no harm done if it won't succeed\n  try {\n    const nativeKeys = [\n      'name',\n      'message',\n      'stack',\n      'line',\n      'column',\n      'fileName',\n      'lineNumber',\n      'columnNumber',\n      'toJSON',\n    ];\n\n    const extraErrorInfo = {};\n\n    // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n    for (const key of Object.keys(error)) {\n      if (nativeKeys.indexOf(key) !== -1) {\n        continue;\n      }\n      const value = error[key];\n      extraErrorInfo[key] = isError(value) || typeof value === 'string' ? truncate(`${value}`, maxValueLength) : value;\n    }\n\n    // Error.cause is a standard property that is non enumerable, we therefore need to access it separately.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n    if (captureErrorCause && error.cause !== undefined) {\n      extraErrorInfo.cause = isError(error.cause) ? error.cause.toString() : error.cause;\n    }\n\n    // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n    if (typeof error.toJSON === 'function') {\n      const serializedError = error.toJSON() ;\n\n      for (const key of Object.keys(serializedError)) {\n        const value = serializedError[key];\n        extraErrorInfo[key] = isError(value) ? value.toString() : value;\n      }\n    }\n\n    return extraErrorInfo;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error('Unable to extract extra data from the Error object:', oO);\n  }\n\n  return null;\n}\n\nexport { extraErrorDataIntegration };\n//# sourceMappingURL=extraerrordata.js.map\n","import { addBreadcrumb } from './breadcrumbs.js';\nimport { getCurrentScope, withScope, getClient, getIsolationScope } from './currentScopes.js';\nimport { captureEvent, setUser, setTags, setTag, setExtra, setExtras, setContext, startSession, endSession } from './exports.js';\n\n/**\n * This is for legacy reasons, and returns a proxy object instead of a hub to be used.\n *\n * @deprecated Use the methods directly from the top level Sentry API (e.g. `Sentry.withScope`)\n * For more information see our migration guide for\n * [replacing `getCurrentHub` and `Hub`](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n * usage\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getCurrentHubShim() {\n  return {\n    bindClient(client) {\n      const scope = getCurrentScope();\n      scope.setClient(client);\n    },\n\n    withScope,\n    getClient: () => getClient() ,\n    getScope: getCurrentScope,\n    getIsolationScope,\n    captureException: (exception, hint) => {\n      return getCurrentScope().captureException(exception, hint);\n    },\n    captureMessage: (message, level, hint) => {\n      return getCurrentScope().captureMessage(message, level, hint);\n    },\n    captureEvent,\n    addBreadcrumb,\n    setUser,\n    setTags,\n    setTag,\n    setExtra,\n    setExtras,\n    setContext,\n\n    getIntegration(integration) {\n      const client = getClient();\n      return (client && client.getIntegrationByName(integration.id)) || null;\n    },\n\n    startSession,\n    endSession,\n    captureSession(end) {\n      // both send the update and pull the session from the scope\n      if (end) {\n        return endSession();\n      }\n\n      // only send the update\n      _sendSessionUpdate();\n    },\n  };\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst getCurrentHub = getCurrentHubShim;\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const session = scope.getSession();\n  if (client && session) {\n    client.captureSession(session);\n  }\n}\n\nexport { getCurrentHub, getCurrentHubShim };\n//# sourceMappingURL=getCurrentHubShim.js.map\n","import { getEnvelopeEndpointWithUrlEncodedAuth } from '../api.js';\nimport { dsnFromString } from '../utils-hoist/dsn.js';\nimport { createEnvelope, forEachEnvelopeItem } from '../utils-hoist/envelope.js';\n\n/**\n * Gets an event from an envelope.\n *\n * This is only exported for use in the tests\n */\nfunction eventFromEnvelope(env, types) {\n  let event;\n\n  forEachEnvelopeItem(env, (item, type) => {\n    if (types.includes(type)) {\n      event = Array.isArray(item) ? (item )[1] : undefined;\n    }\n    // bail out if we found an event\n    return !!event;\n  });\n\n  return event;\n}\n\n/**\n * Creates a transport that overrides the release on all events.\n */\nfunction makeOverrideReleaseTransport(\n  createTransport,\n  release,\n) {\n  return options => {\n    const transport = createTransport(options);\n\n    return {\n      ...transport,\n      send: async (envelope) => {\n        const event = eventFromEnvelope(envelope, ['event', 'transaction', 'profile', 'replay_event']);\n\n        if (event) {\n          event.release = release;\n        }\n        return transport.send(envelope);\n      },\n    };\n  };\n}\n\n/** Overrides the DSN in the envelope header  */\nfunction overrideDsn(envelope, dsn) {\n  return createEnvelope(\n    dsn\n      ? {\n          ...envelope[0],\n          dsn,\n        }\n      : envelope[0],\n    envelope[1],\n  );\n}\n\n/**\n * Creates a transport that can send events to different DSNs depending on the envelope contents.\n */\nfunction makeMultiplexedTransport(\n  createTransport,\n  matcher,\n) {\n  return options => {\n    const fallbackTransport = createTransport(options);\n    const otherTransports = new Map();\n\n    function getTransport(dsn, release) {\n      // We create a transport for every unique dsn/release combination as there may be code from multiple releases in\n      // use at the same time\n      const key = release ? `${dsn}:${release}` : dsn;\n\n      let transport = otherTransports.get(key);\n\n      if (!transport) {\n        const validatedDsn = dsnFromString(dsn);\n        if (!validatedDsn) {\n          return undefined;\n        }\n        const url = getEnvelopeEndpointWithUrlEncodedAuth(validatedDsn, options.tunnel);\n\n        transport = release\n          ? makeOverrideReleaseTransport(createTransport, release)({ ...options, url })\n          : createTransport({ ...options, url });\n\n        otherTransports.set(key, transport);\n      }\n\n      return [dsn, transport];\n    }\n\n    async function send(envelope) {\n      function getEvent(types) {\n        const eventTypes = types && types.length ? types : ['event'];\n        return eventFromEnvelope(envelope, eventTypes);\n      }\n\n      const transports = matcher({ envelope, getEvent })\n        .map(result => {\n          if (typeof result === 'string') {\n            return getTransport(result, undefined);\n          } else {\n            return getTransport(result.dsn, result.release);\n          }\n        })\n        .filter((t) => !!t);\n\n      // If we have no transports to send to, use the fallback transport\n      // Don't override the DSN in the header for the fallback transport. '' is falsy\n      const transportsWithFallback = transports.length ? transports : [['', fallbackTransport]];\n\n      const results = (await Promise.all(\n        transportsWithFallback.map(([dsn, transport]) => transport.send(overrideDsn(envelope, dsn))),\n      )) ;\n\n      return results[0];\n    }\n\n    async function flush(timeout) {\n      const allTransports = [...otherTransports.values(), fallbackTransport];\n      const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n      return results.every(r => r);\n    }\n\n    return {\n      send,\n      flush,\n    };\n  };\n}\n\nexport { eventFromEnvelope, makeMultiplexedTransport };\n//# sourceMappingURL=multiplexed.js.map\n","import { GLOBAL_OBJ } from './utils-hoist/worldwide.js';\n\n/** Keys are source filename/url, values are metadata objects. */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst filenameMetadataMap = new Map();\n/** Set of stack strings that have already been parsed. */\nconst parsedStacks = new Set();\n\nfunction ensureMetadataStacksAreParsed(parser) {\n  if (!GLOBAL_OBJ._sentryModuleMetadata) {\n    return;\n  }\n\n  for (const stack of Object.keys(GLOBAL_OBJ._sentryModuleMetadata)) {\n    const metadata = GLOBAL_OBJ._sentryModuleMetadata[stack];\n\n    if (parsedStacks.has(stack)) {\n      continue;\n    }\n\n    // Ensure this stack doesn't get parsed again\n    parsedStacks.add(stack);\n\n    const frames = parser(stack);\n\n    // Go through the frames starting from the top of the stack and find the first one with a filename\n    for (const frame of frames.reverse()) {\n      if (frame.filename) {\n        // Save the metadata for this filename\n        filenameMetadataMap.set(frame.filename, metadata);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Retrieve metadata for a specific JavaScript file URL.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getMetadataForUrl(parser, filename) {\n  ensureMetadataStacksAreParsed(parser);\n  return filenameMetadataMap.get(filename);\n}\n\n/**\n * Adds metadata to stack frames.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\nfunction addMetadataToStackFrames(parser, event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        if (!frame.filename || frame.module_metadata) {\n          continue;\n        }\n\n        const metadata = getMetadataForUrl(parser, frame.filename);\n\n        if (metadata) {\n          frame.module_metadata = metadata;\n        }\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Strips metadata from stack frames.\n */\nfunction stripMetadataFromStackFrames(event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        delete frame.module_metadata;\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\nexport { addMetadataToStackFrames, getMetadataForUrl, stripMetadataFromStackFrames };\n//# sourceMappingURL=metadata.js.map\n","import { defineIntegration } from '../integration.js';\nimport { stripMetadataFromStackFrames, addMetadataToStackFrames } from '../metadata.js';\nimport { forEachEnvelopeItem } from '../utils-hoist/envelope.js';\n\n/**\n * Adds module metadata to stack frames.\n *\n * Metadata can be injected by the Sentry bundler plugins using the `moduleMetadata` config option.\n *\n * When this integration is added, the metadata passed to the bundler plugin is added to the stack frames of all events\n * under the `module_metadata` property. This can be used to help in tagging or routing of events from different teams\n * our sources\n */\nconst moduleMetadataIntegration = defineIntegration(() => {\n  return {\n    name: 'ModuleMetadata',\n    setup(client) {\n      // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n      client.on('beforeEnvelope', envelope => {\n        forEachEnvelopeItem(envelope, (item, type) => {\n          if (type === 'event') {\n            const event = Array.isArray(item) ? (item )[1] : undefined;\n\n            if (event) {\n              stripMetadataFromStackFrames(event);\n              item[1] = event;\n            }\n          }\n        });\n      });\n\n      client.on('applyFrameMetadata', event => {\n        // Only apply stack frame metadata to error events\n        if (event.type) {\n          return;\n        }\n\n        const stackParser = client.getOptions().stackParser;\n        addMetadataToStackFrames(stackParser, event);\n      });\n    },\n  };\n});\n\nexport { moduleMetadataIntegration };\n//# sourceMappingURL=metadata.js.map\n","/**\n * Tagged template function which returns parameterized representation of the message\n * For example: parameterize`This is a log statement with ${x} and ${y} params`, would return:\n * \"__sentry_template_string__\": 'This is a log statement with %s and %s params',\n * \"__sentry_template_values__\": ['first', 'second']\n * @param strings An array of string values splitted between expressions\n * @param values Expressions extracted from template string\n * @returns String with template information in __sentry_template_string__ and __sentry_template_values__ properties\n */\nfunction parameterize(strings, ...values) {\n  const formatted = new String(String.raw(strings, ...values)) ;\n  formatted.__sentry_template_string__ = strings.join('\\x00').replace(/%/g, '%%').replace(/\\0/g, '%s');\n  formatted.__sentry_template_values__ = values;\n  return formatted;\n}\n\nexport { parameterize };\n//# sourceMappingURL=parameterize.js.map\n","import { defineIntegration } from '../integration.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\n\nconst INTEGRATION_NAME = 'SessionTiming';\n\nconst _sessionTimingIntegration = (() => {\n  const startTime = timestampInSeconds() * 1000;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      const now = timestampInSeconds() * 1000;\n\n      return {\n        ...event,\n        extra: {\n          ...event.extra,\n          ['session:start']: startTime,\n          ['session:duration']: now - startTime,\n          ['session:end']: now,\n        },\n      };\n    },\n  };\n}) ;\n\n/**\n * This function adds duration since the sessionTimingIntegration was initialized\n * till the time event was sent.\n *\n * @deprecated This integration is deprecated and will be removed in the next major version of the SDK.\n * To capture session durations alongside events, use [Context](https://docs.sentry.io/platforms/javascript/enriching-events/context/) (`Sentry.setContext()`).\n */\nconst sessionTimingIntegration = defineIntegration(_sessionTimingIntegration);\n\nexport { sessionTimingIntegration };\n//# sourceMappingURL=sessiontiming.js.map\n","import { defineIntegration } from '../integration.js';\nimport { stripMetadataFromStackFrames, addMetadataToStackFrames } from '../metadata.js';\nimport { forEachEnvelopeItem } from '../utils-hoist/envelope.js';\nimport { getFramesFromEvent } from '../utils-hoist/stacktrace.js';\n\n/**\n * This integration allows you to filter out, or tag error events that do not come from user code marked with a bundle key via the Sentry bundler plugins.\n */\nconst thirdPartyErrorFilterIntegration = defineIntegration((options) => {\n  return {\n    name: 'ThirdPartyErrorsFilter',\n    setup(client) {\n      // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n      // TODO(lforst): Move this cleanup logic into a more central place in the SDK.\n      client.on('beforeEnvelope', envelope => {\n        forEachEnvelopeItem(envelope, (item, type) => {\n          if (type === 'event') {\n            const event = Array.isArray(item) ? (item )[1] : undefined;\n\n            if (event) {\n              stripMetadataFromStackFrames(event);\n              item[1] = event;\n            }\n          }\n        });\n      });\n\n      client.on('applyFrameMetadata', event => {\n        // Only apply stack frame metadata to error events\n        if (event.type) {\n          return;\n        }\n\n        const stackParser = client.getOptions().stackParser;\n        addMetadataToStackFrames(stackParser, event);\n      });\n    },\n\n    processEvent(event) {\n      const frameKeys = getBundleKeysForAllFramesWithFilenames(event);\n\n      if (frameKeys) {\n        const arrayMethod =\n          options.behaviour === 'drop-error-if-contains-third-party-frames' ||\n          options.behaviour === 'apply-tag-if-contains-third-party-frames'\n            ? 'some'\n            : 'every';\n\n        const behaviourApplies = frameKeys[arrayMethod](keys => !keys.some(key => options.filterKeys.includes(key)));\n\n        if (behaviourApplies) {\n          const shouldDrop =\n            options.behaviour === 'drop-error-if-contains-third-party-frames' ||\n            options.behaviour === 'drop-error-if-exclusively-contains-third-party-frames';\n          if (shouldDrop) {\n            return null;\n          } else {\n            event.tags = {\n              ...event.tags,\n              third_party_code: true,\n            };\n          }\n        }\n      }\n\n      return event;\n    },\n  };\n});\n\nfunction getBundleKeysForAllFramesWithFilenames(event) {\n  const frames = getFramesFromEvent(event);\n\n  if (!frames) {\n    return undefined;\n  }\n\n  return (\n    frames\n      // Exclude frames without a filename since these are likely native code or built-ins\n      .filter(frame => !!frame.filename)\n      .map(frame => {\n        if (frame.module_metadata) {\n          return Object.keys(frame.module_metadata)\n            .filter(key => key.startsWith(BUNDLER_PLUGIN_APP_KEY_PREFIX))\n            .map(key => key.slice(BUNDLER_PLUGIN_APP_KEY_PREFIX.length));\n        }\n        return [];\n      })\n  );\n}\n\nconst BUNDLER_PLUGIN_APP_KEY_PREFIX = '_sentryBundlerPluginAppKey:';\n\nexport { thirdPartyErrorFilterIntegration };\n//# sourceMappingURL=third-party-errors-filter.js.map\n","import { defineIntegration } from '../integration.js';\nimport { isError } from '../utils-hoist/is.js';\nimport { truncate } from '../utils-hoist/string.js';\n\nconst DEFAULT_LIMIT = 10;\nconst INTEGRATION_NAME = 'ZodErrors';\n\n/**\n * Simplified ZodIssue type definition\n */\n\nfunction originalExceptionIsZodError(originalException) {\n  return (\n    isError(originalException) &&\n    originalException.name === 'ZodError' &&\n    Array.isArray((originalException ).issues)\n  );\n}\n\n/**\n * Formats child objects or arrays to a string\n * that is preserved when sent to Sentry.\n *\n * Without this, we end up with something like this in Sentry:\n *\n * [\n *  [Object],\n *  [Object],\n *  [Object],\n *  [Object]\n * ]\n */\nfunction flattenIssue(issue) {\n  return {\n    ...issue,\n    path: 'path' in issue && Array.isArray(issue.path) ? issue.path.join('.') : undefined,\n    keys: 'keys' in issue ? JSON.stringify(issue.keys) : undefined,\n    unionErrors: 'unionErrors' in issue ? JSON.stringify(issue.unionErrors) : undefined,\n  };\n}\n\n/**\n * Takes ZodError issue path array and returns a flattened version as a string.\n * This makes it easier to display paths within a Sentry error message.\n *\n * Array indexes are normalized to reduce duplicate entries\n *\n * @param path ZodError issue path\n * @returns flattened path\n *\n * @example\n * flattenIssuePath([0, 'foo', 1, 'bar']) // -> '<array>.foo.<array>.bar'\n */\nfunction flattenIssuePath(path) {\n  return path\n    .map(p => {\n      if (typeof p === 'number') {\n        return '<array>';\n      } else {\n        return p;\n      }\n    })\n    .join('.');\n}\n\n/**\n * Zod error message is a stringified version of ZodError.issues\n * This doesn't display well in the Sentry UI. Replace it with something shorter.\n */\nfunction formatIssueMessage(zodError) {\n  const errorKeyMap = new Set();\n  for (const iss of zodError.issues) {\n    const issuePath = flattenIssuePath(iss.path);\n    if (issuePath.length > 0) {\n      errorKeyMap.add(issuePath);\n    }\n  }\n\n  const errorKeys = Array.from(errorKeyMap);\n  if (errorKeys.length === 0) {\n    // If there are no keys, then we're likely validating the root\n    // variable rather than a key within an object. This attempts\n    // to extract what type it was that failed to validate.\n    // For example, z.string().parse(123) would return \"string\" here.\n    let rootExpectedType = 'variable';\n    if (zodError.issues.length > 0) {\n      const iss = zodError.issues[0];\n      if (iss !== undefined && 'expected' in iss && typeof iss.expected === 'string') {\n        rootExpectedType = iss.expected;\n      }\n    }\n    return `Failed to validate ${rootExpectedType}`;\n  }\n  return `Failed to validate keys: ${truncate(errorKeys.join(', '), 100)}`;\n}\n\n/**\n * Applies ZodError issues to an event extra and replaces the error message\n */\nfunction applyZodErrorsToEvent(\n  limit,\n  saveZodIssuesAsAttachment = false,\n  event,\n  hint,\n) {\n  if (\n    !event.exception ||\n    !event.exception.values ||\n    !hint ||\n    !hint.originalException ||\n    !originalExceptionIsZodError(hint.originalException) ||\n    hint.originalException.issues.length === 0\n  ) {\n    return event;\n  }\n\n  try {\n    const issuesToFlatten = saveZodIssuesAsAttachment\n      ? hint.originalException.issues\n      : hint.originalException.issues.slice(0, limit);\n    const flattenedIssues = issuesToFlatten.map(flattenIssue);\n\n    if (saveZodIssuesAsAttachment) {\n      // Sometimes having the full error details can be helpful.\n      // Attachments have much higher limits, so we can include the full list of issues.\n      if (!Array.isArray(hint.attachments)) {\n        hint.attachments = [];\n      }\n      hint.attachments.push({\n        filename: 'zod_issues.json',\n        data: JSON.stringify({\n          issues: flattenedIssues,\n        }),\n      });\n    }\n\n    return {\n      ...event,\n      exception: {\n        ...event.exception,\n        values: [\n          {\n            ...event.exception.values[0],\n            value: formatIssueMessage(hint.originalException),\n          },\n          ...event.exception.values.slice(1),\n        ],\n      },\n      extra: {\n        ...event.extra,\n        'zoderror.issues': flattenedIssues.slice(0, limit),\n      },\n    };\n  } catch (e) {\n    // Hopefully we never throw errors here, but record it\n    // with the event just in case.\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        'zoderrors sentry integration parse error': {\n          message: 'an exception was thrown while processing ZodError within applyZodErrorsToEvent()',\n          error: e instanceof Error ? `${e.name}: ${e.message}\\n${e.stack}` : 'unknown',\n        },\n      },\n    };\n  }\n}\n\nconst _zodErrorsIntegration = ((options = {}) => {\n  const limit = typeof options.limit === 'undefined' ? DEFAULT_LIMIT : options.limit;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(originalEvent, hint) {\n      const processedEvent = applyZodErrorsToEvent(limit, options.saveZodIssuesAsAttachment, originalEvent, hint);\n      return processedEvent;\n    },\n  };\n}) ;\n\n/**\n * Sentry integration to process Zod errors, making them easier to work with in Sentry.\n */\nconst zodErrorsIntegration = defineIntegration(_zodErrorsIntegration);\n\nexport { applyZodErrorsToEvent, flattenIssue, flattenIssuePath, formatIssueMessage, zodErrorsIntegration };\n//# sourceMappingURL=zoderrors.js.map\n","import { getClient, SDK_VERSION } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n// This is a map of integration function method to bundle file name.\nconst LazyLoadableIntegrations = {\n  replayIntegration: 'replay',\n  replayCanvasIntegration: 'replay-canvas',\n  feedbackIntegration: 'feedback',\n  feedbackModalIntegration: 'feedback-modal',\n  feedbackScreenshotIntegration: 'feedback-screenshot',\n  captureConsoleIntegration: 'captureconsole',\n  contextLinesIntegration: 'contextlines',\n  linkedErrorsIntegration: 'linkederrors',\n  debugIntegration: 'debug',\n  dedupeIntegration: 'dedupe',\n  extraErrorDataIntegration: 'extraerrordata',\n  httpClientIntegration: 'httpclient',\n  reportingObserverIntegration: 'reportingobserver',\n  rewriteFramesIntegration: 'rewriteframes',\n  sessionTimingIntegration: 'sessiontiming',\n  browserProfilingIntegration: 'browserprofiling',\n  moduleMetadataIntegration: 'modulemetadata',\n} ;\n\nconst WindowWithMaybeIntegration = WINDOW\n\n;\n\n/**\n * Lazy load an integration from the CDN.\n * Rejects if the integration cannot be loaded.\n */\nasync function lazyLoadIntegration(\n  name,\n  scriptNonce,\n) {\n  const bundle = LazyLoadableIntegrations[name];\n\n  // `window.Sentry` is only set when using a CDN bundle, but this method can also be used via the NPM package\n  const sentryOnWindow = (WindowWithMaybeIntegration.Sentry = WindowWithMaybeIntegration.Sentry || {});\n\n  if (!bundle) {\n    throw new Error(`Cannot lazy load integration: ${name}`);\n  }\n\n  // Bail if the integration already exists\n  const existing = sentryOnWindow[name];\n  // The `feedbackIntegration` is loaded by default in the CDN bundles,\n  // so we need to differentiate between the real integration and the shim.\n  // if only the shim exists, we still want to lazy load the real integration.\n  if (typeof existing === 'function' && !('_isShim' in existing)) {\n    return existing;\n  }\n\n  const url = getScriptURL(bundle);\n  const script = WINDOW.document.createElement('script');\n  script.src = url;\n  script.crossOrigin = 'anonymous';\n  script.referrerPolicy = 'origin';\n\n  if (scriptNonce) {\n    script.setAttribute('nonce', scriptNonce);\n  }\n\n  const waitForLoad = new Promise((resolve, reject) => {\n    script.addEventListener('load', () => resolve());\n    script.addEventListener('error', reject);\n  });\n\n  const currentScript = WINDOW.document.currentScript;\n  const parent = WINDOW.document.body || WINDOW.document.head || (currentScript && currentScript.parentElement);\n\n  if (parent) {\n    parent.appendChild(script);\n  } else {\n    throw new Error(`Could not find parent element to insert lazy-loaded ${name} script`);\n  }\n\n  try {\n    await waitForLoad;\n  } catch (e) {\n    throw new Error(`Error when loading integration: ${name}`);\n  }\n\n  const integrationFn = sentryOnWindow[name];\n\n  if (typeof integrationFn !== 'function') {\n    throw new Error(`Could not load integration: ${name}`);\n  }\n\n  return integrationFn;\n}\n\nfunction getScriptURL(bundle) {\n  const client = getClient();\n  const options = client && client.getOptions();\n  const baseURL = (options && options.cdnBaseUrl) || 'https://browser.sentry-cdn.com';\n\n  return new URL(`/${SDK_VERSION}/${bundle}.min.js`, baseURL).toString();\n}\n\nexport { lazyLoadIntegration };\n//# sourceMappingURL=lazyLoadIntegration.js.map\n","import { defineIntegration, supportsReportingObserver, GLOBAL_OBJ, getClient, withScope, captureMessage } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _reportingObserverIntegration = ((options = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports) {\n    if (!SETUP_CLIENTS.has(getClient() )) {\n      return;\n    }\n\n    for (const report of reports) {\n      withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inherited\n          const plainBody\n\n = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body ;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body ;\n            details = body.message || details;\n          }\n        }\n\n        captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!supportsReportingObserver()) {\n        return;\n      }\n\n      const observer = new (WINDOW ).ReportingObserver(\n        handler,\n        {\n          buffered: true,\n          types,\n        },\n      );\n\n      observer.observe();\n    },\n\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n */\nconst reportingObserverIntegration = defineIntegration(_reportingObserverIntegration);\n\nexport { reportingObserverIntegration };\n//# sourceMappingURL=reportingobserver.js.map\n","import { addXhrInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { defineIntegration, supportsNativeFetch, addFetchInstrumentationHandler, getClient, GLOBAL_OBJ, logger, captureEvent, isSentryRequestUrl, addExceptionMechanism } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst INTEGRATION_NAME = 'HttpClient';\n\nconst _httpClientIntegration = ((options = {}) => {\n  const _options = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) ;\n\n/**\n * Create events for failed client side HTTP requests.\n */\nconst httpClientIntegration = defineIntegration(_httpClientIntegration);\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options,\n  requestInfo,\n  response,\n  requestInit,\n  error,\n) {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [requestHeaders, requestCookies] = _parseCookieHeaders('Cookie', request);\n      [responseHeaders, responseCookies] = _parseCookieHeaders('Set-Cookie', response);\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n      error,\n    });\n\n    captureEvent(event);\n  }\n}\n\nfunction _parseCookieHeaders(\n  cookieHeader,\n  obj,\n) {\n  const headers = _extractFetchHeaders(obj.headers);\n  let cookies;\n\n  try {\n    const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n    if (cookieString) {\n      cookies = _parseCookieString(cookieString);\n    }\n  } catch (e2) {\n    // ignore it if parsing fails\n  }\n\n  return [headers, cookies];\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options,\n  xhr,\n  method,\n  headers,\n  error,\n) {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch (e3) {\n        // ignore it if parsing fails\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch (e4) {\n        // ignore it if parsing fails\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n      error,\n    });\n\n    captureEvent(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers) {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString) {\n  return cookieString.split('; ').reduce((acc, cookie) => {\n    const [key, value] = cookie.split('=');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers) {\n  const result = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets,\n  target,\n) {\n  return failedRequestTargets.some((givenRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes,\n  status,\n) {\n  return failedRequestStatusCodes.some((range) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client, options) {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  addFetchInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { response, args, error, virtualError } = handlerData;\n    const [requestInfo, requestInit] = args ;\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response , requestInit, error || virtualError);\n  }, false);\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client, options) {\n  if (!('XMLHttpRequest' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  addXhrInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { error, virtualError } = handlerData;\n\n    const xhr = handlerData.xhr ;\n\n    const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers, error || virtualError);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options, status, url) {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !isSentryRequestUrl(url, getClient())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data\n\n) {\n  const client = getClient();\n  const virtualStackTrace = client && data.error && data.error instanceof Error ? data.error.stack : undefined;\n  // Remove the first frame from the stack as it's the HttpClient call\n  const stack = virtualStackTrace && client ? client.getOptions().stackParser(virtualStackTrace, 0, 1) : undefined;\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n          stacktrace: stack ? { frames: stack } : undefined,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  addExceptionMechanism(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo, requestInit) {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii() {\n  const client = getClient();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n\nexport { httpClientIntegration };\n//# sourceMappingURL=httpclient.js.map\n","import { defineIntegration, stripUrlQueryAndFragment, addContextToFrame, GLOBAL_OBJ } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\nconst INTEGRATION_NAME = 'ContextLines';\n\nconst _contextLinesIntegration = ((options = {}) => {\n  const contextLines = options.frameContextLines != null ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) ;\n\n/**\n * Collects source context lines around the lines of stackframes pointing to JS embedded in\n * the current page's HTML.\n *\n * This integration DOES NOT work for stack frames pointing to JS files that are loaded by the browser.\n * For frames pointing to files, context lines are added during ingestion and symbolication\n * by attempting to download the JS files to the Sentry backend.\n *\n * Use this integration if you have inline JS code in HTML pages that can't be accessed\n * by our backend (e.g. due to a login-protected page).\n */\nconst contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n\n/**\n * Processes an event and adds context lines.\n */\nfunction addSourceContext(event, contextLines) {\n  const doc = WINDOW.document;\n  const htmlFilename = WINDOW.location && stripUrlQueryAndFragment(WINDOW.location.href);\n  if (!doc || !htmlFilename) {\n    return event;\n  }\n\n  const exceptions = event.exception && event.exception.values;\n  if (!exceptions || !exceptions.length) {\n    return event;\n  }\n\n  const html = doc.documentElement.innerHTML;\n  if (!html) {\n    return event;\n  }\n\n  const htmlLines = ['<!DOCTYPE html>', '<html>', ...html.split('\\n'), '</html>'];\n\n  exceptions.forEach(exception => {\n    const stacktrace = exception.stacktrace;\n    if (stacktrace && stacktrace.frames) {\n      stacktrace.frames = stacktrace.frames.map(frame =>\n        applySourceContextToFrame(frame, htmlLines, htmlFilename, contextLines),\n      );\n    }\n  });\n\n  return event;\n}\n\n/**\n * Only exported for testing\n */\nfunction applySourceContextToFrame(\n  frame,\n  htmlLines,\n  htmlFilename,\n  linesOfContext,\n) {\n  if (frame.filename !== htmlFilename || !frame.lineno || !htmlLines.length) {\n    return frame;\n  }\n\n  addContextToFrame(htmlLines, frame, linesOfContext);\n\n  return frame;\n}\n\nexport { applySourceContextToFrame, contextLinesIntegration };\n//# sourceMappingURL=contextlines.js.map\n","import { _optionalChain } from '@sentry/core';\nimport { defineIntegration } from '@sentry/core';\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\n\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) ;\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\n\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\n/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst canvasVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = canvasVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        canvasVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof HTMLCanvasElement) {\n        const name = 'HTMLImageElement';\n        const src = value.toDataURL();\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return args.map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        setTimeout(() => {\n                            const recordArgs = serializeArgs(args, win, this);\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (e) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction getNormalizedContextName(contextType) {\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\n}\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n                    const ctxName = getNormalizedContextName(contextType);\n                    if (!('__context' in this))\n                        this.__context = ctxName;\n                    if (setPreserveDrawingBufferToTrue &&\n                        ['webgl', 'webgl2'].includes(ctxName)) {\n                        if (args[0] && typeof args[0] === 'object') {\n                            const contextAttributes = args[0];\n                            if (!contextAttributes.preserveDrawingBuffer) {\n                                contextAttributes.preserveDrawingBuffer = true;\n                            }\n                        }\n                        else {\n                            args.splice(0, 1, {\n                                preserveDrawingBuffer: true,\n                            });\n                        }\n                    }\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (e) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        if ([\n            'isContextLost',\n            'canvas',\n            'drawingBufferWidth',\n            'drawingBufferHeight',\n        ].includes(prop)) {\n            continue;\n        }\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, this);\n                    if ('tagName' in this.canvas &&\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        const recordArgs = serializeArgs(args, win, this);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (e) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nvar r = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\n\nfunction t(){const t=new Blob([r]);return URL.createObjectURL(t)}\n\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.windowsSet = new WeakSet();\n        this.windows = [];\n        this.shadowDoms = new Set();\n        _optionalChain([this, 'access', _ => _.worker, 'optionalAccess', _2 => _2.terminate, 'call', _3 => _3()]);\n        this.worker = null;\n        this.snapshotInProgressMap = new Map();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.shadowDoms = new Set();\n        this.windowsSet = new WeakSet();\n        this.windows = [];\n        this.restoreHandlers = [];\n        this.frozen = false;\n        this.locked = false;\n        this.snapshotInProgressMap = new Map();\n        this.worker = null;\n        this.processMutation = (target, mutation) => {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        this.options = options;\n        if (errorHandler) {\n            registerErrorHandler(errorHandler);\n        }\n        if ((recordCanvas && typeof sampling === 'number') ||\n            options.enableManualSnapshot) {\n            this.worker = this.initFPSWorker();\n        }\n        this.addWindow(win);\n        if (options.enableManualSnapshot) {\n            return;\n        }\n        callbackWrapper(() => {\n            if (recordCanvas && sampling === 'all') {\n                this.startRAFTimestamping();\n                this.startPendingCanvasMutationFlusher();\n            }\n            if (recordCanvas && typeof sampling === 'number') {\n                this.initCanvasFPSObserver(sampling, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\n                    dataURLOptions,\n                });\n            }\n        })();\n    }\n    addWindow(win) {\n        const { sampling = 'all', blockClass, blockSelector, unblockSelector, recordCanvas, enableManualSnapshot, } = this.options;\n        if (this.windowsSet.has(win))\n            return;\n        if (enableManualSnapshot) {\n            this.windowsSet.add(win);\n            this.windows.push(new WeakRef(win));\n            return;\n        }\n        callbackWrapper(() => {\n            if (recordCanvas && sampling === 'all') {\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\n            }\n            if (recordCanvas && typeof sampling === 'number') {\n                const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\n                this.restoreHandlers.push(() => {\n                    canvasContextReset();\n                });\n            }\n        })();\n        this.windowsSet.add(win);\n        this.windows.push(new WeakRef(win));\n    }\n    addShadowRoot(shadowRoot) {\n        this.shadowDoms.add(new WeakRef(shadowRoot));\n    }\n    resetShadowRoots() {\n        this.shadowDoms = new Set();\n    }\n    initFPSWorker() {\n        const worker = new Worker(t());\n        worker.onmessage = (e) => {\n            const data = e.data;\n            const { id } = data;\n            this.snapshotInProgressMap.set(id, false);\n            if (!('base64' in data))\n                return;\n            const { base64, type, width, height } = data;\n            this.mutationCb({\n                id,\n                type: CanvasContext['2D'],\n                commands: [\n                    {\n                        property: 'clearRect',\n                        args: [0, 0, width, height],\n                    },\n                    {\n                        property: 'drawImage',\n                        args: [\n                            {\n                                rr_type: 'ImageBitmap',\n                                args: [\n                                    {\n                                        rr_type: 'Blob',\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\n                                        type,\n                                    },\n                                ],\n                            },\n                            0,\n                            0,\n                            width,\n                            height,\n                        ],\n                    },\n                ],\n            });\n        };\n        return worker;\n    }\n    initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\n        const rafId = this.takeSnapshot(false, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\n        this.restoreHandlers.push(() => {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.restoreHandlers.push(() => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        });\n    }\n    snapshot(canvasElement) {\n        const { options } = this;\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\n        this.restoreHandlers.push(() => {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\n        const timeBetweenSnapshots = 1000 / fps;\n        let lastSnapshotTime = 0;\n        let rafId;\n        const getCanvas = (canvasElement) => {\n            if (canvasElement) {\n                return [canvasElement];\n            }\n            const matchedCanvas = [];\n            const searchCanvas = (root) => {\n                root.querySelectorAll('canvas').forEach((canvas) => {\n                    if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector)) {\n                        matchedCanvas.push(canvas);\n                    }\n                });\n            };\n            for (const item of this.windows) {\n                const window = item.deref();\n                if (window) {\n                    searchCanvas(window.document);\n                }\n            }\n            for (const item of this.shadowDoms) {\n                const shadowRoot = item.deref();\n                if (shadowRoot) {\n                    searchCanvas(shadowRoot);\n                }\n            }\n            return matchedCanvas;\n        };\n        const takeCanvasSnapshots = (timestamp) => {\n            if (!this.windows.length) {\n                return;\n            }\n            if (lastSnapshotTime &&\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n                return;\n            }\n            lastSnapshotTime = timestamp;\n            getCanvas(canvasElement).forEach((canvas) => {\n                if (!this.mirror.hasNode(canvas)) {\n                    return;\n                }\n                const id = this.mirror.getId(canvas);\n                if (this.snapshotInProgressMap.get(id))\n                    return;\n                if (!canvas.width || !canvas.height)\n                    return;\n                this.snapshotInProgressMap.set(id, true);\n                if (!isManualSnapshot &&\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\n                    const context = canvas.getContext(canvas.__context);\n                    if (_optionalChain([context, 'optionalAccess', _4 => _4.getContextAttributes, 'call', _5 => _5(), 'optionalAccess', _6 => _6.preserveDrawingBuffer]) === false) {\n                        context.clear(context.COLOR_BUFFER_BIT);\n                    }\n                }\n                createImageBitmap(canvas)\n                    .then((bitmap) => {\n                    _optionalChain([this, 'access', _7 => _7.worker, 'optionalAccess', _8 => _8.postMessage, 'call', _9 => _9({\n                        id,\n                        bitmap,\n                        width: canvas.width,\n                        height: canvas.height,\n                        dataURLOptions,\n                        maxCanvasSize,\n                    }, [bitmap])]);\n                })\n                    .catch((error) => {\n                    callbackWrapper(() => {\n                        throw error;\n                    })();\n                });\n            });\n            if (!isManualSnapshot) {\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n            }\n        };\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        return rafId;\n    }\n    startPendingCanvasMutationFlusher() {\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            onRequestAnimationFrame(setLatestRAFTimestamp);\n        };\n        onRequestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const { type, ...rest } = value;\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nconst CANVAS_QUALITY = {\n  low: {\n    sampling: {\n      canvas: 1,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.25,\n    },\n  },\n  medium: {\n    sampling: {\n      canvas: 2,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.4,\n    },\n  },\n  high: {\n    sampling: {\n      canvas: 4,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.5,\n    },\n  },\n};\n\nconst INTEGRATION_NAME = 'ReplayCanvas';\nconst DEFAULT_MAX_CANVAS_SIZE = 1280;\n\n/** Exported only for type safe tests. */\nconst _replayCanvasIntegration = ((options = {}) => {\n  const [maxCanvasWidth, maxCanvasHeight] = options.maxCanvasSize || [];\n  const _canvasOptions = {\n    quality: options.quality || 'medium',\n    enableManualSnapshot: options.enableManualSnapshot,\n    maxCanvasSize: [\n      maxCanvasWidth ? Math.min(maxCanvasWidth, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n      maxCanvasHeight ? Math.min(maxCanvasHeight, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n    ] ,\n  };\n\n  let canvasManagerResolve;\n  const _canvasManager = new Promise(resolve => (canvasManagerResolve = resolve));\n\n  return {\n    name: INTEGRATION_NAME,\n    getOptions() {\n      const { quality, enableManualSnapshot, maxCanvasSize } = _canvasOptions;\n\n      return {\n        enableManualSnapshot,\n        recordCanvas: true,\n        getCanvasManager: (getCanvasManagerOptions) => {\n          const manager = new CanvasManager({\n            ...getCanvasManagerOptions,\n            enableManualSnapshot,\n            maxCanvasSize,\n            errorHandler: (err) => {\n              try {\n                if (typeof err === 'object') {\n                  (err ).__rrweb__ = true;\n                }\n              } catch (error) {\n                // ignore errors here\n                // this can happen if the error is frozen or does not allow mutation for other reasons\n              }\n            },\n          });\n          canvasManagerResolve(manager);\n          return manager;\n        },\n        ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium),\n      };\n    },\n    async snapshot(canvasElement) {\n      const canvasManager = await _canvasManager;\n      canvasManager.snapshot(canvasElement);\n    },\n  };\n}) ;\n\n/**\n * Add this in addition to `replayIntegration()` to enable canvas recording.\n */\nconst replayCanvasIntegration = defineIntegration(\n  _replayCanvasIntegration,\n) ;\n\nexport { replayCanvasIntegration };\n//# sourceMappingURL=index.js.map\n","import { GLOBAL_OBJ, getClient, getCurrentScope, captureFeedback, getLocationHref, isBrowser, addIntegration, logger, getIsolationScope, getGlobalScope } from '@sentry/core';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and feedback packages\nconst WINDOW = GLOBAL_OBJ ;\nconst DOCUMENT = WINDOW.document;\nconst NAVIGATOR = WINDOW.navigator;\n\nconst TRIGGER_LABEL = 'Report a Bug';\nconst CANCEL_BUTTON_LABEL = 'Cancel';\nconst SUBMIT_BUTTON_LABEL = 'Send Bug Report';\nconst CONFIRM_BUTTON_LABEL = 'Confirm';\nconst FORM_TITLE = 'Report a Bug';\nconst EMAIL_PLACEHOLDER = 'your.email@example.org';\nconst EMAIL_LABEL = 'Email';\nconst MESSAGE_PLACEHOLDER = \"What's the bug? What did you expect?\";\nconst MESSAGE_LABEL = 'Description';\nconst NAME_PLACEHOLDER = 'Your Name';\nconst NAME_LABEL = 'Name';\nconst SUCCESS_MESSAGE_TEXT = 'Thank you for your report!';\nconst IS_REQUIRED_LABEL = '(required)';\nconst ADD_SCREENSHOT_LABEL = 'Add a screenshot';\nconst REMOVE_SCREENSHOT_LABEL = 'Remove screenshot';\n\nconst FEEDBACK_WIDGET_SOURCE = 'widget';\nconst FEEDBACK_API_SOURCE = 'api';\n\nconst SUCCESS_MESSAGE_TIMEOUT = 5000;\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nconst sendFeedback = (\n  params,\n  hint = { includeReplay: true },\n) => {\n  if (!params.message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  // We want to wait for the feedback to be sent (or not)\n  const client = getClient();\n\n  if (!client) {\n    throw new Error('No client setup, cannot send feedback.');\n  }\n\n  if (params.tags && Object.keys(params.tags).length) {\n    getCurrentScope().setTags(params.tags);\n  }\n  const eventId = captureFeedback(\n    {\n      source: FEEDBACK_API_SOURCE,\n      url: getLocationHref(),\n      ...params,\n    },\n    hint,\n  );\n\n  // We want to wait for the feedback to be sent (or not)\n  return new Promise((resolve, reject) => {\n    // After 5s, we want to clear anyhow\n    const timeout = setTimeout(() => reject('Unable to determine if Feedback was correctly sent.'), 5000);\n\n    const cleanup = client.on('afterSendEvent', (event, response) => {\n      if (event.event_id !== eventId) {\n        return;\n      }\n\n      clearTimeout(timeout);\n      cleanup();\n\n      // Require valid status codes, otherwise can assume feedback was not sent successfully\n      if (\n        response &&\n        typeof response.statusCode === 'number' &&\n        response.statusCode >= 200 &&\n        response.statusCode < 300\n      ) {\n        return resolve(eventId);\n      }\n\n      if (response && typeof response.statusCode === 'number' && response.statusCode === 0) {\n        return reject(\n          'Unable to send Feedback. This is because of network issues, or because you are using an ad-blocker.',\n        );\n      }\n\n      if (response && typeof response.statusCode === 'number' && response.statusCode === 403) {\n        return reject(\n          'Unable to send Feedback. This could be because this domain is not in your list of allowed domains.',\n        );\n      }\n\n      return reject(\n        'Unable to send Feedback. This could be because of network issues, or because you are using an ad-blocker',\n      );\n    });\n  });\n};\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\n/**\n * Mobile browsers do not support `mediaDevices.getDisplayMedia` even though they have the api implemented\n * Instead they return things like `NotAllowedError` when called.\n *\n * It's simpler for us to browser sniff first, and avoid loading the integration if we can.\n *\n * https://stackoverflow.com/a/58879212\n * https://stackoverflow.com/a/3540295\n *\n * `mediaDevices.getDisplayMedia` is also only supported in secure contexts, and return a `mediaDevices is not supported` error, so we should also avoid loading the integration if we can.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\n */\nfunction isScreenshotSupported() {\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(NAVIGATOR.userAgent)) {\n    return false;\n  }\n  /**\n   * User agent on iPads show as Macintosh, so we need extra checks\n   *\n   * https://forums.developer.apple.com/forums/thread/119186\n   * https://stackoverflow.com/questions/60482650/how-to-detect-ipad-useragent-on-safari-browser\n   */\n  if (/Macintosh/i.test(NAVIGATOR.userAgent) && NAVIGATOR.maxTouchPoints && NAVIGATOR.maxTouchPoints > 1) {\n    return false;\n  }\n  if (!isSecureContext) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nfunction mergeOptions(\n  defaultOptions,\n  optionOverrides,\n) {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    tags: {\n      ...defaultOptions.tags,\n      ...optionOverrides.tags,\n    },\n    onFormOpen: () => {\n      optionOverrides.onFormOpen && optionOverrides.onFormOpen();\n      defaultOptions.onFormOpen && defaultOptions.onFormOpen();\n    },\n    onFormClose: () => {\n      optionOverrides.onFormClose && optionOverrides.onFormClose();\n      defaultOptions.onFormClose && defaultOptions.onFormClose();\n    },\n    onSubmitSuccess: (data) => {\n      optionOverrides.onSubmitSuccess && optionOverrides.onSubmitSuccess(data);\n      defaultOptions.onSubmitSuccess && defaultOptions.onSubmitSuccess(data);\n    },\n    onSubmitError: (error) => {\n      optionOverrides.onSubmitError && optionOverrides.onSubmitError(error);\n      defaultOptions.onSubmitError && defaultOptions.onSubmitError(error);\n    },\n    onFormSubmitted: () => {\n      optionOverrides.onFormSubmitted && optionOverrides.onFormSubmitted();\n      defaultOptions.onFormSubmitted && defaultOptions.onFormSubmitted();\n    },\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nfunction createActorStyles(styleNonce) {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n.widget__actor {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: var(--page-margin);\n  inset: var(--actor-inset);\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  line-height: 1.14em;\n  text-decoration: none;\n\n  background: var(--actor-background, var(--background));\n  border-radius: var(--actor-border-radius, 1.7em/50%);\n  border: var(--actor-border, var(--border));\n  box-shadow: var(--actor-box-shadow, var(--box-shadow));\n  color: var(--actor-color, var(--foreground));\n  fill: var(--actor-color, var(--foreground));\n  cursor: pointer;\n  opacity: 1;\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n.widget__actor[aria-hidden=\"true\"] {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: translate(0, 16px) scale(0.98);\n}\n\n.widget__actor:hover {\n  background: var(--actor-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n\n.widget__actor svg {\n  width: 1.14em;\n  height: 1.14em;\n}\n\n@media (max-width: 600px) {\n  .widget__actor span {\n    display: none;\n  }\n}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n\n/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nfunction setAttributesNS(el, attributes) {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n\nconst SIZE = 20;\nconst XMLNS$2 = 'http://www.w3.org/2000/svg';\n\n/**\n * Feedback Icon\n */\nfunction FeedbackIcon() {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS$2, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'var(--actor-color, var(--foreground))',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n\n/**\n * The sentry-provided button to open the feedback modal\n */\nfunction Actor({ triggerLabel, triggerAriaLabel, shadow, styleNonce }) {\n  const el = DOCUMENT.createElement('button');\n  el.type = 'button';\n  el.className = 'widget__actor';\n  el.ariaHidden = 'false';\n  el.ariaLabel = triggerAriaLabel || triggerLabel || TRIGGER_LABEL;\n  el.appendChild(FeedbackIcon());\n  if (triggerLabel) {\n    const label = DOCUMENT.createElement('span');\n    label.appendChild(DOCUMENT.createTextNode(triggerLabel));\n    el.appendChild(label);\n  }\n\n  const style = createActorStyles(styleNonce);\n\n  return {\n    el,\n    appendToDom() {\n      shadow.appendChild(style);\n      shadow.appendChild(el);\n    },\n    removeFromDom() {\n      shadow.removeChild(el);\n      shadow.removeChild(style);\n    },\n    show() {\n      el.ariaHidden = 'false';\n    },\n    hide() {\n      el.ariaHidden = 'true';\n    },\n  };\n}\n\nconst PURPLE = 'rgba(88, 74, 192, 1)';\n\nconst DEFAULT_LIGHT = {\n  foreground: '#2b2233',\n  background: '#ffffff',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#268d75',\n  errorColor: '#df3338',\n  border: '1.5px solid rgba(41, 35, 47, 0.13)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(95%)',\n};\nconst DEFAULT_DARK = {\n  foreground: '#ebe6ef',\n  background: '#29232f',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#2da98c',\n  errorColor: '#f55459',\n  border: '1.5px solid rgba(235, 230, 239, 0.15)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(150%)',\n};\n\nfunction getThemedCssVariables(theme) {\n  return `\n  --foreground: ${theme.foreground};\n  --background: ${theme.background};\n  --accent-foreground: ${theme.accentForeground};\n  --accent-background: ${theme.accentBackground};\n  --success-color: ${theme.successColor};\n  --error-color: ${theme.errorColor};\n  --border: ${theme.border};\n  --box-shadow: ${theme.boxShadow};\n  --outline: ${theme.outline};\n  --interactive-filter: ${theme.interactiveFilter};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nfunction createMainStyles({\n  colorScheme,\n  themeDark,\n  themeLight,\n  styleNonce,\n}) {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n:host {\n  --font-family: system-ui, 'Helvetica Neue', Arial, sans-serif;\n  --font-size: 14px;\n  --z-index: 100000;\n\n  --page-margin: 16px;\n  --inset: auto 0 0 auto;\n  --actor-inset: var(--inset);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${colorScheme !== 'system' ? 'color-scheme: only light;' : ''}\n\n  ${getThemedCssVariables(\n    colorScheme === 'dark' ? { ...DEFAULT_DARK, ...themeDark } : { ...DEFAULT_LIGHT, ...themeLight },\n  )}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables({ ...DEFAULT_DARK, ...themeDark })}\n  }\n}`\n    : ''\n}\n}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n\nconst buildFeedbackIntegration = ({\n  lazyLoadIntegration,\n  getModalIntegration,\n  getScreenshotIntegration,\n}\n\n) => {\n  const feedbackIntegration = (({\n    // FeedbackGeneralConfiguration\n    id = 'sentry-feedback',\n    autoInject = true,\n    showBranding = true,\n    isEmailRequired = false,\n    isNameRequired = false,\n    showEmail = true,\n    showName = true,\n    enableScreenshot = true,\n    useSentryUser = {\n      email: 'email',\n      name: 'username',\n    },\n    tags,\n    styleNonce,\n    scriptNonce,\n\n    // FeedbackThemeConfiguration\n    colorScheme = 'system',\n    themeLight = {},\n    themeDark = {},\n\n    // FeedbackTextConfiguration\n    addScreenshotButtonLabel = ADD_SCREENSHOT_LABEL,\n    cancelButtonLabel = CANCEL_BUTTON_LABEL,\n    confirmButtonLabel = CONFIRM_BUTTON_LABEL,\n    emailLabel = EMAIL_LABEL,\n    emailPlaceholder = EMAIL_PLACEHOLDER,\n    formTitle = FORM_TITLE,\n    isRequiredLabel = IS_REQUIRED_LABEL,\n    messageLabel = MESSAGE_LABEL,\n    messagePlaceholder = MESSAGE_PLACEHOLDER,\n    nameLabel = NAME_LABEL,\n    namePlaceholder = NAME_PLACEHOLDER,\n    removeScreenshotButtonLabel = REMOVE_SCREENSHOT_LABEL,\n    submitButtonLabel = SUBMIT_BUTTON_LABEL,\n    successMessageText = SUCCESS_MESSAGE_TEXT,\n    triggerLabel = TRIGGER_LABEL,\n    triggerAriaLabel = '',\n\n    // FeedbackCallbacks\n    onFormOpen,\n    onFormClose,\n    onSubmitSuccess,\n    onSubmitError,\n    onFormSubmitted,\n  } = {}) => {\n    const _options = {\n      id,\n      autoInject,\n      showBranding,\n      isEmailRequired,\n      isNameRequired,\n      showEmail,\n      showName,\n      enableScreenshot,\n      useSentryUser,\n      tags,\n      styleNonce,\n      scriptNonce,\n\n      colorScheme,\n      themeDark,\n      themeLight,\n\n      triggerLabel,\n      triggerAriaLabel,\n      cancelButtonLabel,\n      submitButtonLabel,\n      confirmButtonLabel,\n      formTitle,\n      emailLabel,\n      emailPlaceholder,\n      messageLabel,\n      messagePlaceholder,\n      nameLabel,\n      namePlaceholder,\n      successMessageText,\n      isRequiredLabel,\n      addScreenshotButtonLabel,\n      removeScreenshotButtonLabel,\n\n      onFormClose,\n      onFormOpen,\n      onSubmitError,\n      onSubmitSuccess,\n      onFormSubmitted,\n    };\n\n    let _shadow = null;\n    let _subscriptions = [];\n\n    /**\n     * Get the shadow root where we will append css\n     */\n    const _createShadow = (options) => {\n      if (!_shadow) {\n        const host = DOCUMENT.createElement('div');\n        host.id = String(options.id);\n        DOCUMENT.body.appendChild(host);\n\n        _shadow = host.attachShadow({ mode: 'open' });\n        _shadow.appendChild(createMainStyles(options));\n      }\n      return _shadow ;\n    };\n\n    const _loadAndRenderDialog = async (\n      options,\n    ) => {\n      const screenshotRequired = options.enableScreenshot && isScreenshotSupported();\n\n      let modalIntegration;\n      let screenshotIntegration;\n\n      try {\n        const modalIntegrationFn = getModalIntegration\n          ? getModalIntegration()\n          : await lazyLoadIntegration('feedbackModalIntegration', scriptNonce);\n        modalIntegration = modalIntegrationFn() ;\n        addIntegration(modalIntegration);\n      } catch (e) {\n        DEBUG_BUILD &&\n          logger.error(\n            '[Feedback] Error when trying to load feedback integrations. Try using `feedbackSyncIntegration` in your `Sentry.init`.',\n          );\n        throw new Error('[Feedback] Missing feedback modal integration!');\n      }\n\n      try {\n        const screenshotIntegrationFn = screenshotRequired\n          ? getScreenshotIntegration\n            ? getScreenshotIntegration()\n            : await lazyLoadIntegration('feedbackScreenshotIntegration', scriptNonce)\n          : undefined;\n\n        if (screenshotIntegrationFn) {\n          screenshotIntegration = screenshotIntegrationFn() ;\n          addIntegration(screenshotIntegration);\n        }\n      } catch (e2) {\n        DEBUG_BUILD &&\n          logger.error('[Feedback] Missing feedback screenshot integration. Proceeding without screenshots.');\n      }\n\n      const dialog = modalIntegration.createDialog({\n        options: {\n          ...options,\n          onFormClose: () => {\n            dialog && dialog.close();\n            options.onFormClose && options.onFormClose();\n          },\n          onFormSubmitted: () => {\n            dialog && dialog.close();\n            options.onFormSubmitted && options.onFormSubmitted();\n          },\n        },\n        screenshotIntegration,\n        sendFeedback,\n        shadow: _createShadow(options),\n      });\n\n      return dialog;\n    };\n\n    const _attachTo = (el, optionOverrides = {}) => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n\n      const targetEl =\n        typeof el === 'string' ? DOCUMENT.querySelector(el) : typeof el.addEventListener === 'function' ? el : null;\n\n      if (!targetEl) {\n        DEBUG_BUILD && logger.error('[Feedback] Unable to attach to target element');\n        throw new Error('Unable to attach to target element');\n      }\n\n      let dialog = null;\n      const handleClick = async () => {\n        if (!dialog) {\n          dialog = await _loadAndRenderDialog({\n            ...mergedOptions,\n            onFormSubmitted: () => {\n              dialog && dialog.removeFromDom();\n              mergedOptions.onFormSubmitted && mergedOptions.onFormSubmitted();\n            },\n          });\n        }\n        dialog.appendToDom();\n        dialog.open();\n      };\n      targetEl.addEventListener('click', handleClick);\n      const unsubscribe = () => {\n        _subscriptions = _subscriptions.filter(sub => sub !== unsubscribe);\n        dialog && dialog.removeFromDom();\n        dialog = null;\n        targetEl.removeEventListener('click', handleClick);\n      };\n      _subscriptions.push(unsubscribe);\n      return unsubscribe;\n    };\n\n    const _createActor = (optionOverrides = {}) => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n      const shadow = _createShadow(mergedOptions);\n      const actor = Actor({\n        triggerLabel: mergedOptions.triggerLabel,\n        triggerAriaLabel: mergedOptions.triggerAriaLabel,\n        shadow,\n        styleNonce,\n      });\n      _attachTo(actor.el, {\n        ...mergedOptions,\n        onFormOpen() {\n          actor.hide();\n        },\n        onFormClose() {\n          actor.show();\n        },\n        onFormSubmitted() {\n          actor.show();\n        },\n      });\n      return actor;\n    };\n\n    return {\n      name: 'Feedback',\n      setupOnce() {\n        if (!isBrowser() || !_options.autoInject) {\n          return;\n        }\n\n        if (DOCUMENT.readyState === 'loading') {\n          DOCUMENT.addEventListener('DOMContentLoaded', () => _createActor().appendToDom());\n        } else {\n          _createActor().appendToDom();\n        }\n      },\n\n      /**\n       * Adds click listener to the element to open a feedback dialog\n       *\n       * The returned function can be used to remove the click listener\n       */\n      attachTo: _attachTo,\n\n      /**\n       * Creates a new widget which is composed of a Button which triggers a Dialog.\n       * Accepts partial options to override any options passed to constructor.\n       */\n      createWidget(optionOverrides = {}) {\n        const actor = _createActor(mergeOptions(_options, optionOverrides));\n        actor.appendToDom();\n        return actor;\n      },\n\n      /**\n       * Creates a new Form which you can\n       * Accepts partial options to override any options passed to constructor.\n       */\n      async createForm(\n        optionOverrides = {},\n      ) {\n        return _loadAndRenderDialog(mergeOptions(_options, optionOverrides));\n      },\n\n      /**\n       * Removes the Feedback integration (including host, shadow DOM, and all widgets)\n       */\n      remove() {\n        if (_shadow) {\n          _shadow.parentElement && _shadow.parentElement.remove();\n          _shadow = null;\n        }\n        // Remove any lingering subscriptions\n        _subscriptions.forEach(sub => sub());\n        _subscriptions = [];\n      },\n    };\n  }) ;\n\n  return feedbackIntegration;\n};\n\n/**\n * This is a small utility to get a type-safe instance of the Feedback integration.\n */\nfunction getFeedback() {\n  const client = getClient();\n  return client && client.getIntegrationByName('Feedback');\n}\n\nvar n,l$1,u$1,i$1,o$1,r$1,f$1,c$1={},s$1=[],a$1=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,h$1=Array.isArray;function v$1(n,l){for(var u in l)n[u]=l[u];return n}function p$1(n){var l=n.parentNode;l&&l.removeChild(n);}function y$1(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return d$1(l,f,i,o,null)}function d$1(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u$1:r,__i:-1,__u:0};return null==r&&null!=l$1.vnode&&l$1.vnode(f),f}function g$1(n){return n.children}function b$1(n,l){this.props=n,this.context=l;}function m$1(n,l){if(null==l)return n.__?m$1(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return \"function\"==typeof n.type?m$1(n):null}function w$1(n,u,t){var i,o=n.__v,r=o.__e,f=n.__P;if(f)return (i=v$1({},o)).__v=o.__v+1,l$1.vnode&&l$1.vnode(i),M(f,i,o,n.__n,void 0!==f.ownerSVGElement,32&o.__u?[r]:null,u,null==r?m$1(o):r,!!(32&o.__u),t),i.__.__k[i.__i]=i,i.__d=void 0,i.__e!=r&&k$1(i),i}function k$1(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k$1(n)}}function x$1(n){(!n.__d&&(n.__d=!0)&&i$1.push(n)&&!C$1.__r++||o$1!==l$1.debounceRendering)&&((o$1=l$1.debounceRendering)||r$1)(C$1);}function C$1(){var n,u,t,o=[],r=[];for(i$1.sort(f$1);n=i$1.shift();)n.__d&&(t=i$1.length,u=w$1(n,o,r)||u,0===t||i$1.length>t?(j$1(o,u,r),r.length=o.length=0,u=void 0,i$1.sort(f$1)):u&&l$1.__c&&l$1.__c(u,s$1));u&&j$1(o,u,r),C$1.__r=0;}function P$1(n,l,u,t,i,o,r,f,e,a,h){var v,p,y,d,_,g=t&&t.__k||s$1,b=l.length;for(u.__d=e,S(u,l,g),e=u.__d,v=0;v<b;v++)null!=(y=u.__k[v])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(p=-1===y.__i?c$1:g[y.__i]||c$1,y.__i=v,M(n,y,p,i,o,r,f,e,a,h),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&N(p.ref,null,y),h.push(y.ref,y.__c||d,y)),null==_&&null!=d&&(_=d),65536&y.__u||p.__k===y.__k?e=$(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=_;}function S(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?d$1(null,i,null,null,i):h$1(i)?d$1(g$1,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?d$1(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=I(i,u,r=t+a,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:a=f<r&&f==r-1?f-r:0,f!==t+a&&(i.__u|=65536))):(o=u[t])&&null==o.key&&o.__e&&(o.__e==n.__d&&(n.__d=m$1(o)),O(o,o,!1),u[t]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=m$1(o)),O(o,o));}function $(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=$(t[i],l,u));return l}n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling;}while(null!=l&&8===l.nodeType);return l}function I(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type)return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--;}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++;}}return -1}function T$1(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a$1.test(l)?u:u+\"px\";}function A$1(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else {if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T$1(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T$1(n.style,l,u[l]);}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=Date.now(),n.addEventListener(l,o?L:D$1,o)):n.removeEventListener(l,o?L:D$1,o);else {if(i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&\"rowSpan\"!==l&&\"colSpan\"!==l&&\"role\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u));}}function D$1(n){if(this.l){var u=this.l[n.type+!1];if(n.t){if(n.t<=u.u)return}else n.t=Date.now();return u(l$1.event?l$1.event(n):n)}}function L(n){if(this.l)return this.l[n.type+!0](l$1.event?l$1.event(n):n)}function M(n,u,t,i,o,r,f,e,c,s){var a,p,y,d,_,m,w,k,x,C,S,$,H,I,T,A=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l$1.__b)&&a(u);n:if(\"function\"==typeof A)try{if(k=u.props,x=(a=A.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?w=(p=u.__c=t.__c).__=p.__E:(\"prototype\"in A&&A.prototype.render?u.__c=p=new A(k,C):(u.__c=p=new b$1(k,C),p.constructor=A,p.render=q$1),x&&x.sub(p),p.props=k,p.state||(p.state={}),p.context=C,p.__n=i,y=p.__d=!0,p.__h=[],p._sb=[]),null==p.__s&&(p.__s=p.state),null!=A.getDerivedStateFromProps&&(p.__s==p.state&&(p.__s=v$1({},p.__s)),v$1(p.__s,A.getDerivedStateFromProps(k,p.__s))),d=p.props,_=p.state,p.__v=u,y)null==A.getDerivedStateFromProps&&null!=p.componentWillMount&&p.componentWillMount(),null!=p.componentDidMount&&p.__h.push(p.componentDidMount);else {if(null==A.getDerivedStateFromProps&&k!==d&&null!=p.componentWillReceiveProps&&p.componentWillReceiveProps(k,C),!p.__e&&(null!=p.shouldComponentUpdate&&!1===p.shouldComponentUpdate(k,p.__s,C)||u.__v===t.__v)){for(u.__v!==t.__v&&(p.props=k,p.state=p.__s,p.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u);}),S=0;S<p._sb.length;S++)p.__h.push(p._sb[S]);p._sb=[],p.__h.length&&f.push(p);break n}null!=p.componentWillUpdate&&p.componentWillUpdate(k,p.__s,C),null!=p.componentDidUpdate&&p.__h.push(function(){p.componentDidUpdate(d,_,m);});}if(p.context=C,p.props=k,p.__P=n,p.__e=!1,$=l$1.__r,H=0,\"prototype\"in A&&A.prototype.render){for(p.state=p.__s,p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),I=0;I<p._sb.length;I++)p.__h.push(p._sb[I]);p._sb=[];}else do{p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),p.state=p.__s;}while(p.__d&&++H<25);p.state=p.__s,null!=p.getChildContext&&(i=v$1(v$1({},i),p.getChildContext())),y||null==p.getSnapshotBeforeUpdate||(m=p.getSnapshotBeforeUpdate(d,_)),P$1(n,h$1(T=null!=a&&a.type===g$1&&null==a.key?a.props.children:a)?T:[T],u,t,i,o,r,f,e,c,s),p.base=u.__e,u.__u&=-161,p.__h.length&&f.push(p),w&&(p.__E=p.__=null);}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l$1.__e(n,u,t);}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z$1(t.__e,u,t,i,o,r,f,c,s);(a=l$1.diffed)&&a(u);}function j$1(n,u,t){for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l$1.__c&&l$1.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u);});}catch(n){l$1.__e(n,u.__v);}});}function z$1(l,u,t,i,o,r,f,e,s){var a,v,y,d,_,g,b,w=t.props,k=u.props,x=u.type;if(\"svg\"===x&&(o=!0),null!=r)for(a=0;a<r.length;a++)if((_=r[a])&&\"setAttribute\"in _==!!x&&(x?_.localName===x:3===_.nodeType)){l=_,r[a]=null;break}if(null==l){if(null===x)return document.createTextNode(k);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",x):document.createElement(x,k.is&&k),r=null,e=!1;}if(null===x)w===k||e&&l.data===k||(l.data=k);else {if(r=r&&n.call(l.childNodes),w=t.props||c$1,!e&&null!=r)for(w={},a=0;a<l.attributes.length;a++)w[(_=l.attributes[a]).name]=_.value;for(a in w)_=w[a],\"children\"==a||(\"dangerouslySetInnerHTML\"==a?y=_:\"key\"===a||a in k||A$1(l,a,null,_,o));for(a in k)_=k[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?b=_:\"key\"===a||e&&\"function\"!=typeof _||w[a]===_||A$1(l,a,_,w[a],o);if(v)e||y&&(v.__html===y.__html||v.__html===l.innerHTML)||(l.innerHTML=v.__html),u.__k=[];else if(y&&(l.innerHTML=\"\"),P$1(l,h$1(d)?d:[d],u,t,i,o&&\"foreignObject\"!==x,r,f,r?r[0]:t.__k&&m$1(t,0),e,s),null!=r)for(a=r.length;a--;)null!=r[a]&&p$1(r[a]);e||(a=\"value\",void 0!==g&&(g!==l[a]||\"progress\"===x&&!g||\"option\"===x&&g!==w[a])&&A$1(l,a,g,w[a],!1),a=\"checked\",void 0!==b&&b!==l[a]&&A$1(l,a,b,w[a],!1));}return l}function N(n,u,t){try{\"function\"==typeof n?n(u):n.current=u;}catch(n){l$1.__e(n,t);}}function O(n,u,t){var i,o;if(l$1.unmount&&l$1.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount();}catch(n){l$1.__e(n,u);}i.base=i.__P=null,n.__c=void 0;}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&O(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||p$1(n.__e),n.__=n.__e=n.__d=void 0;}function q$1(n,l,u){return this.constructor(n,u)}function B$1(u,t,i){var o,r,f,e;l$1.__&&l$1.__(u,t),r=(o=\"function\"==typeof i)?null:t.__k,f=[],e=[],M(t,u=(!o&&i||t).__k=y$1(g$1,null,[u]),r||c$1,c$1,void 0!==t.ownerSVGElement,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),u.__d=void 0,j$1(f,u,e);}n=s$1.slice,l$1={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l;}throw n}},u$1=0,b$1.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=v$1({},this.state),\"function\"==typeof n&&(n=n(v$1({},u),this.props)),n&&v$1(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),x$1(this));},b$1.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),x$1(this));},b$1.prototype.render=g$1,i$1=[],r$1=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f$1=function(n,l){return n.__v.__b-l.__v.__b},C$1.__r=0;\n\nvar t,r,u,i,o=0,f=[],c=[],e=l$1,a=e.__b,v=e.__r,l=e.diffed,m=e.__c,s=e.unmount,d=e.__;function h(n,t){e.__h&&e.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({__V:c}),u.__[n]}function p(n){return o=1,y(D,n)}function y(n,u,i){var o=h(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}));}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return !0;var u=o.__c.__H.__.filter(function(n){return !!n.__c});if(u.every(function(n){return !n.__N}))return !c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0);}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u;}e&&e.call(this,n,t,r);},r.shouldComponentUpdate=f;}return o.__N||o.__}function _(n,u){var i=h(t++,3);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i));}function A(n,u){var i=h(t++,4);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__h.push(i));}function F(n){return o=5,q(function(){return {current:n}},[])}function T(n,t,r){o=6,A(function(){return \"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n));}function q(n,r){var u=h(t++,7);return C(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function x(n,t){return o=8,q(function(){return n},t)}function P(n){var u=r.context[n.__c],i=h(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function V(n,t){e.useDebugValue&&e.useDebugValue(t?t(n):n);}function b(n){var u=h(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n);}),[i[0],function(){i[1](void 0);}]}function g(){var n=h(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++;}return n.__}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[];}catch(t){n.__H.__h=[],e.__e(t,n.__v);}}e.__b=function(n){r=null,a&&a(n);},e.__=function(n,t){t.__k&&t.__k.__m&&(n.__m=t.__k.__m),d&&d(n,t);},e.__r=function(n){v&&v(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0;})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r;},e.diffed=function(n){l&&l(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===e.requestAnimationFrame||((i=e.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c;})),u=r=null;},e.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return !n.__||B(n)});}catch(r){t.some(function(n){n.__h&&(n.__h=[]);}),t=[],e.__e(r,n.__v);}}),m&&m(n,t);},e.unmount=function(n){s&&s(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n);}catch(n){t=n;}}),r.__H=void 0,t&&e.__e(t,r.__v));};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n);},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r));}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t;}function B(n){var t=r;n.__c=n.__(),r=t;}function C(n,t){return !n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return \"function\"==typeof t?t(n):t}\n\nconst hooks = {\n  __proto__: null,\n  useCallback: x,\n  useContext: P,\n  useDebugValue: V,\n  useEffect: _,\n  useErrorBoundary: b,\n  useId: g,\n  useImperativeHandle: T,\n  useLayoutEffect: A,\n  useMemo: q,\n  useReducer: y,\n  useRef: F,\n  useState: p\n};\n\nconst XMLNS$1 = 'http://www.w3.org/2000/svg';\n\n/**\n * Sentry Logo\n */\nfunction SentryLogo() {\n  const createElementNS = (tagName) =>\n    DOCUMENT.createElementNS(XMLNS$1, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'inherit',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.appendChild(path);\n\n  return svg;\n}\n\nfunction DialogHeader({ options }) {\n  const logoHtml = q(() => ({ __html: SentryLogo().outerHTML }), []);\n\n  return (\n    y$1('h2', { class: \"dialog__header\",}\n      , y$1('span', { class: \"dialog__title\",}, options.formTitle)\n      , options.showBranding ? (\n        y$1('a', {\n          class: \"brand-link\",\n          target: \"_blank\",\n          href: \"https://sentry.io/welcome/\",\n          title: \"Powered by Sentry\"  ,\n          rel: \"noopener noreferrer\" ,\n          dangerouslySetInnerHTML: logoHtml,}\n        )\n      ) : null\n    )\n  );\n}\n\n/**\n * Validate that a given feedback submission has the required fields\n */\nfunction getMissingFields(feedback, props) {\n  const emptyFields = [];\n  if (props.isNameRequired && !feedback.name) {\n    emptyFields.push(props.nameLabel);\n  }\n  if (props.isEmailRequired && !feedback.email) {\n    emptyFields.push(props.emailLabel);\n  }\n  if (!feedback.message) {\n    emptyFields.push(props.messageLabel);\n  }\n\n  return emptyFields;\n}\n\nfunction retrieveStringValue(formData, key) {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\nfunction Form({\n  options,\n  defaultEmail,\n  defaultName,\n\n  onFormClose,\n  onSubmit,\n  onSubmitSuccess,\n  onSubmitError,\n  showEmail,\n  showName,\n  screenshotInput,\n}) {\n  const {\n    tags,\n    addScreenshotButtonLabel,\n    removeScreenshotButtonLabel,\n    cancelButtonLabel,\n    emailLabel,\n    emailPlaceholder,\n    isEmailRequired,\n    isNameRequired,\n    messageLabel,\n    messagePlaceholder,\n    nameLabel,\n    namePlaceholder,\n    submitButtonLabel,\n    isRequiredLabel,\n  } = options;\n  // TODO: set a ref on the form, and whenever an input changes call processForm() and setError()\n  const [error, setError] = p(null);\n\n  const [showScreenshotInput, setShowScreenshotInput] = p(false);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ScreenshotInputComponent = screenshotInput && screenshotInput.input;\n\n  const [screenshotError, setScreenshotError] = p(null);\n  const onScreenshotError = x((error) => {\n    setScreenshotError(error);\n    setShowScreenshotInput(false);\n  }, []);\n\n  const hasAllRequiredFields = x(\n    (data) => {\n      const missingFields = getMissingFields(data, {\n        emailLabel,\n        isEmailRequired,\n        isNameRequired,\n        messageLabel,\n        nameLabel,\n      });\n\n      if (missingFields.length > 0) {\n        setError(`Please enter in the following required fields: ${missingFields.join(', ')}`);\n      } else {\n        setError(null);\n      }\n\n      return missingFields.length === 0;\n    },\n    [emailLabel, isEmailRequired, isNameRequired, messageLabel, nameLabel],\n  );\n\n  const handleSubmit = x(\n    async (e) => {\n      try {\n        e.preventDefault();\n        if (!(e.target instanceof HTMLFormElement)) {\n          return;\n        }\n        const formData = new FormData(e.target);\n        const attachment = await (screenshotInput && showScreenshotInput ? screenshotInput.value() : undefined);\n\n        const data = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n          attachments: attachment ? [attachment] : undefined,\n        };\n\n        if (!hasAllRequiredFields(data)) {\n          return;\n        }\n\n        try {\n          await onSubmit(\n            {\n              name: data.name,\n              email: data.email,\n              message: data.message,\n              source: FEEDBACK_WIDGET_SOURCE,\n              tags,\n            },\n            { attachments: data.attachments },\n          );\n          onSubmitSuccess(data);\n        } catch (error) {\n          DEBUG_BUILD && logger.error(error);\n          setError(error );\n          onSubmitError(error );\n        }\n      } catch (e2) {\n        // pass\n      }\n    },\n    [screenshotInput && showScreenshotInput, onSubmitSuccess, onSubmitError],\n  );\n\n  return (\n    y$1('form', { class: \"form\", onSubmit: handleSubmit,}\n      , ScreenshotInputComponent && showScreenshotInput ? (\n        y$1(ScreenshotInputComponent, { onError: onScreenshotError,} )\n      ) : null\n\n      , y$1('div', { class: \"form__right\", 'data-sentry-feedback': true,}\n        , y$1('div', { class: \"form__top\",}\n          , error ? y$1('div', { class: \"form__error-container\",}, error) : null\n\n          , showName ? (\n            y$1('label', { for: \"name\", class: \"form__label\",}\n              , y$1(LabelText, { label: nameLabel, isRequiredLabel: isRequiredLabel, isRequired: isNameRequired,} )\n              , y$1('input', {\n                class: \"form__input\",\n                defaultValue: defaultName,\n                id: \"name\",\n                name: \"name\",\n                placeholder: namePlaceholder,\n                required: isNameRequired,\n                type: \"text\",}\n              )\n            )\n          ) : (\n            y$1('input', { 'aria-hidden': true, value: defaultName, name: \"name\", type: \"hidden\",} )\n          )\n\n          , showEmail ? (\n            y$1('label', { for: \"email\", class: \"form__label\",}\n              , y$1(LabelText, { label: emailLabel, isRequiredLabel: isRequiredLabel, isRequired: isEmailRequired,} )\n              , y$1('input', {\n                class: \"form__input\",\n                defaultValue: defaultEmail,\n                id: \"email\",\n                name: \"email\",\n                placeholder: emailPlaceholder,\n                required: isEmailRequired,\n                type: \"email\",}\n)\n            )\n          ) : (\n            y$1('input', { 'aria-hidden': true, value: defaultEmail, name: \"email\", type: \"hidden\",} )\n          )\n\n          , y$1('label', { for: \"message\", class: \"form__label\",}\n            , y$1(LabelText, { label: messageLabel, isRequiredLabel: isRequiredLabel, isRequired: true,} )\n            , y$1('textarea', {\n              autoFocus: true,\n              class: \"form__input form__input--textarea\" ,\n              id: \"message\",\n              name: \"message\",\n              placeholder: messagePlaceholder,\n              required: true,\n              rows: 5,}\n            )\n          )\n\n          , ScreenshotInputComponent ? (\n            y$1('label', { for: \"screenshot\", class: \"form__label\",}\n              , y$1('button', {\n                class: \"btn btn--default\" ,\n                type: \"button\",\n                onClick: () => {\n                  setScreenshotError(null);\n                  setShowScreenshotInput(prev => !prev);\n                },}\n\n                , showScreenshotInput ? removeScreenshotButtonLabel : addScreenshotButtonLabel\n              )\n              , screenshotError ? y$1('div', { class: \"form__error-container\",}, screenshotError.message) : null\n            )\n          ) : null\n        )\n        , y$1('div', { class: \"btn-group\",}\n          , y$1('button', { class: \"btn btn--primary\" , type: \"submit\",}\n            , submitButtonLabel\n          )\n          , y$1('button', { class: \"btn btn--default\" , type: \"button\", onClick: onFormClose,}\n            , cancelButtonLabel\n          )\n        )\n      )\n    )\n  );\n}\n\nfunction LabelText({\n  label,\n  isRequired,\n  isRequiredLabel,\n}\n\n) {\n  return (\n    y$1('span', { class: \"form__label__text\",}\n      , label\n      , isRequired && y$1('span', { class: \"form__label__text--required\",}, isRequiredLabel)\n    )\n  );\n}\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Success Icon (checkmark)\n */\nfunction SuccessIcon() {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'inherit',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n\nfunction Dialog({ open, onFormSubmitted, ...props }) {\n  const options = props.options;\n  const successIconHtml = q(() => ({ __html: SuccessIcon().outerHTML }), []);\n\n  const [timeoutId, setTimeoutId] = p(null);\n\n  const handleOnSuccessClick = x(() => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      setTimeoutId(null);\n    }\n    onFormSubmitted();\n  }, [timeoutId]);\n\n  const onSubmitSuccess = x(\n    (data) => {\n      props.onSubmitSuccess(data);\n      setTimeoutId(\n        setTimeout(() => {\n          onFormSubmitted();\n          setTimeoutId(null);\n        }, SUCCESS_MESSAGE_TIMEOUT),\n      );\n    },\n    [onFormSubmitted],\n  );\n\n  return (\n    y$1(g$1, null\n      , timeoutId ? (\n        y$1('div', { class: \"success__position\", onClick: handleOnSuccessClick,}\n          , y$1('div', { class: \"success__content\",}\n            , options.successMessageText\n            , y$1('span', { class: \"success__icon\", dangerouslySetInnerHTML: successIconHtml,} )\n          )\n        )\n      ) : (\n        y$1('dialog', { class: \"dialog\", onClick: options.onFormClose, open: open,}\n          , y$1('div', { class: \"dialog__position\",}\n            , y$1('div', {\n              class: \"dialog__content\",\n              onClick: e => {\n                // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n                e.stopPropagation();\n              },}\n\n              , y$1(DialogHeader, { options: options,} )\n              , y$1(Form, { ...props, onSubmitSuccess: onSubmitSuccess,} )\n            )\n          )\n        )\n      )\n    )\n  );\n}\n\nconst DIALOG = `\n.dialog {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: 0;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n\n  color: var(--dialog-color, var(--foreground));\n  fill: var(--dialog-color, var(--foreground));\n  line-height: 1.75em;\n\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  inset: 0;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog__position {\n  position: fixed;\n  z-index: var(--z-index);\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  display: flex;\n  max-height: calc(100vh - (2 * var(--page-margin)));\n}\n@media (max-width: 600px) {\n  .dialog__position {\n    inset: var(--page-margin);\n    padding: 0;\n  }\n}\n\n.dialog__position:has(.editor) {\n  inset: var(--page-margin);\n  padding: 0;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: var(--dialog-padding, 24px);\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  background: var(--dialog-background, var(--background));\n  border-radius: var(--dialog-border-radius, 20px);\n  border: var(--dialog-border, var(--border));\n  box-shadow: var(--dialog-box-shadow, var(--box-shadow));\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.2s ease-in-out;\n}\n\n`;\n\nconst DIALOG_HEADER = `\n.dialog__header {\n  display: flex;\n  gap: 4px;\n  justify-content: space-between;\n  font-weight: var(--dialog-header-weight, 600);\n  margin: 0;\n}\n.dialog__title {\n  align-self: center;\n  width: var(--form-width, 272px);\n}\n\n@media (max-width: 600px) {\n  .dialog__title {\n    width: auto;\n  }\n}\n\n.dialog__position:has(.editor) .dialog__title {\n  width: auto;\n}\n\n\n.brand-link {\n  display: inline-flex;\n}\n.brand-link:focus-visible {\n  outline: var(--outline);\n}\n`;\n\nconst FORM = `\n.form {\n  display: flex;\n  overflow: auto;\n  flex-direction: row;\n  gap: 16px;\n  flex: 1 0;\n}\n\n.form__right {\n  flex: 0 0 auto;\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n  width: var(--form-width, 100%);\n}\n\n.dialog__position:has(.editor) .form__right {\n  width: var(--form-width, 272px);\n}\n\n.form__top {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form__error-container {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background: transparent;\n  box-sizing: border-box;\n  border: var(--input-border, var(--border));\n  border-radius: var(--input-border-radius, 6px);\n  color: var(--input-color, inherit);\n  fill: var(--input-color, inherit);\n  font-size: var(--input-font-size, inherit);\n  font-weight: var(--input-font-weight, 500);\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  opacity: 0.65;\n  color: var(--input-placeholder-color, inherit);\n  filter: var(--interactive-filter);\n}\n\n.form__input:focus-visible {\n  outline: var(--input-focus-outline, var(--outline));\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.error {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n`;\n\nconst BUTTON = `\n.btn-group {\n  display: grid;\n  gap: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--button-font-size, inherit);\n  font-weight: var(--button-font-weight, 600);\n  padding: var(--button-padding, 6px 16px);\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  color: var(--button-primary-color, var(--accent-foreground));\n  fill: var(--button-primary-color, var(--accent-foreground));\n  background: var(--button-primary-background, var(--accent-background));\n  border: var(--button-primary-border, var(--border));\n  border-radius: var(--button-primary-border-radius, 6px);\n  font-weight: var(--button-primary-font-weight, 500);\n}\n.btn--primary:hover {\n  color: var(--button-primary-hover-color, var(--accent-foreground));\n  fill: var(--button-primary-hover-color, var(--accent-foreground));\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n}\n.btn--primary:focus-visible {\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n  outline: var(--button-primary-focus-outline, var(--outline));\n}\n\n.btn--default {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-background, var(--background));\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  font-weight: var(--button-font-weight, 500);\n}\n.btn--default:hover {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n.btn--default:focus-visible {\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n  outline: var(--button-focus-outline, var(--outline));\n}\n`;\n\nconst SUCCESS = `\n.success__position {\n  position: fixed;\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  z-index: var(--z-index);\n}\n.success__content {\n  background: var(--success-background, var(--background));\n  border: var(--success-border, var(--border));\n  border-radius: var(--success-border-radius, 1.7em/50%);\n  box-shadow: var(--success-box-shadow, var(--box-shadow));\n  font-weight: var(--success-font-weight, 600);\n  color: var(--success-color);\n  fill: var(--success-color);\n  padding: 12px 24px;\n  line-height: 1.75em;\n\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success__icon {\n  display: flex;\n}\n`;\n\n/**\n * Creates <style> element for widget dialog\n */\nfunction createDialogStyles(styleNonce) {\n  const style = DOCUMENT.createElement('style');\n\n  style.textContent = `\n:host {\n  --dialog-inset: var(--inset);\n}\n\n${DIALOG}\n${DIALOG_HEADER}\n${FORM}\n${BUTTON}\n${SUCCESS}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n\nfunction getUser() {\n  const currentUser = getCurrentScope().getUser();\n  const isolationUser = getIsolationScope().getUser();\n  const globalUser = getGlobalScope().getUser();\n  if (currentUser && Object.keys(currentUser).length) {\n    return currentUser;\n  }\n  if (isolationUser && Object.keys(isolationUser).length) {\n    return isolationUser;\n  }\n  return globalUser;\n}\n\nconst feedbackModalIntegration = (() => {\n  return {\n    name: 'FeedbackModal',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    createDialog: ({ options, screenshotIntegration, sendFeedback, shadow }) => {\n      const shadowRoot = shadow ;\n      const userKey = options.useSentryUser;\n      const user = getUser();\n\n      const el = DOCUMENT.createElement('div');\n      const style = createDialogStyles(options.styleNonce);\n\n      let originalOverflow = '';\n      const dialog = {\n        get el() {\n          return el;\n        },\n        appendToDom() {\n          if (!shadowRoot.contains(style) && !shadowRoot.contains(el)) {\n            shadowRoot.appendChild(style);\n            shadowRoot.appendChild(el);\n          }\n        },\n        removeFromDom() {\n          shadowRoot.removeChild(el);\n          shadowRoot.removeChild(style);\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n        open() {\n          renderContent(true);\n          options.onFormOpen && options.onFormOpen();\n          originalOverflow = DOCUMENT.body.style.overflow;\n          DOCUMENT.body.style.overflow = 'hidden';\n        },\n        close() {\n          renderContent(false);\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n      };\n\n      const screenshotInput = screenshotIntegration && screenshotIntegration.createInput({ h: y$1, hooks, dialog, options });\n\n      const renderContent = (open) => {\n        B$1(\n          y$1(Dialog, {\n            options: options,\n            screenshotInput: screenshotInput,\n            showName: options.showName || options.isNameRequired,\n            showEmail: options.showEmail || options.isEmailRequired,\n            defaultName: (userKey && user && user[userKey.name]) || '',\n            defaultEmail: (userKey && user && user[userKey.email]) || '',\n            onFormClose: () => {\n              renderContent(false);\n              options.onFormClose && options.onFormClose();\n            },\n            onSubmit: sendFeedback,\n            onSubmitSuccess: (data) => {\n              renderContent(false);\n              options.onSubmitSuccess && options.onSubmitSuccess(data);\n            },\n            onSubmitError: (error) => {\n              options.onSubmitError && options.onSubmitError(error);\n            },\n            onFormSubmitted: () => {\n              options.onFormSubmitted && options.onFormSubmitted();\n            },\n            open: open,}\n          ),\n          el,\n        );\n      };\n\n      return dialog;\n    },\n  };\n}) ;\n\nfunction CropCornerFactory({\n  h, // eslint-disable-line @typescript-eslint/no-unused-vars\n}) {\n  return function CropCorner({\n    top,\n    left,\n    corner,\n    onGrabButton,\n  }\n\n) {\n    return (\n      h('button', {\n        class: `editor__crop-corner editor__crop-corner--${corner} `,\n        style: {\n          top: top,\n          left: left,\n        },\n        onMouseDown: e => {\n          e.preventDefault();\n          onGrabButton(e, corner);\n        },\n        onClick: e => {\n          e.preventDefault();\n        },}\n)\n    );\n  };\n}\n\n/**\n * Creates <style> element for widget dialog\n */\nfunction createScreenshotInputStyles(styleNonce) {\n  const style = DOCUMENT.createElement('style');\n\n  const surface200 = '#1A141F';\n  const gray100 = '#302735';\n\n  style.textContent = `\n.editor {\n  padding: 10px;\n  padding-top: 65px;\n  padding-bottom: 65px;\n  flex-grow: 1;\n\n  background-color: ${surface200};\n  background-image: repeating-linear-gradient(\n      -145deg,\n      transparent,\n      transparent 8px,\n      ${surface200} 8px,\n      ${surface200} 11px\n    ),\n    repeating-linear-gradient(\n      -45deg,\n      transparent,\n      transparent 15px,\n      ${gray100} 15px,\n      ${gray100} 16px\n    );\n}\n\n.editor__canvas-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editor__canvas-container canvas {\n  object-fit: contain;\n  position: relative;\n}\n\n.editor__crop-btn-group {\n  padding: 8px;\n  gap: 8px;\n  border-radius: var(--menu-border-radius, 6px);\n  background: var(--button-primary-background, var(--background));\n  width: 175px;\n  position: absolute;\n}\n\n.editor__crop-corner {\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  background: none;\n  border: 3px solid #ffffff;\n}\n\n.editor__crop-corner--top-left {\n  cursor: nwse-resize;\n  border-right: none;\n  border-bottom: none;\n}\n.editor__crop-corner--top-right {\n  cursor: nesw-resize;\n  border-left: none;\n  border-bottom: none;\n}\n.editor__crop-corner--bottom-left {\n  cursor: nesw-resize;\n  border-right: none;\n  border-top: none;\n}\n.editor__crop-corner--bottom-right {\n  cursor: nwse-resize;\n  border-left: none;\n  border-top: none;\n}\n`;\n\n  if (styleNonce) {\n    style.setAttribute('nonce', styleNonce);\n  }\n\n  return style;\n}\n\nfunction useTakeScreenshotFactory({ hooks }) {\n  return function useTakeScreenshot({ onBeforeScreenshot, onScreenshot, onAfterScreenshot, onError }) {\n    hooks.useEffect(() => {\n      const takeScreenshot = async () => {\n        onBeforeScreenshot();\n        const stream = await NAVIGATOR.mediaDevices.getDisplayMedia({\n          video: {\n            width: WINDOW.innerWidth * WINDOW.devicePixelRatio,\n            height: WINDOW.innerHeight * WINDOW.devicePixelRatio,\n          },\n          audio: false,\n          // @ts-expect-error experimental flags: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#prefercurrenttab\n          monitorTypeSurfaces: 'exclude',\n          preferCurrentTab: true,\n          selfBrowserSurface: 'include',\n          surfaceSwitching: 'exclude',\n        });\n\n        const video = DOCUMENT.createElement('video');\n        await new Promise((resolve, reject) => {\n          video.srcObject = stream;\n          video.onloadedmetadata = () => {\n            onScreenshot(video);\n            stream.getTracks().forEach(track => track.stop());\n            resolve();\n          };\n          video.play().catch(reject);\n        });\n        onAfterScreenshot();\n      };\n\n      takeScreenshot().catch(onError);\n    }, []);\n  };\n}\n\nconst CROP_BUTTON_SIZE = 30;\nconst CROP_BUTTON_BORDER = 3;\nconst CROP_BUTTON_OFFSET = CROP_BUTTON_SIZE + CROP_BUTTON_BORDER;\nconst DPI = WINDOW.devicePixelRatio;\n\nconst constructRect = (box) => {\n  return {\n    x: Math.min(box.startX, box.endX),\n    y: Math.min(box.startY, box.endY),\n    width: Math.abs(box.startX - box.endX),\n    height: Math.abs(box.startY - box.endY),\n  };\n};\n\nconst getContainedSize = (img) => {\n  const imgClientHeight = img.clientHeight;\n  const imgClientWidth = img.clientWidth;\n  const ratio = img.width / img.height;\n  let width = imgClientHeight * ratio;\n  let height = imgClientHeight;\n  if (width > imgClientWidth) {\n    width = imgClientWidth;\n    height = imgClientWidth / ratio;\n  }\n  const x = (imgClientWidth - width) / 2;\n  const y = (imgClientHeight - height) / 2;\n  return { startX: x, startY: y, endX: width + x, endY: height + y };\n};\n\nfunction ScreenshotEditorFactory({\n  h,\n  hooks,\n  imageBuffer,\n  dialog,\n  options,\n}) {\n  const useTakeScreenshot = useTakeScreenshotFactory({ hooks });\n\n  return function ScreenshotEditor({ onError }) {\n    const styles = hooks.useMemo(() => ({ __html: createScreenshotInputStyles(options.styleNonce).innerText }), []);\n    const CropCorner = CropCornerFactory({ h });\n\n    const canvasContainerRef = hooks.useRef(null);\n    const cropContainerRef = hooks.useRef(null);\n    const croppingRef = hooks.useRef(null);\n    const [croppingRect, setCroppingRect] = hooks.useState({ startX: 0, startY: 0, endX: 0, endY: 0 });\n    const [confirmCrop, setConfirmCrop] = hooks.useState(false);\n    const [isResizing, setIsResizing] = hooks.useState(false);\n\n    hooks.useEffect(() => {\n      WINDOW.addEventListener('resize', resizeCropper, false);\n    }, []);\n\n    function resizeCropper() {\n      const cropper = croppingRef.current;\n      const imageDimensions = constructRect(getContainedSize(imageBuffer));\n      if (cropper) {\n        cropper.width = imageDimensions.width * DPI;\n        cropper.height = imageDimensions.height * DPI;\n        cropper.style.width = `${imageDimensions.width}px`;\n        cropper.style.height = `${imageDimensions.height}px`;\n        const ctx = cropper.getContext('2d');\n        if (ctx) {\n          ctx.scale(DPI, DPI);\n        }\n      }\n\n      const cropButton = cropContainerRef.current;\n      if (cropButton) {\n        cropButton.style.width = `${imageDimensions.width}px`;\n        cropButton.style.height = `${imageDimensions.height}px`;\n      }\n\n      setCroppingRect({ startX: 0, startY: 0, endX: imageDimensions.width, endY: imageDimensions.height });\n    }\n\n    hooks.useEffect(() => {\n      const cropper = croppingRef.current;\n      if (!cropper) {\n        return;\n      }\n\n      const ctx = cropper.getContext('2d');\n      if (!ctx) {\n        return;\n      }\n\n      const imageDimensions = constructRect(getContainedSize(imageBuffer));\n      const croppingBox = constructRect(croppingRect);\n      ctx.clearRect(0, 0, imageDimensions.width, imageDimensions.height);\n\n      // draw gray overlay around the selection\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.fillRect(0, 0, imageDimensions.width, imageDimensions.height);\n      ctx.clearRect(croppingBox.x, croppingBox.y, croppingBox.width, croppingBox.height);\n\n      // draw selection border\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(croppingBox.x + 1, croppingBox.y + 1, croppingBox.width - 2, croppingBox.height - 2);\n      ctx.strokeStyle = '#000000';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(croppingBox.x + 3, croppingBox.y + 3, croppingBox.width - 6, croppingBox.height - 6);\n    }, [croppingRect]);\n\n    function onGrabButton(e, corner) {\n      setConfirmCrop(false);\n      setIsResizing(true);\n      const handleMouseMove = makeHandleMouseMove(corner);\n      const handleMouseUp = () => {\n        DOCUMENT.removeEventListener('mousemove', handleMouseMove);\n        DOCUMENT.removeEventListener('mouseup', handleMouseUp);\n        setConfirmCrop(true);\n        setIsResizing(false);\n      };\n\n      DOCUMENT.addEventListener('mouseup', handleMouseUp);\n      DOCUMENT.addEventListener('mousemove', handleMouseMove);\n    }\n\n    const makeHandleMouseMove = hooks.useCallback((corner) => {\n      return function (e) {\n        if (!croppingRef.current) {\n          return;\n        }\n        const cropCanvas = croppingRef.current;\n        const cropBoundingRect = cropCanvas.getBoundingClientRect();\n        const mouseX = e.clientX - cropBoundingRect.x;\n        const mouseY = e.clientY - cropBoundingRect.y;\n        switch (corner) {\n          case 'top-left':\n            setCroppingRect(prev => ({\n              ...prev,\n              startX: Math.min(Math.max(0, mouseX), prev.endX - CROP_BUTTON_OFFSET),\n              startY: Math.min(Math.max(0, mouseY), prev.endY - CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'top-right':\n            setCroppingRect(prev => ({\n              ...prev,\n              endX: Math.max(Math.min(mouseX, cropCanvas.width / DPI), prev.startX + CROP_BUTTON_OFFSET),\n              startY: Math.min(Math.max(0, mouseY), prev.endY - CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'bottom-left':\n            setCroppingRect(prev => ({\n              ...prev,\n              startX: Math.min(Math.max(0, mouseX), prev.endX - CROP_BUTTON_OFFSET),\n              endY: Math.max(Math.min(mouseY, cropCanvas.height / DPI), prev.startY + CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'bottom-right':\n            setCroppingRect(prev => ({\n              ...prev,\n              endX: Math.max(Math.min(mouseX, cropCanvas.width / DPI), prev.startX + CROP_BUTTON_OFFSET),\n              endY: Math.max(Math.min(mouseY, cropCanvas.height / DPI), prev.startY + CROP_BUTTON_OFFSET),\n            }));\n            break;\n        }\n      };\n    }, []);\n\n    // DRAGGING FUNCTIONALITY.\n    const initialPositionRef = hooks.useRef({ initialX: 0, initialY: 0 });\n\n    function onDragStart(e) {\n      if (isResizing) return;\n\n      initialPositionRef.current = { initialX: e.clientX, initialY: e.clientY };\n\n      const handleMouseMove = (moveEvent) => {\n        const cropCanvas = croppingRef.current;\n        if (!cropCanvas) return;\n\n        const deltaX = moveEvent.clientX - initialPositionRef.current.initialX;\n        const deltaY = moveEvent.clientY - initialPositionRef.current.initialY;\n\n        setCroppingRect(prev => {\n          // Math.max stops it from going outside of the borders\n          const newStartX = Math.max(\n            0,\n            Math.min(prev.startX + deltaX, cropCanvas.width / DPI - (prev.endX - prev.startX)),\n          );\n          const newStartY = Math.max(\n            0,\n            Math.min(prev.startY + deltaY, cropCanvas.height / DPI - (prev.endY - prev.startY)),\n          );\n          // Don't want to change size, just position\n          const newEndX = newStartX + (prev.endX - prev.startX);\n          const newEndY = newStartY + (prev.endY - prev.startY);\n\n          initialPositionRef.current.initialX = moveEvent.clientX;\n          initialPositionRef.current.initialY = moveEvent.clientY;\n\n          return {\n            startX: newStartX,\n            startY: newStartY,\n            endX: newEndX,\n            endY: newEndY,\n          };\n        });\n      };\n\n      const handleMouseUp = () => {\n        DOCUMENT.removeEventListener('mousemove', handleMouseMove);\n        DOCUMENT.removeEventListener('mouseup', handleMouseUp);\n      };\n\n      DOCUMENT.addEventListener('mousemove', handleMouseMove);\n      DOCUMENT.addEventListener('mouseup', handleMouseUp);\n    }\n\n    function submit() {\n      const cutoutCanvas = DOCUMENT.createElement('canvas');\n      const imageBox = constructRect(getContainedSize(imageBuffer));\n      const croppingBox = constructRect(croppingRect);\n      cutoutCanvas.width = croppingBox.width * DPI;\n      cutoutCanvas.height = croppingBox.height * DPI;\n\n      const cutoutCtx = cutoutCanvas.getContext('2d');\n      if (cutoutCtx && imageBuffer) {\n        cutoutCtx.drawImage(\n          imageBuffer,\n          (croppingBox.x / imageBox.width) * imageBuffer.width,\n          (croppingBox.y / imageBox.height) * imageBuffer.height,\n          (croppingBox.width / imageBox.width) * imageBuffer.width,\n          (croppingBox.height / imageBox.height) * imageBuffer.height,\n          0,\n          0,\n          cutoutCanvas.width,\n          cutoutCanvas.height,\n        );\n      }\n\n      const ctx = imageBuffer.getContext('2d');\n      if (ctx) {\n        ctx.clearRect(0, 0, imageBuffer.width, imageBuffer.height);\n        imageBuffer.width = cutoutCanvas.width;\n        imageBuffer.height = cutoutCanvas.height;\n        imageBuffer.style.width = `${croppingBox.width}px`;\n        imageBuffer.style.height = `${croppingBox.height}px`;\n        ctx.drawImage(cutoutCanvas, 0, 0);\n        resizeCropper();\n      }\n    }\n\n    useTakeScreenshot({\n      onBeforeScreenshot: hooks.useCallback(() => {\n        (dialog.el ).style.display = 'none';\n      }, []),\n      onScreenshot: hooks.useCallback(\n        (imageSource) => {\n          const context = imageBuffer.getContext('2d');\n          if (!context) {\n            throw new Error('Could not get canvas context');\n          }\n          imageBuffer.width = imageSource.videoWidth;\n          imageBuffer.height = imageSource.videoHeight;\n          imageBuffer.style.width = '100%';\n          imageBuffer.style.height = '100%';\n          context.drawImage(imageSource, 0, 0);\n        },\n        [imageBuffer],\n      ),\n      onAfterScreenshot: hooks.useCallback(() => {\n        (dialog.el ).style.display = 'block';\n        const container = canvasContainerRef.current;\n        container && container.appendChild(imageBuffer);\n        resizeCropper();\n      }, []),\n      onError: hooks.useCallback(error => {\n        (dialog.el ).style.display = 'block';\n        onError(error);\n      }, []),\n    });\n\n    return (\n      h('div', { class: \"editor\",}\n        , h('style', { nonce: options.styleNonce, dangerouslySetInnerHTML: styles,} )\n        , h('div', { class: \"editor__canvas-container\", ref: canvasContainerRef,}\n          , h('div', { class: \"editor__crop-container\", style: { position: 'absolute', zIndex: 1 }, ref: cropContainerRef,}\n            , h('canvas', {\n              onMouseDown: onDragStart,\n              style: { position: 'absolute', cursor: confirmCrop ? 'move' : 'auto' },\n              ref: croppingRef,}\n)\n            , h(CropCorner, {\n              left: croppingRect.startX - CROP_BUTTON_BORDER,\n              top: croppingRect.startY - CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"top-left\",}\n)\n            , h(CropCorner, {\n              left: croppingRect.endX - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              top: croppingRect.startY - CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"top-right\",}\n)\n            , h(CropCorner, {\n              left: croppingRect.startX - CROP_BUTTON_BORDER,\n              top: croppingRect.endY - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"bottom-left\",}\n)\n            , h(CropCorner, {\n              left: croppingRect.endX - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              top: croppingRect.endY - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"bottom-right\",}\n)\n            , h('div', {\n              style: {\n                left: Math.max(0, croppingRect.endX - 191),\n                top: Math.max(0, croppingRect.endY + 8),\n                display: confirmCrop ? 'flex' : 'none',\n              },\n              class: \"editor__crop-btn-group\",}\n\n              , h('button', {\n                onClick: e => {\n                  e.preventDefault();\n                  if (croppingRef.current) {\n                    setCroppingRect({\n                      startX: 0,\n                      startY: 0,\n                      endX: croppingRef.current.width / DPI,\n                      endY: croppingRef.current.height / DPI,\n                    });\n                  }\n                  setConfirmCrop(false);\n                },\n                class: \"btn btn--default\" ,}\n\n                , options.cancelButtonLabel\n              )\n              , h('button', {\n                onClick: e => {\n                  e.preventDefault();\n                  submit();\n                  setConfirmCrop(false);\n                },\n                class: \"btn btn--primary\" ,}\n\n                , options.confirmButtonLabel\n              )\n            )\n          )\n        )\n      )\n    );\n  };\n}\n\nconst feedbackScreenshotIntegration = (() => {\n  return {\n    name: 'FeedbackScreenshot',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    createInput: ({ h, hooks, dialog, options }) => {\n      const imageBuffer = DOCUMENT.createElement('canvas');\n\n      return {\n        input: ScreenshotEditorFactory({\n          h: h ,\n          hooks: hooks ,\n          imageBuffer,\n          dialog,\n          options,\n        }) , // eslint-disable-line @typescript-eslint/no-explicit-any\n\n        value: async () => {\n          const blob = await new Promise(resolve => {\n            imageBuffer.toBlob(resolve, 'image/png');\n          });\n          if (blob) {\n            const data = new Uint8Array(await blob.arrayBuffer());\n            const attachment = {\n              data,\n              filename: 'screenshot.png',\n              contentType: 'application/png',\n              // attachmentType?: string;\n            };\n            return attachment;\n          }\n          return undefined;\n        },\n      };\n    },\n  };\n}) ;\n\nexport { buildFeedbackIntegration, feedbackModalIntegration, feedbackScreenshotIntegration, getFeedback, sendFeedback };\n//# sourceMappingURL=index.js.map\n","import { buildFeedbackIntegration } from '@sentry-internal/feedback';\nimport { lazyLoadIntegration } from './utils/lazyLoadIntegration.js';\n\n/**\n * An integration to add user feedback to your application,\n * while loading most of the code lazily only when it's needed.\n */\nconst feedbackAsyncIntegration = buildFeedbackIntegration({\n  lazyLoadIntegration,\n});\n\nexport { feedbackAsyncIntegration };\n//# sourceMappingURL=feedbackAsync.js.map\n","import { buildFeedbackIntegration, feedbackModalIntegration, feedbackScreenshotIntegration } from '@sentry-internal/feedback';\n\n/** Add a widget to capture user feedback to your application. */\nconst feedbackSyncIntegration = buildFeedbackIntegration({\n  getModalIntegration: () => feedbackModalIntegration,\n  getScreenshotIntegration: () => feedbackScreenshotIntegration,\n});\n\nexport { feedbackSyncIntegration };\n//# sourceMappingURL=feedbackSync.js.map\n","const COUNTER_METRIC_TYPE = 'c' ;\nconst GAUGE_METRIC_TYPE = 'g' ;\nconst SET_METRIC_TYPE = 's' ;\nconst DISTRIBUTION_METRIC_TYPE = 'd' ;\n\n/**\n * This does not match spec in https://develop.sentry.dev/sdk/metrics\n * but was chosen to optimize for the most common case in browser environments.\n */\nconst DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;\n\n/**\n * SDKs are required to bucket into 10 second intervals (rollup in seconds)\n * which is the current lower bound of metric accuracy.\n */\nconst DEFAULT_FLUSH_INTERVAL = 10000;\n\n/**\n * The maximum number of metrics that should be stored in memory.\n */\nconst MAX_WEIGHT = 10000;\n\nexport { COUNTER_METRIC_TYPE, DEFAULT_BROWSER_FLUSH_INTERVAL, DEFAULT_FLUSH_INTERVAL, DISTRIBUTION_METRIC_TYPE, GAUGE_METRIC_TYPE, MAX_WEIGHT, SET_METRIC_TYPE };\n//# sourceMappingURL=constants.js.map\n","import { getClient } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport '../tracing/errors.js';\nimport { getGlobalSingleton } from '../utils-hoist/worldwide.js';\nimport '../utils-hoist/debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { getActiveSpan, getRootSpan, spanToJSON } from '../utils/spanUtils.js';\nimport { startSpanManual } from '../tracing/trace.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { COUNTER_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, SET_METRIC_TYPE, GAUGE_METRIC_TYPE } from './constants.js';\n\n/**\n * Gets the metrics aggregator for a given client.\n * @param client The client for which to get the metrics aggregator.\n * @param Aggregator Optional metrics aggregator class to use to create an aggregator if one does not exist.\n */\nfunction getMetricsAggregatorForClient(\n  client,\n  Aggregator,\n) {\n  const globalMetricsAggregators = getGlobalSingleton(\n    'globalMetricsAggregators',\n    () => new WeakMap(),\n  );\n\n  const aggregator = globalMetricsAggregators.get(client);\n  if (aggregator) {\n    return aggregator;\n  }\n\n  const newAggregator = new Aggregator(client);\n  client.on('flush', () => newAggregator.flush());\n  client.on('close', () => newAggregator.close());\n  globalMetricsAggregators.set(client, newAggregator);\n\n  return newAggregator;\n}\n\nfunction addToMetricsAggregator(\n  Aggregator,\n  metricType,\n  name,\n  value,\n  data = {},\n) {\n  const client = data.client || getClient();\n\n  if (!client) {\n    return;\n  }\n\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n  const transactionName = rootSpan && spanToJSON(rootSpan).description;\n\n  const { unit, tags, timestamp } = data;\n  const { release, environment } = client.getOptions();\n  const metricTags = {};\n  if (release) {\n    metricTags.release = release;\n  }\n  if (environment) {\n    metricTags.environment = environment;\n  }\n  if (transactionName) {\n    metricTags.transaction = transactionName;\n  }\n\n  DEBUG_BUILD && logger.log(`Adding value of ${value} to ${metricType} metric ${name}`);\n\n  const aggregator = getMetricsAggregatorForClient(client, Aggregator);\n  aggregator.add(metricType, name, value, unit, { ...metricTags, ...tags }, timestamp);\n}\n\n/**\n * Adds a value to a counter metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction increment(aggregator, name, value = 1, data) {\n  addToMetricsAggregator(aggregator, COUNTER_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction distribution(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, DISTRIBUTION_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction timing(\n  aggregator,\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  // callback form\n  if (typeof value === 'function') {\n    const startTime = timestampInSeconds();\n\n    return startSpanManual(\n      {\n        op: 'metrics.timing',\n        name,\n        startTime,\n        onlyIfParent: true,\n      },\n      span => {\n        return handleCallbackErrors(\n          () => value(),\n          () => {\n            // no special error handling necessary\n          },\n          () => {\n            const endTime = timestampInSeconds();\n            const timeDiff = endTime - startTime;\n            // eslint-disable-next-line deprecation/deprecation\n            distribution(aggregator, name, timeDiff, { ...data, unit: 'second' });\n            span.end(endTime);\n          },\n        );\n      },\n    );\n  }\n\n  // value form\n  // eslint-disable-next-line deprecation/deprecation\n  distribution(aggregator, name, value, { ...data, unit });\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction set(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, SET_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction gauge(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, GAUGE_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * The metrics API is used to capture custom metrics in Sentry.\n *\n * @deprecated The Sentry metrics beta has ended. This export will be removed in a future release.\n */\nconst metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n  /**\n   * @ignore This is for internal use only.\n   */\n  getMetricsAggregatorForClient,\n};\n\n// Although this is typed to be a number, we try to handle strings as well here\nfunction ensureNumber(number) {\n  return typeof number === 'string' ? parseInt(number) : number;\n}\n\nexport { metrics };\n//# sourceMappingURL=exports.js.map\n","import { dropUndefinedKeys } from '../utils-hoist/object.js';\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/**\n * Sanitizes units\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeUnit(unit) {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/**\n * Sanitizes metric keys\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeMetricKey(key) {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\n/**\n * Sanitizes metric keys\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeTagKey(key) {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\n/**\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nconst tagValueReplacements = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input) {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value) {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n\nexport { getBucketKey, sanitizeMetricKey, sanitizeTags, sanitizeUnit, serializeMetricBuckets, simpleHash };\n//# sourceMappingURL=utils.js.map\n","import { dsnToString } from '../utils-hoist/dsn.js';\nimport { createEnvelope } from '../utils-hoist/envelope.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { serializeMetricBuckets } from './utils.js';\n\n/**\n * Captures aggregated metrics to the supplied client.\n */\nfunction captureAggregateMetrics(client, metricBucketItems) {\n  logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n  const dsn = client.getDsn();\n  const metadata = client.getSdkMetadata();\n  const tunnel = client.getOptions().tunnel;\n\n  const metricsEnvelope = createMetricEnvelope(metricBucketItems, dsn, metadata, tunnel);\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(metricsEnvelope);\n}\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\nexport { captureAggregateMetrics, createMetricEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { COUNTER_METRIC_TYPE, GAUGE_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, SET_METRIC_TYPE } from './constants.js';\nimport { simpleHash } from './utils.js';\n\n/**\n * A metric instance representing a counter.\n */\nclass CounterMetric  {\n   constructor( _value) {this._value = _value;}\n\n  /** @inheritDoc */\n   get weight() {\n    return 1;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value += value;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._value}`;\n  }\n}\n\n/**\n * A metric instance representing a gauge.\n */\nclass GaugeMetric  {\n\n   constructor(value) {\n    this._last = value;\n    this._min = value;\n    this._max = value;\n    this._sum = value;\n    this._count = 1;\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return 5;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._last = value;\n    if (value < this._min) {\n      this._min = value;\n    }\n    if (value > this._max) {\n      this._max = value;\n    }\n    this._sum += value;\n    this._count++;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n  }\n}\n\n/**\n * A metric instance representing a distribution.\n */\nclass DistributionMetric  {\n\n   constructor(first) {\n    this._value = [first];\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.length;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.push(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return this._value.join(':');\n  }\n}\n\n/**\n * A metric instance representing a set.\n */\nclass SetMetric  {\n\n   constructor( first) {this.first = first;\n    this._value = new Set([first]);\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.size;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.add(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return Array.from(this._value)\n      .map(val => (typeof val === 'string' ? simpleHash(val) : val))\n      .join(':');\n  }\n}\n\nconst METRIC_MAP = {\n  [COUNTER_METRIC_TYPE]: CounterMetric,\n  [GAUGE_METRIC_TYPE]: GaugeMetric,\n  [DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n  [SET_METRIC_TYPE]: SetMetric,\n};\n\nexport { CounterMetric, DistributionMetric, GaugeMetric, METRIC_MAP, SetMetric };\n//# sourceMappingURL=instance.js.map\n","import { timestampInSeconds } from '../utils-hoist/time.js';\nimport { updateMetricSummaryOnActiveSpan } from '../utils/spanUtils.js';\nimport { DEFAULT_BROWSER_FLUSH_INTERVAL, SET_METRIC_TYPE } from './constants.js';\nimport { captureAggregateMetrics } from './envelope.js';\nimport { METRIC_MAP } from './instance.js';\nimport { sanitizeMetricKey, sanitizeTags, sanitizeUnit, getBucketKey } from './utils.js';\n\n/**\n * A simple metrics aggregator that aggregates metrics in memory and flushes them periodically.\n * Default flush interval is 5 seconds.\n *\n * @experimental This API is experimental and might change in the future.\n */\nclass BrowserMetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._interval = setInterval(() => this.flush(), DEFAULT_BROWSER_FLUSH_INTERVAL);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unsanitizedUnit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = timestampInSeconds(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = sanitizeMetricKey(unsanitizedName);\n    const tags = sanitizeTags(unsanitizedTags);\n    const unit = sanitizeUnit(unsanitizedUnit );\n\n    const bucketKey = getBucketKey(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    updateMetricSummaryOnActiveSpan(metricType, name, val, unit, unsanitizedTags, bucketKey);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush() {\n    // short circuit if buckets are empty.\n    if (this._buckets.size === 0) {\n      return;\n    }\n\n    const metricBuckets = Array.from(this._buckets.values());\n    captureAggregateMetrics(this._client, metricBuckets);\n\n    this._buckets.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close() {\n    clearInterval(this._interval);\n    this.flush();\n  }\n}\n\nexport { BrowserMetricsAggregator };\n//# sourceMappingURL=browser-aggregator.js.map\n","import { metrics as metrics$1, BrowserMetricsAggregator } from '@sentry/core';\n\n/**\n * Adds a value to a counter metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction increment(name, value = 1, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics$1.increment(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction distribution(name, value, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics$1.distribution(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction set(name, value, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics$1.set(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction gauge(name, value, data) {\n  // eslint-disable-next-line deprecation/deprecation\n  metrics$1.gauge(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\n\nfunction timing(\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return metrics$1.timing(BrowserMetricsAggregator, name, value, unit, data);\n}\n\n/**\n * The metrics API is used to capture custom metrics in Sentry.\n *\n * @deprecated The Sentry metrics beta has ended. This export will be removed in a future release.\n */\nconst metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n};\n\nexport { metrics };\n//# sourceMappingURL=metrics.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { envelopeContainsItemType } from '../utils-hoist/envelope.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { parseRetryAfterHeader } from '../utils-hoist/ratelimit.js';\n\nconst MIN_DELAY = 100; // 100 ms\nconst START_DELAY = 5000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nfunction makeOfflineTransport(\n  createTransport,\n) {\n  function log(...args) {\n    DEBUG_BUILD && logger.info('[Offline]:', ...args);\n  }\n\n  return options => {\n    const transport = createTransport(options);\n\n    if (!options.createStore) {\n      throw new Error('No `createStore` function was provided');\n    }\n\n    const store = options.createStore(options);\n\n    let retryDelay = START_DELAY;\n    let flushTimer;\n\n    function shouldQueue(env, error, retryDelay) {\n      // We want to drop client reports because they can be generated when we retry sending events while offline.\n      if (envelopeContainsItemType(env, ['client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay) {\n      if (flushTimer) {\n        clearTimeout(flushTimer );\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.shift();\n        if (found) {\n          log('Attempting to send previously queued event');\n\n          // We should to update the sent_at timestamp to the current time.\n          found[0].sent_at = new Date().toISOString();\n\n          void send(found, true).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) ;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff() {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope, isRetry = false) {\n      // We queue all replay envelopes to avoid multiple replay envelopes being sent at the same time. If one fails, we\n      // need to retry them in order.\n      if (!isRetry && envelopeContainsItemType(envelope, ['replay_event', 'replay_recording'])) {\n        await store.push(envelope);\n        flushIn(MIN_DELAY);\n        return {};\n      }\n\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = parseRetryAfterHeader(result.headers['retry-after']);\n          } else if (result.headers && result.headers['x-sentry-rate-limits']) {\n            delay = 60000; // 60 seconds\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (await shouldQueue(envelope, e , retryDelay)) {\n          // If this envelope was a retry, we want to add it to the front of the queue so it's retried again first.\n          if (isRetry) {\n            await store.unshift(envelope);\n          } else {\n            await store.push(envelope);\n          }\n          flushWithBackOff();\n          log('Error sending. Event queued.', e );\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: timeout => {\n        // If there's no timeout, we should attempt to flush the offline queue.\n        if (timeout === undefined) {\n          retryDelay = START_DELAY;\n          flushIn(MIN_DELAY);\n        }\n\n        return transport.flush(timeout);\n      },\n    };\n  };\n}\n\nexport { MIN_DELAY, START_DELAY, makeOfflineTransport };\n//# sourceMappingURL=offline.js.map\n","import { makeOfflineTransport, serializeEnvelope, parseEnvelope } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\nimport { makeFetchTransport } from './fetch.js';\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original license:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction promisifyRequest(request) {\n  return new Promise((resolve, reject) => {\n    // @ts-expect-error - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-expect-error - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nfunction createStore(dbName, storeName) {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store) {\n  return promisifyRequest(store.getAllKeys() );\n}\n\n/** Insert into the end of the store */\nfunction push(store, value, maxQueueSize) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Insert into the front of the store */\nfunction unshift(store, value, maxQueueSize) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an decremented key so that the entries are popped in order\n      store.put(value, Math.min(...keys, 0) - 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nfunction shift(store) {\n  return store(store => {\n    return keys(store).then(keys => {\n      const firstKey = keys[0];\n      if (firstKey == null) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(firstKey)).then(value => {\n        store.delete(firstKey);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nfunction createIndexedDbStore(options) {\n  let store;\n\n  // Lazily create the store only when it's needed\n  function getStore() {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    push: async (env) => {\n      try {\n        const serialized = await serializeEnvelope(env);\n        await push(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    unshift: async (env) => {\n      try {\n        const serialized = await serializeEnvelope(env);\n        await unshift(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    shift: async () => {\n      try {\n        const deserialized = await shift(getStore());\n        if (deserialized) {\n          return parseEnvelope(deserialized);\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport(\n  createTransport,\n) {\n  return options => {\n    const transport = createTransport({ ...options, createStore: createIndexedDbStore });\n\n    WINDOW.addEventListener('online', async _ => {\n      await transport.flush();\n    });\n\n    return transport;\n  };\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nfunction makeBrowserOfflineTransport(\n  createTransport = makeFetchTransport,\n) {\n  return makeIndexedDbOfflineTransport(makeOfflineTransport(createTransport));\n}\n\nexport { createStore, makeBrowserOfflineTransport, push, shift, unshift };\n//# sourceMappingURL=offline.js.map\n","import { spanToJSON, forEachEnvelopeItem, logger, getClient, timestampInSeconds, DEFAULT_ENVIRONMENT, uuid4, getDebugImagesForResources, browserPerformanceTimeOrigin } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\nfunction isUserAgentData(data) {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile) {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nfunction enrichWithThreadInformation(profile) {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\n\nfunction getTraceId(event) {\n  const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nfunction createProfilePayload(\n  profile_id,\n  start_timestamp,\n  processed_profile,\n  event,\n) {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : timestampInSeconds() * 1000;\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : timestampInSeconds() * 1000;\n\n  const profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/*\n  See packages/browser-utils/src/browser/router.ts\n*/\n/**\n *\n */\nfunction isAutomatedPageLoadSpan(span) {\n  return spanToJSON(span).op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nfunction convertJSSelfProfileToSampledFormat(input) {\n  let EMPTY_STACK_ID = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  const firstSample = input.samples[0];\n  if (!firstSample) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = firstSample.timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  input.samples.forEach((jsSample, i) => {\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      return;\n    }\n\n    let stackTop = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (frame && profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  });\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nfunction addProfilesToEnvelope(envelope, profiles) {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nfunction findProfiledTransactionsFromEnvelope(envelope) {\n  const events = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] ;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] );\n      }\n    }\n  });\n\n  return events;\n}\n\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nfunction applyDebugMetadata(resource_paths) {\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  return getDebugImagesForResources(stackParser, resource_paths);\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile) {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED = false;\nconst MAX_PROFILE_DURATION_MS = 30000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler) {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nfunction startJSSelfProfile() {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nfunction shouldProfileSpan(span) {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!span.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nfunction createProfilingEvent(\n  profile_id,\n  start_timestamp,\n  profile,\n  event,\n) {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependency. We need to resolve this in v8.\nconst PROFILE_MAP = new Map();\n/**\n *\n */\nfunction getActiveProfilesCount() {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nfunction takeProfileFromGlobalCache(profile_id) {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nfunction addProfileToGlobalCache(profile_id, profile) {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n\nexport { MAX_PROFILE_DURATION_MS, addProfileToGlobalCache, addProfilesToEnvelope, applyDebugMetadata, convertJSSelfProfileToSampledFormat, createProfilePayload, createProfilingEvent, enrichWithThreadInformation, findProfiledTransactionsFromEnvelope, getActiveProfilesCount, isAutomatedPageLoadSpan, isValidSampleRate, shouldProfileSpan, startJSSelfProfile, takeProfileFromGlobalCache };\n//# sourceMappingURL=utils.js.map\n","import { timestampInSeconds, logger, spanToJSON, uuid4, getCurrentScope } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport { isAutomatedPageLoadSpan, startJSSelfProfile, MAX_PROFILE_DURATION_MS, addProfileToGlobalCache } from './utils.js';\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nfunction startProfileForSpan(span) {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp;\n  if (isAutomatedPageLoadSpan(span)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, so we skip.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling span: ${spanToJSON(span).description}`);\n  }\n\n  // We create \"unique\" span names to avoid concurrent spans with same names\n  // from being ignored by the profiler. From here on, only this span name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  getCurrentScope().setContext('profile', {\n    profile_id: profileId,\n    start_timestamp: startTimestamp,\n  });\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler() {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call span.finish multiple times.\n    if (!span) {\n      return;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return;\n    }\n\n    return profiler\n      .stop()\n      .then((profile) => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of span: ${spanToJSON(span).description}`);\n        }\n\n        // In case of an overlapping span, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(span).description}`,\n              'this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', spanToJSON(span).description);\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the span\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = span.end.bind(span);\n\n  /**\n   * Wraps span `end()` with profiling related logic.\n   * startProfiling is called after the call to spanStart in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to spanEnd.\n   */\n  function profilingWrappedSpanEnd() {\n    if (!span) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return span;\n  }\n\n  span.end = profilingWrappedSpanEnd;\n}\n\nexport { startProfileForSpan };\n//# sourceMappingURL=startProfileForSpan.js.map\n","import { defineIntegration, getActiveSpan, getRootSpan, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { startProfileForSpan } from './startProfileForSpan.js';\nimport { isAutomatedPageLoadSpan, shouldProfileSpan, getActiveProfilesCount, findProfiledTransactionsFromEnvelope, takeProfileFromGlobalCache, createProfilingEvent, addProfilesToEnvelope } from './utils.js';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const activeSpan = getActiveSpan();\n      const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n      if (rootSpan && isAutomatedPageLoadSpan(rootSpan)) {\n        if (shouldProfileSpan(rootSpan)) {\n          startProfileForSpan(rootSpan);\n        }\n      }\n\n      client.on('spanStart', (span) => {\n        if (span === getRootSpan(span) && shouldProfileSpan(span)) {\n          startProfileForSpan(span);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope) => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the span context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for span: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp ,\n            profile,\n            profiledTransaction ,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope , profilesToAddToEnvelope);\n      });\n    },\n  };\n}) ;\n\nconst browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n\nexport { browserProfilingIntegration };\n//# sourceMappingURL=integration.js.map\n","import { getNativeImplementation } from '@sentry-internal/browser-utils';\nimport { defineIntegration, logger, serializeEnvelope } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst INTEGRATION_NAME = 'SpotlightBrowser';\n\nconst _spotlightIntegration = ((options = {}) => {\n  const sidecarUrl = options.sidecarUrl || 'http://localhost:8969/stream';\n\n  return {\n    name: INTEGRATION_NAME,\n    setup: () => {\n      DEBUG_BUILD && logger.log('Using Sidecar URL', sidecarUrl);\n    },\n    // We don't want to send interaction transactions/root spans created from\n    // clicks within Spotlight to Sentry. Neither do we want them to be sent to\n    // spotlight.\n    processEvent: event => (isSpotlightInteraction(event) ? null : event),\n    afterAllSetup: (client) => {\n      setupSidecarForwarding(client, sidecarUrl);\n    },\n  };\n}) ;\n\nfunction setupSidecarForwarding(client, sidecarUrl) {\n  const makeFetch = getNativeImplementation('fetch');\n  let failCount = 0;\n\n  client.on('beforeEnvelope', (envelope) => {\n    if (failCount > 3) {\n      logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests:', failCount);\n      return;\n    }\n\n    makeFetch(sidecarUrl, {\n      method: 'POST',\n      body: serializeEnvelope(envelope),\n      headers: {\n        'Content-Type': 'application/x-sentry-envelope',\n      },\n      mode: 'cors',\n    }).then(\n      res => {\n        if (res.status >= 200 && res.status < 400) {\n          // Reset failed requests counter on success\n          failCount = 0;\n        }\n      },\n      err => {\n        failCount++;\n        logger.error(\n          \"Sentry SDK can't connect to Sidecar is it running? See: https://spotlightjs.com/sidecar/npx/\",\n          err,\n        );\n      },\n    );\n  });\n}\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n */\nconst spotlightBrowserIntegration = defineIntegration(_spotlightIntegration);\n\n/**\n * Flags if the event is a transaction created from an interaction with the spotlight UI.\n */\nfunction isSpotlightInteraction(event) {\n  return Boolean(\n    event.type === 'transaction' &&\n      event.spans &&\n      event.contexts &&\n      event.contexts.trace &&\n      event.contexts.trace.op === 'ui.action.click' &&\n      event.spans.some(({ description }) => description && description.includes('#sentry-spotlight')),\n  );\n}\n\nexport { INTEGRATION_NAME, isSpotlightInteraction, spotlightBrowserIntegration };\n//# sourceMappingURL=spotlight.js.map\n","import { getCurrentScope, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\n/**\n * Ordered LRU cache for storing feature flags in the scope context. The name\n * of each flag in the buffer is unique, and the output of getAll() is ordered\n * from oldest to newest.\n */\n\n/**\n * Max size of the LRU flag buffer stored in Sentry scope and event contexts.\n */\nconst FLAG_BUFFER_SIZE = 100;\n\n/**\n * Copies feature flags that are in current scope context to the event context\n */\nfunction copyFlagsFromScopeToEvent(event) {\n  const scope = getCurrentScope();\n  const flagContext = scope.getScopeData().contexts.flags;\n  const flagBuffer = flagContext ? flagContext.values : [];\n\n  if (!flagBuffer.length) {\n    return event;\n  }\n\n  if (event.contexts === undefined) {\n    event.contexts = {};\n  }\n  event.contexts.flags = { values: [...flagBuffer] };\n  return event;\n}\n\n/**\n * Creates a feature flags values array in current context if it does not exist\n * and inserts the flag into a FeatureFlag array while maintaining ordered LRU\n * properties. Not thread-safe. After inserting:\n * - `flags` is sorted in order of recency, with the newest flag at the end.\n * - No other flags with the same name exist in `flags`.\n * - The length of `flags` does not exceed `maxSize`. The oldest flag is evicted\n *  as needed.\n *\n * @param name     Name of the feature flag to insert.\n * @param value    Value of the feature flag.\n * @param maxSize  Max number of flags the buffer should store. It's recommended\n *   to keep this consistent across insertions. Default is FLAG_BUFFER_SIZE\n */\nfunction insertFlagToScope(name, value, maxSize = FLAG_BUFFER_SIZE) {\n  const scopeContexts = getCurrentScope().getScopeData().contexts;\n  if (!scopeContexts.flags) {\n    scopeContexts.flags = { values: [] };\n  }\n  const flags = scopeContexts.flags.values ;\n  insertToFlagBuffer(flags, name, value, maxSize);\n}\n\n/**\n * Exported for tests. Currently only accepts boolean values (otherwise no-op).\n */\nfunction insertToFlagBuffer(flags, name, value, maxSize) {\n  if (typeof value !== 'boolean') {\n    return;\n  }\n\n  if (flags.length > maxSize) {\n    DEBUG_BUILD && logger.error(`[Feature Flags] insertToFlagBuffer called on a buffer larger than maxSize=${maxSize}`);\n    return;\n  }\n\n  // Check if the flag is already in the buffer - O(n)\n  const index = flags.findIndex(f => f.flag === name);\n\n  if (index !== -1) {\n    // The flag was found, remove it from its current position - O(n)\n    flags.splice(index, 1);\n  }\n\n  if (flags.length === maxSize) {\n    // If at capacity, pop the earliest flag - O(n)\n    flags.shift();\n  }\n\n  // Push the flag to the end - O(1)\n  flags.push({\n    flag: name,\n    result: value,\n  });\n}\n\nexport { FLAG_BUFFER_SIZE, copyFlagsFromScopeToEvent, insertFlagToScope, insertToFlagBuffer };\n//# sourceMappingURL=featureFlags.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../utils/featureFlags.js';\n\n/**\n * Sentry integration for buffering feature flags manually with an API, and\n * capturing them on error events. We recommend you do this on each flag\n * evaluation. Flags are buffered per Sentry scope and limited to 100 per event.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import * as Sentry from '@sentry/browser';\n * import { type FeatureFlagsIntegration } from '@sentry/browser';\n *\n * // Setup\n * Sentry.init(..., integrations: [Sentry.featureFlagsIntegration()])\n *\n * // Verify\n * const flagsIntegration = Sentry.getClient()?.getIntegrationByName<FeatureFlagsIntegration>('FeatureFlags');\n * if (flagsIntegration) {\n *   flagsIntegration.addFeatureFlag('my-flag', true);\n * } else {\n *   // check your setup\n * }\n * Sentry.captureException(Exception('broke')); // 'my-flag' should be captured to this Sentry event.\n * ```\n */\nconst featureFlagsIntegration = defineIntegration(() => {\n  return {\n    name: 'FeatureFlags',\n\n    processEvent(event, _hint, _client) {\n      return copyFlagsFromScopeToEvent(event);\n    },\n\n    addFeatureFlag(name, value) {\n      insertFlagToScope(name, value);\n    },\n  };\n}) ;\n\nexport { featureFlagsIntegration };\n//# sourceMappingURL=featureFlagsIntegration.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags.js';\n\n/**\n * Sentry integration for capturing feature flags from LaunchDarkly.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import * as Sentry from '@sentry/browser';\n * import {launchDarklyIntegration, buildLaunchDarklyFlagUsedInspector} from '@sentry/browser';\n * import * as LaunchDarkly from 'launchdarkly-js-client-sdk';\n *\n * Sentry.init(..., integrations: [launchDarklyIntegration()])\n * const ldClient = LaunchDarkly.initialize(..., {inspectors: [buildLaunchDarklyFlagUsedHandler()]});\n * ```\n */\nconst launchDarklyIntegration = defineIntegration(() => {\n  return {\n    name: 'LaunchDarkly',\n\n    processEvent(event, _hint, _client) {\n      return copyFlagsFromScopeToEvent(event);\n    },\n  };\n}) ;\n\n/**\n * LaunchDarkly hook that listens for flag evaluations and updates the `flags`\n * context in our Sentry scope. This needs to be registered as an\n * 'inspector' in LaunchDarkly initialize() options, separately from\n * `launchDarklyIntegration`. Both are needed to collect feature flags on error.\n */\nfunction buildLaunchDarklyFlagUsedHandler() {\n  return {\n    name: 'sentry-flag-auditor',\n    type: 'flag-used',\n\n    synchronous: true,\n\n    /**\n     * Handle a flag evaluation by storing its name and value on the current scope.\n     */\n    method: (flagKey, flagDetail, _context) => {\n      insertFlagToScope(flagKey, flagDetail.value);\n    },\n  };\n}\n\nexport { buildLaunchDarklyFlagUsedHandler, launchDarklyIntegration };\n//# sourceMappingURL=integration.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags.js';\n\nconst openFeatureIntegration = defineIntegration(() => {\n  return {\n    name: 'OpenFeature',\n\n    processEvent(event, _hint, _client) {\n      return copyFlagsFromScopeToEvent(event);\n    },\n  };\n}) ;\n\n/**\n * OpenFeature Hook class implementation.\n */\nclass OpenFeatureIntegrationHook  {\n  /**\n   * Successful evaluation result.\n   */\n   after(_hookContext, evaluationDetails) {\n    insertFlagToScope(evaluationDetails.flagKey, evaluationDetails.value);\n  }\n\n  /**\n   * On error evaluation result.\n   */\n   error(hookContext, _error, _hookHints) {\n    insertFlagToScope(hookContext.flagKey, hookContext.defaultValue);\n  }\n}\n\nexport { OpenFeatureIntegrationHook, openFeatureIntegration };\n//# sourceMappingURL=integration.js.map\n","import { defineIntegration, fill, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../../debug-build.js';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags.js';\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Unleash SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { UnleashClient } from 'unleash-proxy-client';\n * import * as Sentry from '@sentry/browser';\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.unleashIntegration({unleashClientClass: UnleashClient})],\n * });\n *\n * const unleash = new UnleashClient(...);\n * unleash.start();\n *\n * unleash.isEnabled('my-feature');\n * unleash.getVariant('other-feature');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nconst unleashIntegration = defineIntegration(\n  ({ unleashClientClass }) => {\n    return {\n      name: 'Unleash',\n\n      processEvent(event, _hint, _client) {\n        return copyFlagsFromScopeToEvent(event);\n      },\n\n      setupOnce() {\n        const unleashClientPrototype = unleashClientClass.prototype ;\n        fill(unleashClientPrototype, 'isEnabled', _wrappedIsEnabled);\n      },\n    };\n  },\n) ;\n\n/**\n * Wraps the UnleashClient.isEnabled method to capture feature flag evaluations. Its only side effect is writing to Sentry scope.\n *\n * This wrapper is safe for all isEnabled signatures. If the signature does not match (this: UnleashClient, toggleName: string, ...args: unknown[]) => boolean,\n * we log an error and return the original result.\n *\n * @param original - The original method.\n * @returns Wrapped method. Results should match the original.\n */\nfunction _wrappedIsEnabled(\n  original,\n) {\n  return function ( ...args) {\n    const toggleName = args[0];\n    const result = original.apply(this, args);\n\n    if (typeof toggleName === 'string' && typeof result === 'boolean') {\n      insertFlagToScope(toggleName, result);\n    } else if (DEBUG_BUILD) {\n      logger.error(\n        `[Feature Flags] UnleashClient.isEnabled does not match expected signature. arg0: ${toggleName} (${typeof toggleName}), result: ${result} (${typeof result})`,\n      );\n    }\n    return result;\n  };\n}\n\nexport { unleashIntegration };\n//# sourceMappingURL=integration.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags.js';\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Statsig js-client SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { StatsigClient } from '@statsig/js-client';\n * import * as Sentry from '@sentry/browser';\n *\n * const statsigClient = new StatsigClient();\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.statsigIntegration({featureFlagClient: statsigClient})],\n * });\n *\n * await statsigClient.initializeAsync();  // or statsigClient.initializeSync();\n *\n * const result = statsigClient.checkGate('my-feature-gate');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nconst statsigIntegration = defineIntegration(\n  ({ featureFlagClient: statsigClient }) => {\n    return {\n      name: 'Statsig',\n\n      processEvent(event, _hint, _client) {\n        return copyFlagsFromScopeToEvent(event);\n      },\n\n      setup() {\n        statsigClient.on('gate_evaluation', (event) => {\n          insertFlagToScope(event.gate.name, event.gate.value);\n        });\n      },\n    };\n  },\n) ;\n\nexport { statsigIntegration };\n//# sourceMappingURL=integration.js.map\n","export { SDK_VERSION, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, Scope, addBreadcrumb, addEventProcessor, addIntegration, addTracingExtensions, captureConsoleIntegration, captureEvent, captureException, captureFeedback, captureMessage, captureSession, close, continueTrace, createTransport, debugIntegration, dedupeIntegration, endSession, extraErrorDataIntegration, flush, functionToStringIntegration, getActiveSpan, getClient, getCurrentHub, getCurrentScope, getGlobalScope, getIsolationScope, getRootSpan, getSpanDescendants, getSpanStatusFromHttpCode, inboundFiltersIntegration, isInitialized, lastEventId, makeMultiplexedTransport, moduleMetadataIntegration, parameterize, registerSpanErrorInstrumentation, rewriteFramesIntegration, sessionTimingIntegration, setContext, setCurrentClient, setExtra, setExtras, setHttpStatus, setMeasurement, setTag, setTags, setUser, spanToBaggageHeader, spanToJSON, spanToTraceHeader, startInactiveSpan, startNewTrace, startSession, startSpan, startSpanManual, suppressTracing, thirdPartyErrorFilterIntegration, updateSpanName, withActiveSpan, withIsolationScope, withScope, zodErrorsIntegration } from '@sentry/core';\nexport { WINDOW } from './helpers.js';\nexport { BrowserClient } from './client.js';\nexport { makeFetchTransport } from './transports/fetch.js';\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser } from './stack-parsers.js';\nexport { eventFromException, eventFromMessage, exceptionFromError } from './eventbuilder.js';\nexport { createUserFeedbackEnvelope } from './userfeedback.js';\nexport { captureUserFeedback, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog } from './sdk.js';\nexport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nexport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nexport { httpContextIntegration } from './integrations/httpcontext.js';\nexport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nexport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nexport { lazyLoadIntegration } from './utils/lazyLoadIntegration.js';\nexport { reportingObserverIntegration } from './integrations/reportingobserver.js';\nexport { httpClientIntegration } from './integrations/httpclient.js';\nexport { contextLinesIntegration } from './integrations/contextlines.js';\nexport { getReplay, replayIntegration } from '@sentry-internal/replay';\nexport { replayCanvasIntegration } from '@sentry-internal/replay-canvas';\nexport { feedbackAsyncIntegration } from './feedbackAsync.js';\nexport { feedbackSyncIntegration as feedbackIntegration, feedbackSyncIntegration } from './feedbackSync.js';\nexport { getFeedback, sendFeedback } from '@sentry-internal/feedback';\nexport { metrics } from './metrics.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './tracing/request.js';\nexport { browserTracingIntegration, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan } from './tracing/browserTracingIntegration.js';\nexport { makeBrowserOfflineTransport } from './transports/offline.js';\nexport { browserProfilingIntegration } from './profiling/integration.js';\nexport { spotlightBrowserIntegration } from './integrations/spotlight.js';\nexport { browserSessionIntegration } from './integrations/browsersession.js';\nexport { featureFlagsIntegration } from './integrations/featureFlags/featureFlagsIntegration.js';\nexport { buildLaunchDarklyFlagUsedHandler, launchDarklyIntegration } from './integrations/featureFlags/launchdarkly/integration.js';\nexport { OpenFeatureIntegrationHook, openFeatureIntegration } from './integrations/featureFlags/openfeature/integration.js';\nexport { unleashIntegration } from './integrations/featureFlags/unleash/integration.js';\nexport { statsigIntegration } from './integrations/featureFlags/statsig/integration.js';\n//# sourceMappingURL=index.js.map\n","import { captureException } from '@sentry/browser';\nimport { isError } from '@sentry/core';\nimport { version } from 'react';\n\n/**\n * See if React major version is 17+ by parsing version string.\n */\nfunction isAtLeastReact17(reactVersion) {\n  const reactMajor = reactVersion.match(/^([^.]+)/);\n  return reactMajor !== null && parseInt(reactMajor[0]) >= 17;\n}\n\n/**\n * Recurse through `error.cause` chain to set cause on an error.\n */\nfunction setCause(error, cause) {\n  const seenErrors = new WeakSet();\n\n  function recurse(error, cause) {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.add(error);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * Captures an error that was thrown by a React ErrorBoundary or React root.\n *\n * @param error The error to capture.\n * @param errorInfo The errorInfo provided by React.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureReactException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error,\n  { componentStack },\n  hint,\n) {\n  // If on React version >= 17, create stack trace from componentStack param and links\n  // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n  // Linking errors requires the `LinkedErrors` integration be enabled.\n  // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n  //\n  // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n  // with non-error objects. This is why we need to check if the error is an error-like object.\n  // See: https://github.com/getsentry/sentry-javascript/issues/6167\n  if (isAtLeastReact17(version) && isError(error) && componentStack) {\n    const errorBoundaryError = new Error(error.message);\n    errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n    errorBoundaryError.stack = componentStack;\n\n    // Using the `LinkedErrors` integration to link the errors together.\n    setCause(error, errorBoundaryError);\n  }\n\n  return captureException(error, {\n    ...hint,\n    captureContext: {\n      contexts: { react: { componentStack } },\n    },\n  });\n}\n\n/**\n * Creates an error handler that can be used with the `onCaughtError`, `onUncaughtError`,\n * and `onRecoverableError` options in `createRoot` and `hydrateRoot` React DOM methods.\n *\n * @param callback An optional callback that will be called after the error is captured.\n * Use this to add custom handling for errors.\n *\n * @example\n *\n * ```JavaScript\n * const root = createRoot(container, {\n *  onCaughtError: Sentry.reactErrorHandler(),\n *  onUncaughtError: Sentry.reactErrorHandler((error, errorInfo) => {\n *    console.warn('Caught error', error, errorInfo.componentStack);\n *  });\n * });\n * ```\n */\nfunction reactErrorHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (error, errorInfo) => {\n    const eventId = captureReactException(error, errorInfo);\n    if (callback) {\n      callback(error, errorInfo, eventId);\n    }\n  };\n}\n\nexport { captureReactException, isAtLeastReact17, reactErrorHandler, setCause };\n//# sourceMappingURL=error.js.map\n","const REACT_RENDER_OP = 'ui.react.render';\n\nconst REACT_UPDATE_OP = 'ui.react.update';\n\nconst REACT_MOUNT_OP = 'ui.react.mount';\n\nexport { REACT_MOUNT_OP, REACT_RENDER_OP, REACT_UPDATE_OP };\n//# sourceMappingURL=constants.js.map\n","import { startInactiveSpan } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, timestampInSeconds, withActiveSpan, spanToJSON } from '@sentry/core';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { REACT_MOUNT_OP, REACT_UPDATE_OP, REACT_RENDER_OP } from './constants.js';\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nclass Profiler extends React.Component {\n  /**\n   * The span of the mount activity\n   * Made protected for the React Native SDK to access\n   */\n\n  /**\n   * The span that represents the duration of time between shouldComponentUpdate and componentDidUpdate\n   */\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n   static __initStatic() {this.defaultProps = {\n    disabled: false,\n    includeRender: true,\n    includeUpdates: true,\n  };}\n\n   constructor(props) {\n    super(props);\n    const { name, disabled = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this._mountSpan = startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  }\n\n  // If a component mounted, we can finish the mount activity.\n   componentDidMount() {\n    if (this._mountSpan) {\n      this._mountSpan.end();\n    }\n  }\n\n   shouldComponentUpdate({ updateProps, includeUpdates = true }) {\n    // Only generate an update span if includeUpdates is true, if there is a valid mountSpan,\n    // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n    // We are just trying to give baseline clues for further investigation.\n    if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n      // See what props have changed between the previous props, and the current props. This is\n      // set as data on the span. We just store the prop keys as the values could be potentially very large.\n      const changedProps = Object.keys(updateProps).filter(k => updateProps[k] !== this.props.updateProps[k]);\n      if (changedProps.length > 0) {\n        const now = timestampInSeconds();\n        this._updateSpan = withActiveSpan(this._mountSpan, () => {\n          return startInactiveSpan({\n            name: `<${this.props.name}>`,\n            onlyIfParent: true,\n            op: REACT_UPDATE_OP,\n            startTime: now,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n              'ui.component_name': this.props.name,\n              'ui.react.changed_props': changedProps,\n            },\n          });\n        });\n      }\n    }\n\n    return true;\n  }\n\n   componentDidUpdate() {\n    if (this._updateSpan) {\n      this._updateSpan.end();\n      this._updateSpan = undefined;\n    }\n  }\n\n  // If a component is unmounted, we can say it is no longer on the screen.\n  // This means we can finish the span representing the component render.\n   componentWillUnmount() {\n    const endTimestamp = timestampInSeconds();\n    const { name, includeRender = true } = this.props;\n\n    if (this._mountSpan && includeRender) {\n      const startTime = spanToJSON(this._mountSpan).timestamp;\n      withActiveSpan(this._mountSpan, () => {\n        const renderSpan = startInactiveSpan({\n          onlyIfParent: true,\n          name: `<${name}>`,\n          op: REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      });\n    }\n  }\n\n   render() {\n    return this.props.children;\n  }\n} Profiler.__initStatic();\n\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withProfiler(\n  WrappedComponent,\n  // We do not want to have `updateProps` given in options, it is instead filled through the HOC.\n  options,\n) {\n  const componentDisplayName =\n    (options && options.name) || WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    React.createElement(Profiler, { ...options, name: componentDisplayName, updateProps: props,}\n      , React.createElement(WrappedComponent, { ...props,} )\n    )\n  );\n\n  Wrapped.displayName = `profiler(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(\n  name,\n  options = {\n    disabled: false,\n    hasRenderSpan: true,\n  },\n) {\n  const [mountSpan] = React.useState(() => {\n    if (options && options.disabled) {\n      return undefined;\n    }\n\n    return startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  });\n\n  React.useEffect(() => {\n    if (mountSpan) {\n      mountSpan.end();\n    }\n\n    return () => {\n      if (mountSpan && options.hasRenderSpan) {\n        const startTime = spanToJSON(mountSpan).timestamp;\n        const endTimestamp = timestampInSeconds();\n\n        const renderSpan = startInactiveSpan({\n          name: `<${name}>`,\n          onlyIfParent: true,\n          op: REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      }\n    };\n    // We only want this to run once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport { Profiler, UNKNOWN_COMPONENT, useProfiler, withProfiler };\n//# sourceMappingURL=profiler.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { getClient, showReportDialog, withScope } from '@sentry/browser';\nimport { logger } from '@sentry/core';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { captureReactException } from './error.js';\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component {\n\n   constructor(props) {\n    super(props);ErrorBoundary.prototype.__init.call(this);\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = getClient();\n    if (client && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      this._cleanupHook = client.on('afterSendEvent', event => {\n        if (!event.type && this._lastEventId && event.event_id === this._lastEventId) {\n          showReportDialog({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n   componentDidCatch(error, errorInfo) {\n    const { componentStack } = errorInfo;\n    // TODO(v9): Remove this check and type `componentStack` to be React.ErrorInfo['componentStack'].\n    const passedInComponentStack = componentStack == null ? undefined : componentStack;\n\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    withScope(scope => {\n      if (beforeCapture) {\n        beforeCapture(scope, error, passedInComponentStack);\n      }\n\n      const handled = this.props.handled != null ? this.props.handled : !!this.props.fallback;\n      const eventId = captureReactException(error, errorInfo, { mechanism: { handled } });\n\n      if (onError) {\n        onError(error, passedInComponentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          showReportDialog({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n   componentDidMount() {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n   componentWillUnmount() {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n\n    if (this._cleanupHook) {\n      this._cleanupHook();\n      this._cleanupHook = undefined;\n    }\n  }\n\n   __init() {this.resetErrorBoundary = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };}\n\n   render() {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    if (state.error) {\n      let element = undefined;\n      if (typeof fallback === 'function') {\n        element = React.createElement(fallback, {\n          error: state.error,\n          componentStack: state.componentStack ,\n          resetError: this.resetErrorBoundary,\n          eventId: state.eventId ,\n        });\n      } else {\n        element = fallback;\n      }\n\n      if (React.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        DEBUG_BUILD && logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children )();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n  errorBoundaryOptions,\n) {\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    React.createElement(ErrorBoundary, { ...errorBoundaryOptions,}\n      , React.createElement(WrappedComponent, { ...props,} )\n    )\n  );\n\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, UNKNOWN_COMPONENT, withErrorBoundary };\n//# sourceMappingURL=errorboundary.js.map\n","import { getGlobalScope, getCurrentScope, addBreadcrumb, getClient, addNonEnumerableProperty } from '@sentry/core';\n\nconst ACTION_BREADCRUMB_CATEGORY = 'redux.action';\nconst ACTION_BREADCRUMB_TYPE = 'info';\n\nconst defaultOptions = {\n  attachReduxState: true,\n  actionTransformer: action => action,\n  stateTransformer: state => state || null,\n};\n\n/**\n * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n *\n * @param enhancerOptions Options to pass to the enhancer\n */\nfunction createReduxEnhancer(enhancerOptions) {\n  // Note: We return an any type as to not have type conflicts.\n  const options = {\n    ...defaultOptions,\n    ...enhancerOptions,\n  };\n\n  return (next) =>\n    (reducer, initialState) => {\n      options.attachReduxState &&\n        getGlobalScope().addEventProcessor((event, hint) => {\n          try {\n            // @ts-expect-error try catch to reduce bundle size\n            if (event.type === undefined && event.contexts.state.state.type === 'redux') {\n              hint.attachments = [\n                ...(hint.attachments || []),\n                // @ts-expect-error try catch to reduce bundle size\n                { filename: 'redux_state.json', data: JSON.stringify(event.contexts.state.state.value) },\n              ];\n            }\n          } catch (_) {\n            // empty\n          }\n          return event;\n        });\n\n      const sentryReducer = (state, action) => {\n        const newState = reducer(state, action);\n\n        const scope = getCurrentScope();\n\n        /* Action breadcrumbs */\n        const transformedAction = options.actionTransformer(action);\n        if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n          addBreadcrumb({\n            category: ACTION_BREADCRUMB_CATEGORY,\n            data: transformedAction,\n            type: ACTION_BREADCRUMB_TYPE,\n          });\n        }\n\n        /* Set latest state to scope */\n        const transformedState = options.stateTransformer(newState);\n        if (typeof transformedState !== 'undefined' && transformedState !== null) {\n          const client = getClient();\n          const options = client && client.getOptions();\n          const normalizationDepth = (options && options.normalizeDepth) || 3; // default state normalization depth to 3\n\n          // Set the normalization depth of the redux state to the configured `normalizeDepth` option or a sane number as a fallback\n          const newStateContext = { state: { type: 'redux', value: transformedState } };\n          addNonEnumerableProperty(\n            newStateContext,\n            '__sentry_override_normalization_depth__',\n            3 + // 3 layers for `state.value.transformedState`\n              normalizationDepth, // rest for the actual state\n          );\n\n          scope.setContext('state', newStateContext);\n        } else {\n          scope.setContext('state', null);\n        }\n\n        /* Allow user to configure scope with latest state */\n        const { configureScopeWithState } = options;\n        if (typeof configureScopeWithState === 'function') {\n          configureScopeWithState(scope, newState);\n        }\n\n        return newState;\n      };\n\n      return next(sentryReducer, initialState);\n    };\n}\n\nexport { createReduxEnhancer };\n//# sourceMappingURL=redux.js.map\n","import { browserTracingIntegration, WINDOW, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV3BrowserTracingIntegration(\n  options,\n) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, match, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      if (instrumentPageLoad && WINDOW && WINDOW.location) {\n        normalizeTransactionName(\n          routes,\n          WINDOW.location ,\n          match,\n          (localName, source = 'url') => {\n            startBrowserTracingPageLoadSpan(client, {\n              name: localName,\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n                [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v3',\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n              },\n            });\n          },\n        );\n      }\n\n      if (instrumentNavigation && history.listen) {\n        history.listen(location => {\n          if (location.action === 'PUSH' || location.action === 'POP') {\n            normalizeTransactionName(\n              routes,\n              location,\n              match,\n              (localName, source = 'url') => {\n                startBrowserTracingNavigationSpan(client, {\n                  name: localName,\n                  attributes: {\n                    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n                    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v3',\n                    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n                  },\n                });\n              },\n            );\n          }\n        });\n      }\n    },\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes,\n  location,\n  match,\n  callback,\n) {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes) {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths\n    .slice(index)\n    .filter(({ path }) => !!path)\n    .map(({ path }) => path)\n    .join('');\n}\n\nexport { reactRouterV3BrowserTracingIntegration };\n//# sourceMappingURL=reactrouterv3.js.map\n","import { browserTracingIntegration, WINDOW, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\n\n/**\n * A custom browser tracing integration for TanStack Router.\n *\n * The minimum compatible version of `@tanstack/router` is `1.34.5`.\n *\n * @param router A TanStack Router `Router` instance that should be used for routing instrumentation.\n * @param options Sentry browser tracing configuration.\n */\nfunction tanstackRouterBrowserTracingIntegration(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  router, // This is `any` because we don't want any type mismatches if TanStack Router changes their types\n  options = {},\n) {\n  const castRouterInstance = router;\n\n  const browserTracingIntegrationInstance = browserTracingIntegration({\n    ...options,\n    instrumentNavigation: false,\n    instrumentPageLoad: false,\n  });\n\n  const { instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...browserTracingIntegrationInstance,\n    afterAllSetup(client) {\n      browserTracingIntegrationInstance.afterAllSetup(client);\n\n      const initialWindowLocation = WINDOW.location;\n      if (instrumentPageLoad && initialWindowLocation) {\n        const matchedRoutes = castRouterInstance.matchRoutes(\n          initialWindowLocation.pathname,\n          castRouterInstance.options.parseSearch(initialWindowLocation.search),\n          { preload: false, throwOnError: false },\n        );\n\n        const lastMatch = matchedRoutes[matchedRoutes.length - 1];\n\n        startBrowserTracingPageLoadSpan(client, {\n          name: lastMatch ? lastMatch.routeId : initialWindowLocation.pathname,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.tanstack_router',\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: lastMatch ? 'route' : 'url',\n            ...routeMatchToParamSpanAttributes(lastMatch),\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        // The onBeforeNavigate hook is called at the very beginning of a navigation and is only called once per navigation, even when the user is redirected\n        castRouterInstance.subscribe('onBeforeNavigate', onBeforeNavigateArgs => {\n          const fromLocationState = onBeforeNavigateArgs.fromLocation && onBeforeNavigateArgs.fromLocation.state;\n          // onBeforeNavigate is called during pageloads. We can avoid creating navigation spans by comparing the states of the to and from arguments.\n          if (onBeforeNavigateArgs.toLocation.state === fromLocationState) {\n            return;\n          }\n\n          const onResolvedMatchedRoutes = castRouterInstance.matchRoutes(\n            onBeforeNavigateArgs.toLocation.pathname,\n            onBeforeNavigateArgs.toLocation.search,\n            { preload: false, throwOnError: false },\n          );\n\n          const onBeforeNavigateLastMatch = onResolvedMatchedRoutes[onResolvedMatchedRoutes.length - 1];\n\n          const navigationLocation = WINDOW.location;\n          const navigationSpan = startBrowserTracingNavigationSpan(client, {\n            name: onBeforeNavigateLastMatch ? onBeforeNavigateLastMatch.routeId : navigationLocation.pathname,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.tanstack_router',\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: onBeforeNavigateLastMatch ? 'route' : 'url',\n            },\n          });\n\n          // In case the user is redirected during navigation we want to update the span with the right value.\n          const unsubscribeOnResolved = castRouterInstance.subscribe('onResolved', onResolvedArgs => {\n            unsubscribeOnResolved();\n            if (navigationSpan) {\n              const onResolvedMatchedRoutes = castRouterInstance.matchRoutes(\n                onResolvedArgs.toLocation.pathname,\n                onResolvedArgs.toLocation.search,\n                { preload: false, throwOnError: false },\n              );\n\n              const onResolvedLastMatch = onResolvedMatchedRoutes[onResolvedMatchedRoutes.length - 1];\n\n              if (onResolvedLastMatch) {\n                navigationSpan.updateName(onResolvedLastMatch.routeId);\n                navigationSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n                navigationSpan.setAttributes(routeMatchToParamSpanAttributes(onResolvedLastMatch));\n              }\n            }\n          });\n        });\n      }\n    },\n  };\n}\n\nfunction routeMatchToParamSpanAttributes(match) {\n  if (!match) {\n    return {};\n  }\n\n  const paramAttributes = {};\n  Object.entries(match.params).forEach(([key, value]) => {\n    paramAttributes[`url.path.params.${key}`] = value;\n  });\n\n  return paramAttributes;\n}\n\nexport { tanstackRouterBrowserTracingIntegration };\n//# sourceMappingURL=tanstackrouter.js.map\n","import { browserTracingIntegration, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan, WINDOW } from '@sentry/browser';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, getCurrentScope, getActiveSpan, getRootSpan, spanToJSON } from '@sentry/core';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\n// We need to disable eslint no-explicit-any because any is required for the\n// react-router typings.\n\n/**\n * A browser tracing integration that uses React Router v4 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV4BrowserTracingIntegration(\n  options,\n) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      instrumentReactRouter(\n        client,\n        instrumentPageLoad,\n        instrumentNavigation,\n        history,\n        'reactrouter_v4',\n        routes,\n        matchPath,\n      );\n    },\n  };\n}\n\n/**\n * A browser tracing integration that uses React Router v5 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV5BrowserTracingIntegration(\n  options,\n) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      instrumentReactRouter(\n        client,\n        instrumentPageLoad,\n        instrumentNavigation,\n        history,\n        'reactrouter_v5',\n        routes,\n        matchPath,\n      );\n    },\n  };\n}\n\nfunction instrumentReactRouter(\n  client,\n  instrumentPageLoad,\n  instrumentNavigation,\n  history,\n  instrumentationName,\n  allRoutes = [],\n  matchPath,\n) {\n  function getInitPathName() {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (WINDOW && WINDOW.location) {\n      return WINDOW.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname) {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    for (const branch of branches) {\n      if (branch.match.isExact) {\n        return [branch.match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  if (instrumentPageLoad) {\n    const initPathName = getInitPathName();\n    if (initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      startBrowserTracingPageLoadSpan(client, {\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.${instrumentationName}`,\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        },\n      });\n    }\n  }\n\n  if (instrumentNavigation && history.listen) {\n    history.listen((location, action) => {\n      if (action && (action === 'PUSH' || action === 'POP')) {\n        const [name, source] = normalizeTransactionName(location.pathname);\n        startBrowserTracingNavigationSpan(client, {\n          name,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.${instrumentationName}`,\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n          },\n        });\n      }\n    });\n  }\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes,\n  pathname,\n  matchPath,\n  branch = [],\n) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          branch[branch.length - 1].match // use parent match\n        : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname) {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nfunction withSentryRouting(Route) {\n  const componentDisplayName = Route.displayName || Route.name;\n\n  const WrappedRoute = (props) => {\n    if (props && props.computedMatch && props.computedMatch.isExact) {\n      const route = props.computedMatch.path;\n      const activeRootSpan = getActiveRootSpan();\n\n      getCurrentScope().setTransactionName(route);\n\n      if (activeRootSpan) {\n        activeRootSpan.updateName(route);\n        activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n      }\n    }\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return React.createElement(Route, { ...props,} );\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\nfunction getActiveRootSpan() {\n  const span = getActiveSpan();\n  const rootSpan = span && getRootSpan(span);\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\nexport { reactRouterV4BrowserTracingIntegration, reactRouterV5BrowserTracingIntegration, withSentryRouting };\n//# sourceMappingURL=reactrouter.js.map\n","import { browserTracingIntegration, WINDOW, startBrowserTracingPageLoadSpan, startBrowserTracingNavigationSpan } from '@sentry/browser';\nimport { logger, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getClient, getNumberOfUrlSegments, getCurrentScope, getActiveSpan, getRootSpan, spanToJSON } from '@sentry/core';\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { DEBUG_BUILD } from './debug-build.js';\n\n/* eslint-disable max-lines */\n// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\n\nlet _useEffect;\nlet _useLocation;\nlet _useNavigationType;\nlet _createRoutesFromChildren;\nlet _matchRoutes;\nlet _stripBasename = false;\n\nconst CLIENTS_WITH_INSTRUMENT_NAVIGATION = new WeakSet();\n\n// Keeping as a global variable for cross-usage in multiple functions\nconst allRoutes = new Set();\n\n/**\n * Creates a wrapCreateBrowserRouter function that can be used with all React Router v6 compatible versions.\n */\nfunction createV6CompatibleWrapCreateBrowserRouter\n\n(\n  createRouterFunction,\n  version,\n) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  return function (routes, opts) {\n    routes.forEach(route => {\n      allRoutes.add(route);\n    });\n\n    const router = createRouterFunction(routes, opts);\n    const basename = opts && opts.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(\n        activeRootSpan,\n        router.state.location,\n        routes,\n        undefined,\n        basename,\n        Array.from(allRoutes),\n      );\n    }\n\n    router.subscribe((state) => {\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        // Wait for the next render if loading an unsettled route\n        if (state.navigation.state !== 'idle') {\n          requestAnimationFrame(() => {\n            handleNavigation({\n              location: state.location,\n              routes,\n              navigationType: state.historyAction,\n              version,\n              basename,\n              allRoutes: Array.from(allRoutes),\n            });\n          });\n        } else {\n          handleNavigation({\n            location: state.location,\n            routes,\n            navigationType: state.historyAction,\n            version,\n            basename,\n            allRoutes: Array.from(allRoutes),\n          });\n        }\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a wrapCreateMemoryRouter function that can be used with all React Router v6 compatible versions.\n */\nfunction createV6CompatibleWrapCreateMemoryRouter\n\n(\n  createRouterFunction,\n  version,\n) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createMemoryRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  return function (\n    routes,\n    opts\n\n,\n  ) {\n    routes.forEach(route => {\n      allRoutes.add(route);\n    });\n\n    const router = createRouterFunction(routes, opts);\n    const basename = opts ? opts.basename : undefined;\n\n    const activeRootSpan = getActiveRootSpan();\n    let initialEntry = undefined;\n\n    const initialEntries = opts ? opts.initialEntries : undefined;\n    const initialIndex = opts ? opts.initialIndex : undefined;\n\n    const hasOnlyOneInitialEntry = initialEntries && initialEntries.length === 1;\n    const hasIndexedEntry = initialIndex !== undefined && initialEntries && initialEntries[initialIndex];\n\n    initialEntry = hasOnlyOneInitialEntry\n      ? initialEntries[0]\n      : hasIndexedEntry\n        ? initialEntries[initialIndex]\n        : undefined;\n\n    const location = initialEntry\n      ? typeof initialEntry === 'string'\n        ? { pathname: initialEntry }\n        : initialEntry\n      : router.state.location;\n\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, location, routes, undefined, basename, Array.from(allRoutes));\n    }\n\n    router.subscribe((state) => {\n      const location = state.location;\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        handleNavigation({\n          location,\n          routes,\n          navigationType: state.historyAction,\n          version,\n          basename,\n          allRoutes: Array.from(allRoutes),\n        });\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a browser tracing integration that can be used with all React Router v6 compatible versions.\n */\nfunction createReactRouterV6CompatibleTracingIntegration(\n  options,\n  version,\n) {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    setup() {\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n    },\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.reactrouter_v${version}`,\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        CLIENTS_WITH_INSTRUMENT_NAVIGATION.add(client);\n      }\n    },\n  };\n}\n\nfunction createV6CompatibleWrapUseRoutes(origUseRoutes, version) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  const SentryRoutes\n\n = (props) => {\n    const isMountRenderPass = React.useRef(true);\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || (locationArg && locationArg.pathname)\n        ? (locationArg )\n        : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass.current) {\n        routes.forEach(route => {\n          const extractedChildRoutes = getChildRoutesRecursively(route);\n\n          extractedChildRoutes.forEach(r => {\n            allRoutes.add(r);\n          });\n        });\n\n        updatePageloadTransaction(\n          getActiveRootSpan(),\n          normalizedLocation,\n          routes,\n          undefined,\n          undefined,\n          Array.from(allRoutes),\n        );\n        isMountRenderPass.current = false;\n      } else {\n        handleNavigation({\n          location: normalizedLocation,\n          routes,\n          navigationType,\n          version,\n          allRoutes: Array.from(allRoutes),\n        });\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes, locationArg) => {\n    return React.createElement(SentryRoutes, { routes: routes, locationArg: locationArg,} );\n  };\n}\n\nfunction handleNavigation(opts\n\n) {\n  const { location, routes, navigationType, version, matches, basename, allRoutes } = opts;\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  const client = getClient();\n  if (!client || !CLIENTS_WITH_INSTRUMENT_NAVIGATION.has(client)) {\n    return;\n  }\n\n  if ((navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    let name,\n      source = 'url';\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    startBrowserTracingNavigationSpan(client, {\n      name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.reactrouter_v${version}`,\n      },\n    });\n  }\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname, basename) {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction sendIndexPath(pathBuilder, pathname, basename) {\n  const reconstructedPath = pathBuilder || _stripBasename ? stripBasenameFromPathname(pathname, basename) : pathname;\n\n  const formattedPath =\n    // If the path ends with a slash, remove it\n    reconstructedPath[reconstructedPath.length - 1] === '/'\n      ? reconstructedPath.slice(0, -1)\n      : // If the path ends with a wildcard, remove it\n        reconstructedPath.slice(-2) === '/*'\n        ? reconstructedPath.slice(0, -1)\n        : reconstructedPath;\n\n  return [formattedPath, 'route'];\n}\n\nfunction pathEndsWithWildcard(path) {\n  return path.endsWith('*');\n}\n\nfunction pathIsWildcardAndHasChildren(path, branch) {\n  return (pathEndsWithWildcard(path) && branch.route.children && branch.route.children.length > 0) || false;\n}\n\nfunction routeIsDescendant(route) {\n  return !!(!route.children && route.element && route.path && route.path.endsWith('/*'));\n}\n\nfunction locationIsInsideDescendantRoute(location, routes) {\n  const matchedRoutes = _matchRoutes(routes, location) ;\n\n  if (matchedRoutes) {\n    for (const match of matchedRoutes) {\n      if (routeIsDescendant(match.route) && pickSplat(match)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction getChildRoutesRecursively(route, allRoutes = new Set()) {\n  if (!allRoutes.has(route)) {\n    allRoutes.add(route);\n\n    if (route.children && !route.index) {\n      route.children.forEach(child => {\n        const childRoutes = getChildRoutesRecursively(child, allRoutes);\n\n        childRoutes.forEach(r => allRoutes.add(r));\n      });\n    }\n  }\n\n  return allRoutes;\n}\n\nfunction pickPath(match) {\n  return trimWildcard(match.route.path || '');\n}\n\nfunction pickSplat(match) {\n  return match.params['*'] || '';\n}\n\nfunction trimWildcard(path) {\n  return path[path.length - 1] === '*' ? path.slice(0, -1) : path;\n}\n\nfunction trimSlash(path) {\n  return path[path.length - 1] === '/' ? path.slice(0, -1) : path;\n}\n\nfunction prefixWithSlash(path) {\n  return path[0] === '/' ? path : `/${path}`;\n}\n\nfunction rebuildRoutePathFromAllRoutes(allRoutes, location) {\n  const matchedRoutes = _matchRoutes(allRoutes, location) ;\n\n  if (!matchedRoutes || matchedRoutes.length === 0) {\n    return '';\n  }\n\n  for (const match of matchedRoutes) {\n    if (match.route.path && match.route.path !== '*') {\n      const path = pickPath(match);\n      const strippedPath = stripBasenameFromPathname(location.pathname, prefixWithSlash(match.pathnameBase));\n\n      return trimSlash(\n        trimSlash(path || '') +\n          prefixWithSlash(\n            rebuildRoutePathFromAllRoutes(\n              allRoutes.filter(route => route !== match.route),\n              {\n                pathname: strippedPath,\n              },\n            ),\n          ),\n      );\n    }\n  }\n\n  return '';\n}\n\nfunction getNormalizedName(\n  routes,\n  location,\n  branches,\n  basename = '',\n) {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    for (const branch of branches) {\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return sendIndexPath(pathBuilder, branch.pathname, basename);\n        }\n        const path = route.path;\n\n        // If path is not a wildcard and has no child routes, append the path\n        if (path && !pathIsWildcardAndHasChildren(path, branch)) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder = trimSlash(pathBuilder) + prefixWithSlash(newPath);\n\n          // If the path matches the current location, return the path\n          if (trimSlash(location.pathname) === trimSlash(basename + branch.pathname)) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / separators\n              // TODO(v9): Put the implementation of `getNumberOfUrlSegments` in this file\n              // eslint-disable-next-line deprecation/deprecation\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              !pathEndsWithWildcard(pathBuilder)\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n\n            // if the last character of the pathbuilder is a wildcard and there are children, remove the wildcard\n            if (pathIsWildcardAndHasChildren(pathBuilder, branch)) {\n              pathBuilder = pathBuilder.slice(0, -1);\n            }\n\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  const fallbackTransactionName = _stripBasename\n    ? stripBasenameFromPathname(location.pathname, basename)\n    : location.pathname || '/';\n\n  return [fallbackTransactionName, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan,\n  location,\n  routes,\n  matches,\n  basename,\n  allRoutes,\n) {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(allRoutes || routes, location, basename) );\n\n  if (branches) {\n    let name,\n      source = 'url';\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    getCurrentScope().setTransactionName(name || '/');\n\n    if (activeRootSpan) {\n      activeRootSpan.updateName(name);\n      activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction createV6CompatibleWithSentryReactRouterRouting(\n  Routes,\n  version,\n) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}.`);\n\n    return Routes;\n  }\n\n  const SentryRoutes = (props) => {\n    const isMountRenderPass = React.useRef(true);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) ;\n\n        if (isMountRenderPass.current) {\n          routes.forEach(route => {\n            const extractedChildRoutes = getChildRoutesRecursively(route);\n\n            extractedChildRoutes.forEach(r => {\n              allRoutes.add(r);\n            });\n          });\n\n          updatePageloadTransaction(getActiveRootSpan(), location, routes, undefined, undefined, Array.from(allRoutes));\n          isMountRenderPass.current = false;\n        } else {\n          handleNavigation({\n            location,\n            routes,\n            navigationType,\n            version,\n            allRoutes: Array.from(allRoutes),\n          });\n        }\n      },\n      // `props.children` is purposely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return React.createElement(Routes, { ...props,} );\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nfunction getActiveRootSpan() {\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\nexport { createReactRouterV6CompatibleTracingIntegration, createV6CompatibleWithSentryReactRouterRouting, createV6CompatibleWrapCreateBrowserRouter, createV6CompatibleWrapCreateMemoryRouter, createV6CompatibleWrapUseRoutes, handleNavigation };\n//# sourceMappingURL=reactrouterv6-compat-utils.js.map\n","import { createReactRouterV6CompatibleTracingIntegration, createV6CompatibleWrapUseRoutes, createV6CompatibleWrapCreateBrowserRouter, createV6CompatibleWrapCreateMemoryRouter, createV6CompatibleWithSentryReactRouterRouting } from './reactrouterv6-compat-utils.js';\n\n/**\n * A browser tracing integration that uses React Router v6 to instrument navigations.\n * Expects `useEffect`, `useLocation`, `useNavigationType`, `createRoutesFromChildren` and `matchRoutes` to be passed as options.\n */\nfunction reactRouterV6BrowserTracingIntegration(\n  options,\n) {\n  return createReactRouterV6CompatibleTracingIntegration(options, '6');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 useRoutes hook.\n * This is used to automatically capture route changes as transactions when using the useRoutes hook.\n */\nfunction wrapUseRoutesV6(origUseRoutes) {\n  return createV6CompatibleWrapUseRoutes(origUseRoutes, '6');\n}\n\n/**\n * Alias for backwards compatibility\n * @deprecated Use `wrapUseRoutesV6` or `wrapUseRoutesV7` instead.\n */\nconst wrapUseRoutes = wrapUseRoutesV6;\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 createBrowserRouter function.\n * This is used to automatically capture route changes as transactions when using the createBrowserRouter API.\n */\nfunction wrapCreateBrowserRouterV6\n\n(createRouterFunction) {\n  return createV6CompatibleWrapCreateBrowserRouter(createRouterFunction, '6');\n}\n\n/**\n * Alias for backwards compatibility\n * @deprecated Use `wrapCreateBrowserRouterV6` or `wrapCreateBrowserRouterV7` instead.\n */\nconst wrapCreateBrowserRouter = wrapCreateBrowserRouterV6;\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 createMemoryRouter function.\n * This is used to automatically capture route changes as transactions when using the createMemoryRouter API.\n * The difference between createBrowserRouter and createMemoryRouter is that with createMemoryRouter,\n * optional `initialEntries` are also taken into account.\n */\nfunction wrapCreateMemoryRouterV6\n\n(createMemoryRouterFunction) {\n  return createV6CompatibleWrapCreateMemoryRouter(createMemoryRouterFunction, '6');\n}\n\n/**\n * A higher-order component that adds Sentry routing instrumentation to a React Router v6 Route component.\n * This is used to automatically capture route changes as transactions.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withSentryReactRouterV6Routing(routes) {\n  return createV6CompatibleWithSentryReactRouterRouting(routes, '6');\n}\n\nexport { reactRouterV6BrowserTracingIntegration, withSentryReactRouterV6Routing, wrapCreateBrowserRouter, wrapCreateBrowserRouterV6, wrapCreateMemoryRouterV6, wrapUseRoutes, wrapUseRoutesV6 };\n//# sourceMappingURL=reactrouterv6.js.map\n","import { createReactRouterV6CompatibleTracingIntegration, createV6CompatibleWithSentryReactRouterRouting, createV6CompatibleWrapCreateBrowserRouter, createV6CompatibleWrapCreateMemoryRouter, createV6CompatibleWrapUseRoutes } from './reactrouterv6-compat-utils.js';\n\n/**\n * A browser tracing integration that uses React Router v7 to instrument navigations.\n * Expects `useEffect`, `useLocation`, `useNavigationType`, `createRoutesFromChildren` and `matchRoutes` to be passed as options.\n */\nfunction reactRouterV7BrowserTracingIntegration(\n  options,\n) {\n  return createReactRouterV6CompatibleTracingIntegration(options, '7');\n}\n\n/**\n * A higher-order component that adds Sentry routing instrumentation to a React Router v7 Route component.\n * This is used to automatically capture route changes as transactions.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withSentryReactRouterV7Routing(routes) {\n  return createV6CompatibleWithSentryReactRouterRouting(routes, '7');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v7 createBrowserRouter function.\n * This is used to automatically capture route changes as transactions when using the createBrowserRouter API.\n */\nfunction wrapCreateBrowserRouterV7\n\n(createRouterFunction) {\n  return createV6CompatibleWrapCreateBrowserRouter(createRouterFunction, '7');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v7 createMemoryRouter function.\n * This is used to automatically capture route changes as transactions when using the createMemoryRouter API.\n * The difference between createBrowserRouter and createMemoryRouter is that with createMemoryRouter,\n * optional `initialEntries` are also taken into account.\n */\nfunction wrapCreateMemoryRouterV7\n\n(createMemoryRouterFunction) {\n  return createV6CompatibleWrapCreateMemoryRouter(createMemoryRouterFunction, '7');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v7 useRoutes hook.\n * This is used to automatically capture route changes as transactions when using the useRoutes hook.\n */\nfunction wrapUseRoutesV7(origUseRoutes) {\n  return createV6CompatibleWrapUseRoutes(origUseRoutes, '7');\n}\n\nexport { reactRouterV7BrowserTracingIntegration, withSentryReactRouterV7Routing, wrapCreateBrowserRouterV7, wrapCreateMemoryRouterV7, wrapUseRoutesV7 };\n//# sourceMappingURL=reactrouterv7.js.map\n","export * from '@sentry/browser';\nexport { init } from './sdk.js';\nexport { reactErrorHandler } from './error.js';\nexport { Profiler, useProfiler, withProfiler } from './profiler.js';\nexport { ErrorBoundary, withErrorBoundary } from './errorboundary.js';\nexport { createReduxEnhancer } from './redux.js';\nexport { reactRouterV3BrowserTracingIntegration } from './reactrouterv3.js';\nexport { tanstackRouterBrowserTracingIntegration } from './tanstackrouter.js';\nexport { reactRouterV4BrowserTracingIntegration, reactRouterV5BrowserTracingIntegration, withSentryRouting } from './reactrouter.js';\nexport { reactRouterV6BrowserTracingIntegration, withSentryReactRouterV6Routing, wrapCreateBrowserRouter, wrapCreateBrowserRouterV6, wrapCreateMemoryRouterV6, wrapUseRoutes, wrapUseRoutesV6 } from './reactrouterv6.js';\nexport { reactRouterV7BrowserTracingIntegration, withSentryReactRouterV7Routing, wrapCreateBrowserRouterV7, wrapCreateMemoryRouterV7, wrapUseRoutesV7 } from './reactrouterv7.js';\n//# sourceMappingURL=index.js.map\n","export { init, withSentryConfig } from './client/index.js';\nexport { captureUnderscoreErrorException } from './common/pages-router-instrumentation/_error.js';\nexport { browserTracingIntegration } from './client/browserTracingIntegration.js';\nexport { wrapGetStaticPropsWithSentry } from './common/pages-router-instrumentation/wrapGetStaticPropsWithSentry.js';\nexport { wrapGetInitialPropsWithSentry } from './common/pages-router-instrumentation/wrapGetInitialPropsWithSentry.js';\nexport { wrapAppGetInitialPropsWithSentry } from './common/pages-router-instrumentation/wrapAppGetInitialPropsWithSentry.js';\nexport { wrapDocumentGetInitialPropsWithSentry } from './common/pages-router-instrumentation/wrapDocumentGetInitialPropsWithSentry.js';\nexport { wrapErrorGetInitialPropsWithSentry } from './common/pages-router-instrumentation/wrapErrorGetInitialPropsWithSentry.js';\nexport { wrapGetServerSidePropsWithSentry } from './common/pages-router-instrumentation/wrapGetServerSidePropsWithSentry.js';\nexport { wrapServerComponentWithSentry } from './common/wrapServerComponentWithSentry.js';\nexport { wrapRouteHandlerWithSentry } from './common/wrapRouteHandlerWithSentry.js';\nexport { wrapApiHandlerWithSentryVercelCrons } from './common/pages-router-instrumentation/wrapApiHandlerWithSentryVercelCrons.js';\nexport { wrapMiddlewareWithSentry } from './common/wrapMiddlewareWithSentry.js';\nexport { wrapPageComponentWithSentry } from './common/pages-router-instrumentation/wrapPageComponentWithSentry.js';\nexport { wrapGenerationFunctionWithSentry } from './common/wrapGenerationFunctionWithSentry.js';\nexport { withServerActionInstrumentation } from './common/withServerActionInstrumentation.js';\nexport { captureRequestError, experimental_captureRequestError } from './common/captureRequestError.js';\nexport * from '@sentry/react';\n//# sourceMappingURL=index.client.js.map\n","import type { default as Router } from '../router'\n\nexport function compareRouterStates(a: Router['state'], b: Router['state']) {\n  const stateKeys = Object.keys(a)\n  if (stateKeys.length !== Object.keys(b).length) return false\n\n  for (let i = stateKeys.length; i--; ) {\n    const key = stateKeys[i]\n    if (key === 'query') {\n      const queryKeys = Object.keys(a.query)\n      if (queryKeys.length !== Object.keys(b.query).length) {\n        return false\n      }\n      for (let j = queryKeys.length; j--; ) {\n        const queryKey = queryKeys[j]\n        if (\n          !b.query.hasOwnProperty(queryKey) ||\n          a.query[queryKey] !== b.query[queryKey]\n        ) {\n          return false\n        }\n      }\n    } else if (\n      !b.hasOwnProperty(key) ||\n      a[key as keyof Router['state']] !== b[key as keyof Router['state']]\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { isString } from './is.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    const className = elem.className;\n    if (className && isString(className)) {\n      const classes = className.split(/\\s+/);\n      for (const c of classes) {\n        out.push(`.${c}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (const k of allowedAttrs) {\n    const attr = elem.getAttribute(k);\n    if (attr) {\n      out.push(`[${k}=\"${attr}\"]`);\n    }\n  }\n\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existence of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n *\n * @deprecated This method is deprecated and will be removed in the next major version.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precedence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexport { getComponentName, getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n * @deprecated This function will be removed in the next major version.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @param existingModule module to use for requiring\n * @returns possibly required module\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction loadModule(moduleName, existingModule = module) {\n  let mod;\n\n  try {\n    // eslint-disable-next-line deprecation/deprecation\n    mod = dynamicRequire(existingModule, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  if (!mod) {\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      const { cwd } = dynamicRequire(existingModule, 'process');\n      // eslint-disable-next-line deprecation/deprecation\n      mod = dynamicRequire(existingModule, `${cwd()}/node_modules/${moduleName}`) ;\n    } catch (e) {\n      // no-empty\n    }\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isNodeEnv } from './node.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  const process = (GLOBAL_OBJ ).process;\n  return !!process && process.type === 'renderer';\n}\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.js.map\n","import type { NextRouter, Url } from '../shared/lib/router/router'\n\nimport { searchParamsToUrlQuery } from '../shared/lib/router/utils/querystring'\nimport { formatWithValidation } from '../shared/lib/router/utils/format-url'\nimport { omit } from '../shared/lib/router/utils/omit'\nimport { normalizeRepeatedSlashes } from '../shared/lib/utils'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { interpolateAs } from '../shared/lib/router/utils/interpolate-as'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs: true\n): [string, string] | [string]\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs?: false\n): string\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs?: boolean\n): [string, string] | [string] | string {\n  // we use a dummy base url for relative urls\n  let base: URL\n  let urlAsString = typeof href === 'string' ? href : formatWithValidation(href)\n\n  // repeated slashes and backslashes in the URL are considered\n  // invalid and will never match a Next.js page/file\n  // https://www.rfc-editor.org/rfc/rfc3986.html#section-3.1\n  const urlProtoMatch = urlAsString.match(/^[a-z][a-z0-9+.-]*:\\/\\//i)\n  const urlAsStringNoProto = urlProtoMatch\n    ? urlAsString.slice(urlProtoMatch[0].length)\n    : urlAsString\n\n  const urlParts = urlAsStringNoProto.split('?', 1)\n\n  if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n    console.error(\n      `Invalid href '${urlAsString}' passed to next/router in page: '${router.pathname}'. Repeated forward-slashes (//) or backslashes \\\\ are not valid in the href.`\n    )\n    const normalizedUrl = normalizeRepeatedSlashes(urlAsStringNoProto)\n    urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl\n  }\n\n  // Return because it cannot be routed by the Next.js router\n  if (!isLocalURL(urlAsString)) {\n    return (resolveAs ? [urlAsString] : urlAsString) as string\n  }\n\n  try {\n    let baseBase = urlAsString.startsWith('#') ? router.asPath : router.pathname\n\n    // If the provided href is only a query string, it is safer to use the asPath\n    // considering rewrites.\n    if (urlAsString.startsWith('?')) {\n      baseBase = router.asPath\n\n      // However, if is a dynamic route, we need to use the pathname to preserve the\n      // query interpolation and rewrites (router.pathname will look like \"/[slug]\").\n      if (isDynamicRoute(router.pathname)) {\n        baseBase = router.pathname\n\n        const routeRegex = getRouteRegex(router.pathname)\n        const match = getRouteMatcher(routeRegex)(router.asPath)\n\n        // For dynamic routes, if asPath doesn't match the pathname regex, it is a rewritten path.\n        // In this case, should use asPath to preserve the current URL.\n        if (!match) {\n          baseBase = router.asPath\n        }\n\n        // Note: There is an edge case where the pathname is dynamic, and also a rewrite path to the same segment.\n        // E.g. in \"/[slug]\" path, rewrite \"/foo\" -> \"/bar\"\n\n        // In this case, it will be treated as a non-rewritten path and possibly interpolate the query string.\n        // E.g., \"/any?slug=foo\" will become the content of \"/foo\", not rewritten as \"/bar\"\n\n        // This is currently a trade-off of not resolving rewrite paths on every Router/Link call,\n        // but using a lighter route regex pattern check.\n      }\n    }\n\n    base = new URL(baseBase, 'http://n')\n  } catch (_) {\n    // fallback to / for invalid asPath values e.g. //\n    base = new URL('/', 'http://n')\n  }\n\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    let interpolatedAs = ''\n\n    if (\n      isDynamicRoute(finalUrl.pathname) &&\n      finalUrl.searchParams &&\n      resolveAs\n    ) {\n      const query = searchParamsToUrlQuery(finalUrl.searchParams)\n\n      const { result, params } = interpolateAs(\n        finalUrl.pathname,\n        finalUrl.pathname,\n        query\n      )\n\n      if (result) {\n        interpolatedAs = formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omit(query, params),\n        })\n      }\n    }\n\n    // if the origin didn't change, it means we received a relative href\n    const resolvedHref =\n      finalUrl.origin === base.origin\n        ? finalUrl.href.slice(finalUrl.origin.length)\n        : finalUrl.href\n\n    return resolveAs\n      ? [resolvedHref, interpolatedAs || resolvedHref]\n      : resolvedHref\n  } catch (_) {\n    return resolveAs ? [urlAsString] : urlAsString\n  }\n}\n","import { htmlTreeAsString } from './browser.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { logger } from './logger.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  try {\n    source[name] = wrapped;\n  } catch (e) {\n    DEBUG_BUILD && logger.log(`Failed to replace method \"${name}\" in object`, source);\n  }\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n *\n * @deprecated This function is deprecated and will be removed in the next major version of the SDK.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction urlEncode(object) {\n  return Object.entries(object)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  const firstKey = keys[0];\n\n  if (!firstKey) {\n    return '[object has no keys]';\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.getOwnPropertyNames(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e2) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    // this will catch both undefined and null\n    case wat == undefined:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Sentry-specific change:\n// This function's logic was NOT updated to web-vitals 4.2.4 but we continue\n// to use the web-vitals 3.5.2 due to us having stricter browser support.\n// PR with context that made the changes: https://github.com/GoogleChrome/web-vitals/pull/442/files#r1530492402\n// The PR removed listening to the `pagehide` event, in favour of only listening to `visibilitychange` event.\n// This is \"more correct\" but some browsers we still support (Safari 12.1-14.0) don't fully support `visibilitychange`\n// or have known bugs w.r.t the `visibilitychange` event.\n// TODO (v9): If we decide to drop support for Safari 12.1-14.0, we can use the logic from web-vitals 4.2.4\n// In this case, we also need to update the integration tests that currently trigger the `pagehide` event to\n// simulate the page being hidden.\nconst onHidden = (cb) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || (WINDOW.document && WINDOW.document.visibilityState === 'hidden')) {\n      cb(event);\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// sentry-specific change:\n// add optional param to not check for responseStart (see comment below)\nconst getNavigationEntry = (checkResponseStart = true) => {\n  const navigationEntry =\n    WINDOW.performance && WINDOW.performance.getEntriesByType && WINDOW.performance.getEntriesByType('navigation')[0];\n  // Check to ensure the `responseStart` property is present and valid.\n  // In some cases no value is reported by the browser (for\n  // privacy/security reasons), and in other cases (bugs) the value is\n  // negative or is larger than the current page time. Ignore these cases:\n  // https://github.com/GoogleChrome/web-vitals/issues/137\n  // https://github.com/GoogleChrome/web-vitals/issues/162\n  // https://github.com/GoogleChrome/web-vitals/issues/275\n  if (\n    // sentry-specific change:\n    // We don't want to check for responseStart for our own use of `getNavigationEntry`\n    !checkResponseStart ||\n    (navigationEntry && navigationEntry.responseStart > 0 && navigationEntry.responseStart < performance.now())\n  ) {\n    return navigationEntry;\n  }\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import type { ComponentType } from 'react'\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info'\nimport getAssetPathFromRoute from '../shared/lib/router/utils/get-asset-path-from-route'\nimport { __unsafeCreateTrustedScriptURL } from './trusted-types'\nimport { requestIdleCallback } from './request-idle-callback'\nimport { getDeploymentIdQueryOrEmptyString } from '../build/deployment-id'\nimport { encodeURIPath } from '../shared/lib/encode-uri-path'\n\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800\n\ndeclare global {\n  interface Window {\n    __BUILD_MANIFEST?: Record<string, string[]>\n    __BUILD_MANIFEST_CB?: Function\n    __MIDDLEWARE_MATCHERS?: MiddlewareMatcher[]\n    __MIDDLEWARE_MANIFEST_CB?: Function\n    __REACT_LOADABLE_MANIFEST?: any\n    __DYNAMIC_CSS_MANIFEST?: any\n    __RSC_MANIFEST?: any\n    __RSC_SERVER_MANIFEST?: any\n    __NEXT_FONT_MANIFEST?: any\n    __SUBRESOURCE_INTEGRITY_MANIFEST?: string\n    __INTERCEPTION_ROUTE_REWRITE_MANIFEST?: string\n  }\n}\n\ninterface LoadedEntrypointSuccess {\n  component: ComponentType\n  exports: any\n}\ninterface LoadedEntrypointFailure {\n  error: unknown\n}\ntype RouteEntrypoint = LoadedEntrypointSuccess | LoadedEntrypointFailure\n\ninterface RouteStyleSheet {\n  href: string\n  content: string\n}\n\ninterface LoadedRouteSuccess extends LoadedEntrypointSuccess {\n  styles: RouteStyleSheet[]\n}\ninterface LoadedRouteFailure {\n  error: unknown\n}\ntype RouteLoaderEntry = LoadedRouteSuccess | LoadedRouteFailure\n\ninterface Future<V> {\n  resolve: (entrypoint: V) => void\n  future: Promise<V>\n}\nfunction withFuture<T extends object>(\n  key: string,\n  map: Map<string, Future<T> | T>,\n  generator?: () => Promise<T>\n): Promise<T> {\n  let entry = map.get(key)\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future\n    }\n    return Promise.resolve(entry)\n  }\n  let resolver: (entrypoint: T) => void\n  const prom: Promise<T> = new Promise<T>((resolve) => {\n    resolver = resolve\n  })\n  map.set(key, { resolve: resolver!, future: prom })\n  return generator\n    ? generator()\n        .then((value) => {\n          resolver(value)\n          return value\n        })\n        .catch((err) => {\n          map.delete(key)\n          throw err\n        })\n    : prom\n}\n\nexport interface RouteLoader {\n  whenEntrypoint(route: string): Promise<RouteEntrypoint>\n  onEntrypoint(route: string, execute: () => unknown): void\n  loadRoute(route: string, prefetch?: boolean): Promise<RouteLoaderEntry>\n  prefetch(route: string): Promise<void>\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR')\n// TODO: unexport\nexport function markAssetError(err: Error): Error {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {})\n}\n\nexport function isAssetError(err?: Error): boolean | undefined {\n  return err && ASSET_LOAD_ERROR in err\n}\n\nfunction hasPrefetch(link?: HTMLLinkElement): boolean {\n  try {\n    link = document.createElement('link')\n    return (\n      // detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      (!!window.MSInputMethodContext && !!(document as any).documentMode) ||\n      link.relList.supports('prefetch')\n    )\n  } catch {\n    return false\n  }\n}\n\nconst canPrefetch: boolean = hasPrefetch()\n\nconst getAssetQueryString = () => {\n  return getDeploymentIdQueryOrEmptyString()\n}\n\nfunction prefetchViaDom(\n  href: string,\n  as: string,\n  link?: HTMLLinkElement\n): Promise<any> {\n  return new Promise<void>((resolve, reject) => {\n    const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`\n    if (document.querySelector(selector)) {\n      return resolve()\n    }\n\n    link = document.createElement('link')\n\n    // The order of property assignment here is intentional:\n    if (as) link!.as = as\n    link!.rel = `prefetch`\n    link!.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    link!.onload = resolve as any\n    link!.onerror = () =>\n      reject(markAssetError(new Error(`Failed to prefetch: ${href}`)))\n\n    // `href` should always be last:\n    link!.href = href\n\n    document.head.appendChild(link)\n  })\n}\n\nfunction appendScript(\n  src: TrustedScriptURL | string,\n  script?: HTMLScriptElement\n): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script')\n\n    // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n    script.onload = resolve\n    script.onerror = () =>\n      reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n\n    // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n\n    // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n    script.src = src as string\n    document.body.appendChild(script)\n  })\n}\n\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise: Promise<void> | undefined\n\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout<T>(\n  p: Promise<T>,\n  ms: number,\n  err: Error\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    let cancelled = false\n\n    p.then((r) => {\n      // Resolved, cancel the timeout\n      cancelled = true\n      resolve(r)\n    }).catch(reject)\n\n    // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n    if (process.env.NODE_ENV === 'development') {\n      ;(devBuildPromise || Promise.resolve()).then(() => {\n        requestIdleCallback(() =>\n          setTimeout(() => {\n            if (!cancelled) {\n              reject(err)\n            }\n          }, ms)\n        )\n      })\n    }\n\n    if (process.env.NODE_ENV !== 'development') {\n      requestIdleCallback(() =>\n        setTimeout(() => {\n          if (!cancelled) {\n            reject(err)\n          }\n        }, ms)\n      )\n    }\n  })\n}\n\n// TODO: stop exporting or cache the failure\n// It'd be best to stop exporting this. It's an implementation detail. We're\n// only exporting it for backwards compatibility with the `page-loader`.\n// Only cache this response as a last resort if we cannot eliminate all other\n// code branches that use the Build Manifest Callback and push them through\n// the Route Loader interface.\nexport function getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST)\n  }\n\n  const onBuildManifest = new Promise<Record<string, string[]>>((resolve) => {\n    // Mandatory because this is not concurrent safe:\n    const cb = self.__BUILD_MANIFEST_CB\n    self.__BUILD_MANIFEST_CB = () => {\n      resolve(self.__BUILD_MANIFEST!)\n      cb && cb()\n    }\n  })\n\n  return resolvePromiseWithTimeout(\n    onBuildManifest,\n    MS_MAX_IDLE_DELAY,\n    markAssetError(new Error('Failed to load client build manifest'))\n  )\n}\n\ninterface RouteFiles {\n  scripts: (TrustedScriptURL | string)[]\n  css: string[]\n}\nfunction getFilesForRoute(\n  assetPrefix: string,\n  route: string\n): Promise<RouteFiles> {\n  if (process.env.NODE_ENV === 'development') {\n    const scriptUrl =\n      assetPrefix +\n      '/_next/static/chunks/pages' +\n      encodeURIPath(getAssetPathFromRoute(route, '.js')) +\n      getAssetQueryString()\n    return Promise.resolve({\n      scripts: [__unsafeCreateTrustedScriptURL(scriptUrl)],\n      // Styles are handled by `style-loader` in development:\n      css: [],\n    })\n  }\n  return getClientBuildManifest().then((manifest) => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`))\n    }\n    const allFiles = manifest[route].map(\n      (entry) => assetPrefix + '/_next/' + encodeURIPath(entry)\n    )\n    return {\n      scripts: allFiles\n        .filter((v) => v.endsWith('.js'))\n        .map((v) => __unsafeCreateTrustedScriptURL(v) + getAssetQueryString()),\n      css: allFiles\n        .filter((v) => v.endsWith('.css'))\n        .map((v) => v + getAssetQueryString()),\n    }\n  })\n}\n\nexport function createRouteLoader(assetPrefix: string): RouteLoader {\n  const entrypoints: Map<string, Future<RouteEntrypoint> | RouteEntrypoint> =\n    new Map()\n  const loadedScripts: Map<string, Promise<unknown>> = new Map()\n  const styleSheets: Map<string, Promise<RouteStyleSheet>> = new Map()\n  const routes: Map<string, Future<RouteLoaderEntry> | RouteLoaderEntry> =\n    new Map()\n\n  function maybeExecuteScript(\n    src: TrustedScriptURL | string\n  ): Promise<unknown> {\n    // With HMR we might need to \"reload\" scripts when they are\n    // disposed and readded. Executing scripts twice has no functional\n    // differences\n    if (process.env.NODE_ENV !== 'development') {\n      let prom: Promise<unknown> | undefined = loadedScripts.get(src.toString())\n      if (prom) {\n        return prom\n      }\n\n      // Skip executing script if it's already in the DOM:\n      if (document.querySelector(`script[src^=\"${src}\"]`)) {\n        return Promise.resolve()\n      }\n\n      loadedScripts.set(src.toString(), (prom = appendScript(src)))\n      return prom\n    } else {\n      return appendScript(src)\n    }\n  }\n\n  function fetchStyleSheet(href: string): Promise<RouteStyleSheet> {\n    let prom: Promise<RouteStyleSheet> | undefined = styleSheets.get(href)\n    if (prom) {\n      return prom\n    }\n\n    styleSheets.set(\n      href,\n      (prom = fetch(href, { credentials: 'same-origin' })\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(`Failed to load stylesheet: ${href}`)\n          }\n          return res.text().then((text) => ({ href: href, content: text }))\n        })\n        .catch((err) => {\n          throw markAssetError(err)\n        }))\n    )\n    return prom\n  }\n\n  return {\n    whenEntrypoint(route: string) {\n      return withFuture(route, entrypoints)\n    },\n    onEntrypoint(route: string, execute: undefined | (() => unknown)) {\n      ;(execute\n        ? Promise.resolve()\n            .then(() => execute())\n            .then(\n              (exports: any) => ({\n                component: (exports && exports.default) || exports,\n                exports: exports,\n              }),\n              (err) => ({ error: err })\n            )\n        : Promise.resolve(undefined)\n      ).then((input: RouteEntrypoint | undefined) => {\n        const old = entrypoints.get(route)\n        if (old && 'resolve' in old) {\n          if (input) {\n            entrypoints.set(route, input)\n            old.resolve(input)\n          }\n        } else {\n          if (input) {\n            entrypoints.set(route, input)\n          } else {\n            entrypoints.delete(route)\n          }\n          // when this entrypoint has been resolved before\n          // the route is outdated and we want to invalidate\n          // this cache entry\n          routes.delete(route)\n        }\n      })\n    },\n    loadRoute(route: string, prefetch?: boolean) {\n      return withFuture<RouteLoaderEntry>(route, routes, () => {\n        let devBuildPromiseResolve: () => void\n\n        if (process.env.NODE_ENV === 'development') {\n          devBuildPromise = new Promise<void>((resolve) => {\n            devBuildPromiseResolve = resolve\n          })\n        }\n\n        return resolvePromiseWithTimeout(\n          getFilesForRoute(assetPrefix, route)\n            .then(({ scripts, css }) => {\n              return Promise.all([\n                entrypoints.has(route)\n                  ? []\n                  : Promise.all(scripts.map(maybeExecuteScript)),\n                Promise.all(css.map(fetchStyleSheet)),\n              ] as const)\n            })\n            .then((res) => {\n              return this.whenEntrypoint(route).then((entrypoint) => ({\n                entrypoint,\n                styles: res[1],\n              }))\n            }),\n          MS_MAX_IDLE_DELAY,\n          markAssetError(new Error(`Route did not complete loading: ${route}`))\n        )\n          .then(({ entrypoint, styles }) => {\n            const res: RouteLoaderEntry = Object.assign<\n              { styles: RouteStyleSheet[] },\n              RouteEntrypoint\n            >({ styles: styles! }, entrypoint)\n            return 'error' in entrypoint ? entrypoint : res\n          })\n          .catch((err) => {\n            if (prefetch) {\n              // we don't want to cache errors during prefetch\n              throw err\n            }\n            return { error: err }\n          })\n          .finally(() => devBuildPromiseResolve?.())\n      })\n    },\n    prefetch(route: string): Promise<void> {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn\n      if ((cn = (navigator as any).connection)) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve()\n      }\n      return getFilesForRoute(assetPrefix, route)\n        .then((output) =>\n          Promise.all(\n            canPrefetch\n              ? output.scripts.map((script) =>\n                  prefetchViaDom(script.toString(), 'script')\n                )\n              : []\n          )\n        )\n        .then(() => {\n          requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}))\n        })\n        .catch(\n          // swallow prefetch errors\n          () => {}\n        )\n    },\n  }\n}\n","import './utils-hoist/debug-build.js';\nimport './utils-hoist/logger.js';\nimport { dropUndefinedKeys } from './utils-hoist/object.js';\nimport { timestampInSeconds } from './utils-hoist/time.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport './utils-hoist/syncpromise.js';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","const STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] ;\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(getLastStackFrame(localStack).function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nfunction getLastStackFrame(arr) {\n  return arr[arr.length - 1] || {};\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { UNKNOWN_FUNCTION, createStackParser, getFramesFromEvent, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { DynamicParamTypesShort } from '../../../../server/app-render/types'\nimport type { FallbackRouteParams } from '../../../../server/request/fallback-params'\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  params: { [key: string]: any },\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  pagePath: string,\n  fallbackRouteParams: FallbackRouteParams | null\n): DynamicParam {\n  let value = params[segmentKey]\n\n  if (fallbackRouteParams && fallbackRouteParams.has(segmentKey)) {\n    value = fallbackRouteParams.get(segmentKey)\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  if (!value) {\n    const isCatchall = dynamicParamType === 'c'\n    const isOptionalCatchall = dynamicParamType === 'oc'\n\n    if (isCatchall || isOptionalCatchall) {\n      // handle the case where an optional catchall does not have a value,\n      // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n      if (isOptionalCatchall) {\n        return {\n          param: segmentKey,\n          value: null,\n          type: dynamicParamType,\n          treeSegment: [segmentKey, '', dynamicParamType],\n        }\n      }\n\n      // handle the case where a catchall or optional catchall does not have a value,\n      // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n      value = pagePath\n        .split('/')\n        // remove the first empty string\n        .slice(1)\n        // replace any dynamic params with the actual values\n        .flatMap((pathSegment) => {\n          const param = parseParameter(pathSegment)\n          // if the segment matches a param, return the param value\n          // otherwise, it's a static segment, so just return that\n          return params[param.key] ?? param.key\n        })\n\n      return {\n        param: segmentKey,\n        value,\n        type: dynamicParamType,\n        // This value always has to be a string.\n        treeSegment: [segmentKey, value.join('/'), dynamicParamType],\n      }\n    }\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value: value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { getCurrentScope, getIsolationScope, getClient, withIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { makeSession, updateSession, closeSession } from './session.js';\nimport { isThenable } from './utils-hoist/is.js';\nimport { logger } from './utils-hoist/logger.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport { timestampInSeconds } from './utils-hoist/time.js';\nimport { GLOBAL_OBJ } from './utils-hoist/worldwide.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(exception, hint) {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(message, captureContext) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nfunction lastEventId() {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      Promise.resolve(maybePromiseResult).then(\n        () => {\n          finishCheckIn('ok');\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      );\n    } else {\n      finishCheckIn('ok');\n    }\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nfunction isEnabled() {\n  const client = getClient();\n  return !!client && client.getOptions().enabled !== false && !!client.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nfunction addEventProcessor(callback) {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\nexport { addEventProcessor, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, endSession, flush, isEnabled, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, withMonitor };\n//# sourceMappingURL=exports.js.map\n","import { uuid4 } from './misc.js';\n\n/**\n * Returns a new minimal propagation context.\n *\n * @deprecated Use `generateTraceId` and `generateSpanId` instead.\n */\nfunction generatePropagationContext() {\n  return {\n    traceId: generateTraceId(),\n    spanId: generateSpanId(),\n  };\n}\n\n/**\n * Generate a random, valid trace ID.\n */\nfunction generateTraceId() {\n  return uuid4();\n}\n\n/**\n * Generate a random, valid span ID.\n */\nfunction generateSpanId() {\n  return uuid4().substring(16);\n}\n\nexport { generatePropagationContext, generateSpanId, generateTraceId };\n//# sourceMappingURL=propagationContext.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\nfunction _parseInt(input) {\n  return parseInt(input || '', 10);\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = _parseInt(match[1]);\n  const minor = _parseInt(match[2]);\n  const patch = _parseInt(match[3]);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  // We guard here to ensure this is not larger than the existing number of lines\n  const lineIndex = Math.min(maxLines - 1, sourceLine);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  frame.context_line = snipLine(lines[lineIndex], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  if (isAlreadyCaptured(exception)) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nfunction isAlreadyCaptured(exception) {\n  try {\n    return (exception ).__sentry_captured__;\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n *\n * @deprecated This function has been deprecated and will not be replaced.\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { SDK_VERSION } from './version.js';\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const versionedCarrier = (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n  return versionedCarrier[name] || (versionedCarrier[name] = creator());\n}\n\nexport { GLOBAL_OBJ, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    hasAdjacentParameterIssues: null,\n    normalizeAdjacentParameters: null,\n    normalizeTokensForRegexp: null,\n    stripParameterSeparators: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    hasAdjacentParameterIssues: function() {\n        return hasAdjacentParameterIssues;\n    },\n    normalizeAdjacentParameters: function() {\n        return normalizeAdjacentParameters;\n    },\n    normalizeTokensForRegexp: function() {\n        return normalizeTokensForRegexp;\n    },\n    stripParameterSeparators: function() {\n        return stripParameterSeparators;\n    }\n});\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */ /**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */ const PARAM_SEPARATOR = '_NEXTSEP_';\nfunction hasAdjacentParameterIssues(route) {\n    if (typeof route !== 'string') return false;\n    // Check for interception route markers followed immediately by parameters\n    // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n    // These patterns cause \"Must have text between two parameters\" errors\n    if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n        return true;\n    }\n    // Check for basic adjacent parameters without separators\n    // Pattern: :param1:param2 (but not :param* or other URL patterns)\n    if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n        return true;\n    }\n    return false;\n}\nfunction normalizeAdjacentParameters(route) {\n    let normalized = route;\n    // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n    normalized = normalized.replace(/(\\([^)]*\\)):([^/\\s]+)/g, `$1${PARAM_SEPARATOR}:$2`);\n    // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n    normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`);\n    return normalized;\n}\nfunction normalizeTokensForRegexp(tokens) {\n    return tokens.map((token)=>{\n        // Token union type: Token = string | TokenObject\n        // Literal path segments are strings, parameters/wildcards are objects\n        if (typeof token === 'object' && token !== null && // Not all token objects have 'modifier' property (e.g., simple text tokens)\n        'modifier' in token && // Only repeating modifiers (* or +) cause the validation error\n        // Other modifiers like '?' (optional) are fine\n        (token.modifier === '*' || token.modifier === '+') && // Token objects can have different shapes depending on route pattern\n        'prefix' in token && 'suffix' in token && // Both prefix and suffix must be empty strings\n        // This is what causes the validation error in path-to-regexp\n        token.prefix === '' && token.suffix === '') {\n            // Add minimal prefix to satisfy path-to-regexp validation\n            // We use '/' as it's the most common path delimiter and won't break route matching\n            // The prefix gets used in regex generation but doesn't affect parameter extraction\n            return {\n                ...token,\n                prefix: '/'\n            };\n        }\n        return token;\n    });\n}\nfunction stripParameterSeparators(params) {\n    const cleaned = {};\n    for (const [key, value] of Object.entries(params)){\n        if (typeof value === 'string') {\n            // Remove the separator if it appears at the start of parameter values\n            cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '');\n        } else if (Array.isArray(value)) {\n            // Handle array parameters (from repeated route segments)\n            cleaned[key] = value.map((item)=>typeof item === 'string' ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '') : item);\n        } else {\n            cleaned[key] = value;\n        }\n    }\n    return cleaned;\n}\n\n//# sourceMappingURL=route-pattern-normalizer.js.map","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return compile(routeToUse, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return compile(normalizedRoute, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n","/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */\nlet policy: TrustedTypePolicy | null | undefined\n\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */\nfunction getPolicy() {\n  if (typeof policy === 'undefined' && typeof window !== 'undefined') {\n    policy =\n      window.trustedTypes?.createPolicy('nextjs', {\n        createHTML: (input) => input,\n        createScript: (input) => input,\n        createScriptURL: (input) => input,\n      }) || null\n  }\n\n  return policy\n}\n\n/**\n * Unsafely promote a string to a TrustedScriptURL, falling back to strings\n * when Trusted Types are not available.\n * This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will cause a browser to load and execute a resource, e.g. when\n * assigning to script.src.\n */\nexport function __unsafeCreateTrustedScriptURL(\n  url: string\n): TrustedScriptURL | string {\n  return getPolicy()?.createScriptURL(url) || url\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import { GLOBAL_OBJ } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ\n\n;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../utils-hoist/logger.js';\n\n/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nfunction parseSampleRate(sampleRate) {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return undefined;\n  }\n\n  return rate;\n}\n\nexport { parseSampleRate };\n//# sourceMappingURL=parseSampleRate.js.map\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","const getRating = (value, thresholds) => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nconst bindReporter = (\n  callback,\n  metric,\n  thresholds,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v4-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { WINDOW } from '../../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else if (WINDOW.document && WINDOW.document.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries = [];\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good' , // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() );\n        });\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst runOnce = (cb) => {\n  let called = false;\n  return () => {\n    if (!called) {\n      cb();\n      called = true;\n    }\n  };\n};\n\nexport { runOnce };\n//# sourceMappingURL=runOnce.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst whenActivated = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n\nexport { whenActivated };\n//# sourceMappingURL=whenActivated.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nconst FCPThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nconst onFCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      entries.forEach(entry => {\n        if (entry.name === 'first-contentful-paint') {\n          po.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      });\n    };\n\n    const po = observe('paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, FCPThresholds, opts.reportAllChanges);\n    }\n  });\n};\n\nexport { FCPThresholds, onFCP };\n//# sourceMappingURL=onFCP.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { onFCP } from './onFCP.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nconst CLSThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport, opts = {}) => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report;\n\n      let sessionValue = 0;\n      let sessionEntries = [];\n\n      const handleEntries = (entries) => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              firstSessionEntry &&\n              lastSessionEntry &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        onHidden(() => {\n          handleEntries(po.takeRecords() );\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n\nexport { CLSThresholds, onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nconst FIDThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntry = (entry) => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n\nexport { FIDThresholds, onFID };\n//# sourceMappingURL=getFID.js.map\n","import { observe } from '../observe.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  entries.forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\nexport { getInteractionCount, initInteractionCountPolyfill };\n//# sourceMappingURL=interactionCountPolyfill.js.map\n","import { getInteractionCount } from './polyfills/interactionCountPolyfill.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is at most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap = new Map();\n\n// The default `durationThreshold` used across this library for observing\n// `event` entries via PerformanceObserver.\nconst DEFAULT_DURATION_THRESHOLD = 40;\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nlet prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return getInteractionCount() - prevInteractionCount;\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n/**\n * A list of callback functions to run before each entry is processed.\n * Exposing this list allows the attribution build to hook into the\n * entry processing pipeline.\n */\nconst entryPreProcessingCallbacks = [];\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processInteractionEntry = (entry) => {\n  entryPreProcessingCallbacks.forEach(cb => cb(entry));\n\n  // Skip further processing for entries that cannot be INP candidates.\n  if (!(entry.interactionId || entry.entryType === 'first-input')) return;\n\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  const existingInteraction = longestInteractionMap.get(entry.interactionId);\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    (minLongestInteraction && entry.duration > minLongestInteraction.latency)\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      // If the new entry has a longer duration, replace the old entries,\n      // otherwise add to the array.\n      if (entry.duration > existingInteraction.latency) {\n        existingInteraction.entries = [entry];\n        existingInteraction.latency = entry.duration;\n      } else if (\n        entry.duration === existingInteraction.latency &&\n        entry.startTime === (existingInteraction.entries[0] && existingInteraction.entries[0].startTime)\n      ) {\n        existingInteraction.entries.push(entry);\n      }\n    } else {\n      const interaction = {\n        id: entry.interactionId,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap.set(interaction.id, interaction);\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    if (longestInteractionList.length > MAX_INTERACTIONS_TO_CONSIDER) {\n      longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => longestInteractionMap.delete(i.id));\n    }\n  }\n};\n\nexport { DEFAULT_DURATION_THRESHOLD, entryPreProcessingCallbacks, estimateP98LongestInteraction, longestInteractionList, longestInteractionMap, processInteractionEntry };\n//# sourceMappingURL=interactions.js.map\n","import { WINDOW } from '../../../types.js';\nimport { onHidden } from './onHidden.js';\nimport { runOnce } from './runOnce.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Runs the passed callback during the next idle period, or immediately\n * if the browser's visibility state is (or becomes) hidden.\n */\nconst whenIdle = (cb) => {\n  const rIC = WINDOW.requestIdleCallback || WINDOW.setTimeout;\n\n  let handle = -1;\n  // eslint-disable-next-line no-param-reassign\n  cb = runOnce(cb) ;\n  // If the document is hidden, run the callback immediately, otherwise\n  // race an idle callback with the next `visibilitychange` event.\n  if (WINDOW.document && WINDOW.document.visibilityState === 'hidden') {\n    cb();\n  } else {\n    handle = rIC(cb);\n    onHidden(cb);\n  }\n  return handle;\n};\n\nexport { whenIdle };\n//# sourceMappingURL=whenIdle.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { DEFAULT_DURATION_THRESHOLD, processInteractionEntry, estimateP98LongestInteraction } from './lib/interactions.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill.js';\nimport { whenActivated } from './lib/whenActivated.js';\nimport { whenIdle } from './lib/whenIdle.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nconst INPThresholds = [200, 500];\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts = {}) => {\n  // Return if the browser doesn't support all APIs needed to measure INP.\n  if (!('PerformanceEventTiming' in WINDOW && 'interactionId' in PerformanceEventTiming.prototype)) {\n    return;\n  }\n\n  whenActivated(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    initInteractionCountPolyfill();\n\n    const metric = initMetric('INP');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntries = (entries) => {\n      // Queue the `handleEntries()` callback in the next idle task.\n      // This is needed to increase the chances that all event entries that\n      // occurred between the user interaction and the next paint\n      // have been dispatched. Note: there is currently an experiment\n      // running in Chrome (EventTimingKeypressAndCompositionInteractionId)\n      // 123+ that if rolled out fully may make this no longer necessary.\n      whenIdle(() => {\n        entries.forEach(processInteractionEntry);\n\n        const inp = estimateP98LongestInteraction();\n\n        if (inp && inp.latency !== metric.value) {\n          metric.value = inp.latency;\n          metric.entries = inp.entries;\n          report();\n        }\n      });\n    };\n\n    const po = observe('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold != null ? opts.durationThreshold : DEFAULT_DURATION_THRESHOLD,\n    });\n\n    report = bindReporter(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // Also observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      po.observe({ type: 'first-input', buffered: true });\n\n      onHidden(() => {\n        handleEntries(po.takeRecords() );\n        report(true);\n      });\n    }\n  });\n};\n\nexport { INPThresholds, onINP };\n//# sourceMappingURL=getINP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\nimport { whenIdle } from './lib/whenIdle.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nconst LCPThresholds = [2500, 4000];\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nconst onLCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('LCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      // If reportAllChanges is set then call this function for each entry,\n      // otherwise only consider the last one.\n      if (!opts.reportAllChanges) {\n        // eslint-disable-next-line no-param-reassign\n        entries = entries.slice(-1);\n      }\n\n      entries.forEach(entry => {\n        // Only report if the page wasn't hidden prior to LCP.\n        if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was pre-rendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n          metric.entries = [entry];\n          report();\n        }\n      });\n    };\n\n    const po = observe('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      const stopListening = runOnce(() => {\n        if (!reportedMetricIDs[metric.id]) {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n          reportedMetricIDs[metric.id] = true;\n          report(true);\n        }\n      });\n\n      // Stop listening after input. Note: while scrolling is an input that\n      // stops LCP observation, it's unreliable since it can be programmatically\n      // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n      ['keydown', 'click'].forEach(type => {\n        // Wrap in a setTimeout so the callback is run in a separate task\n        // to avoid extending the keyboard/click handler to reduce INP impact\n        // https://github.com/GoogleChrome/web-vitals/issues/383\n        if (WINDOW.document) {\n          addEventListener(type, () => whenIdle(stopListening ), {\n            once: true,\n            capture: true,\n          });\n        }\n      });\n\n      onHidden(stopListening);\n    }\n  });\n};\n\nexport { LCPThresholds, onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getNavigationEntry } from './lib/getNavigationEntry.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nconst TTFBThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    whenActivated(() => whenReady(callback));\n  } else if (WINDOW.document && WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts = {}) => {\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navigationEntry = getNavigationEntry();\n\n    if (navigationEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navigationEntry.responseStart - getActivationStart(), 0);\n\n      metric.entries = [navigationEntry];\n      report(true);\n    }\n  });\n};\n\nexport { TTFBThresholds, onTTFB };\n//# sourceMappingURL=onTTFB.js.map\n","import { logger, getFunctionName } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onINP } from './web-vitals/getINP.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\nimport { onTTFB } from './web-vitals/onTTFB.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return onLCP(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb() {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Check if a PerformanceEntry is a PerformanceEventTiming by checking for the `duration` property.\n */\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler, addTtfbInstrumentationHandler, isPerformanceEventTiming };\n//# sourceMappingURL=instrument.js.map\n","'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","import { getClient } from '../currentScopes.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  // eslint-disable-next-line deprecation/deprecation\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"isAPIRoute\", {\n    enumerable: true,\n    get: function() {\n        return isAPIRoute;\n    }\n});\nfunction isAPIRoute(value) {\n    return value === '/api' || Boolean(value == null ? void 0 : value.startsWith('/api/'));\n}\n\n//# sourceMappingURL=is-api-route.js.map","import { addNonEnumerableProperty } from '../utils-hoist/object.js';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _setSpanForScope(scope, span) {\n  if (span) {\n    addNonEnumerableProperty(scope , SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope )[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _getSpanForScope(scope) {\n  return scope[SCOPE_SPAN_FIELD];\n}\n\nexport { _getSpanForScope, _setSpanForScope };\n//# sourceMappingURL=spanOnScope.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  // TODO(v9): Remove this custom check, it is pretty old and likely not needed anymore\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { addHandler, maybeInstrument, supportsHistory, triggerHandlers, fill } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nexport { addHistoryInstrumentationHandler };\n//# sourceMappingURL=history.js.map\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\n/**\n * @deprecated Use `sortSortableRoutes` or `sortPages` instead.\n */\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\n/**\n * @deprecated Use `sortSortableRouteObjects` or `sortPageObjects` instead.\n */\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host = '', port = '', lastPath = ''] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { Scope } from './scope.js';\nimport { getGlobalSingleton } from './utils-hoist/worldwide.js';\n\n/** Get the default current scope. */\nfunction getDefaultCurrentScope() {\n  return getGlobalSingleton('defaultCurrentScope', () => new Scope());\n}\n\n/** Get the default isolation scope. */\nfunction getDefaultIsolationScope() {\n  return getGlobalSingleton('defaultIsolationScope', () => new Scope());\n}\n\nexport { getDefaultCurrentScope, getDefaultIsolationScope };\n//# sourceMappingURL=defaultScopes.js.map\n","import { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes.js';\nimport { Scope } from '../scope.js';\nimport { isThenable } from '../utils-hoist/is.js';\nimport { getMainCarrier, getSentryCarrier } from '../carrier.js';\n\n/**\n * This is an object that holds a stack of scopes.\n */\nclass AsyncContextStack {\n\n   constructor(scope, isolationScope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n   withScope(callback) {\n    const scope = this._pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1] ;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n   _pushScope() {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n   _popScope() {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack() {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope(callback) {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope(scope, callback) {\n  const stack = getAsyncContextStack() ;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope(callback) {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nfunction getStackAsyncContextStrategy() {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: (_isolationScope, callback) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n\nexport { AsyncContextStack, getStackAsyncContextStrategy };\n//# sourceMappingURL=stackStrategy.js.map\n","import { getMainCarrier, getSentryCarrier } from '../carrier.js';\nimport { getStackAsyncContextStrategy } from './stackStrategy.js';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nfunction getAsyncContextStrategy(carrier) {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n\nexport { getAsyncContextStrategy, setAsyncContextStrategy };\n//# sourceMappingURL=index.js.map\n","import { baggageHeaderToDynamicSamplingContext } from './baggage.js';\nimport { generateTraceId, generateSpanId } from './propagationContext.js';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  if (!traceparentData || !traceparentData.traceId) {\n    return { traceId: generateTraceId(), spanId: generateSpanId() };\n  }\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData;\n\n  const virtualSpanId = generateSpanId();\n\n  return {\n    traceId,\n    parentSpanId,\n    spanId: virtualSpanId,\n    sampled: parentSampled,\n    dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = generateTraceId(),\n  spanId = generateSpanId(),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, propagationContextFromHeaders };\n//# sourceMappingURL=tracing.js.map\n","import { getAsyncContextStrategy } from '../asyncContext/index.js';\nimport { getMainCarrier } from '../carrier.js';\nimport { getCurrentScope } from '../currentScopes.js';\nimport { getMetricSummaryJsonForSpan, updateMetricSummaryOnSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME } from '../semanticAttributes.js';\nimport { SPAN_STATUS_UNSET, SPAN_STATUS_OK } from '../tracing/spanstatus.js';\nimport { consoleSandbox } from '../utils-hoist/logger.js';\nimport { dropUndefinedKeys, addNonEnumerableProperty } from '../utils-hoist/object.js';\nimport { generateSpanId } from '../utils-hoist/propagationContext.js';\nimport { timestampInSeconds } from '../utils-hoist/time.js';\nimport { generateSentryTraceHeader } from '../utils-hoist/tracing.js';\nimport { _getSpanForScope } from './spanOnScope.js';\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n// todo(v9): Remove this once we've stopped dropping spans via `beforeSendSpan`\nlet hasShownSpanDropWarning = false;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nfunction spanToTransactionTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n  });\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId, traceId: trace_id, isRemote } = span.spanContext();\n\n  // If the span is remote, we use a random/virtual span as span_id to the trace context,\n  // and the remote span as parent_span_id\n  const parent_span_id = isRemote ? spanId : spanToJSON(span).parent_span_id;\n  const span_id = isRemote ? generateSpanId() : spanId;\n\n  return dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nfunction spanToJSON(span) {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  try {\n    const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n    // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n    if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n      const { attributes, startTime, name, endTime, parentSpanId, status } = span;\n\n      return dropUndefinedKeys({\n        span_id,\n        trace_id,\n        data: attributes,\n        description: name,\n        parent_span_id: parentSpanId,\n        start_timestamp: spanTimeInputToSeconds(startTime),\n        // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n        timestamp: spanTimeInputToSeconds(endTime) || undefined,\n        status: getStatusMessage(status),\n        op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n        origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n        _metrics_summary: getMetricSummaryJsonForSpan(span),\n      });\n    }\n\n    // Finally, at least we have `spanContext()`....\n    return {\n      span_id,\n      trace_id,\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span) {\n  const castSpan = span ;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nfunction getStatusMessage(status) {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\n/**\n * Adds an opaque child span reference to a span.\n */\nfunction addChildSpanToSpan(span, childSpan) {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan , ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nfunction removeChildSpanFromSpan(span, childSpan) {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nfunction getSpanDescendants(span) {\n  const resultSet = new Set();\n\n  function addSpanChildren(span) {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nfunction getRootSpan(span) {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nfunction updateMetricSummaryOnActiveSpan(\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const span = getActiveSpan();\n  if (span) {\n    updateMetricSummaryOnSpan(span, metricType, sanitizedName, value, unit, tags, bucketKey);\n  }\n}\n\n/**\n * Logs a warning once if `beforeSendSpan` is used to drop spans.\n *\n * todo(v9): Remove this once we've stopped dropping spans via `beforeSendSpan`.\n */\nfunction showSpanDropWarning() {\n  if (!hasShownSpanDropWarning) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Sentry] Deprecation warning: Returning null from `beforeSendSpan` will be disallowed from SDK version 9.0.0 onwards. The callback will only support mutating spans. To drop certain spans, configure the respective integrations directly.',\n      );\n    });\n    hasShownSpanDropWarning = true;\n  }\n}\n\n/**\n * Updates the name of the given span and ensures that the span name is not\n * overwritten by the Sentry SDK.\n *\n * Use this function instead of `span.updateName()` if you want to make sure that\n * your name is kept. For some spans, for example root `http.server` spans the\n * Sentry SDK would otherwise overwrite the span name with a high-quality name\n * it infers when the span ends.\n *\n * Use this function in server code or when your span is started on the server\n * and on the client (browser). If you only update a span name on the client,\n * you can also use `span.updateName()` the SDK does not overwrite the name.\n *\n * @param span - The span to update the name of.\n * @param name - The name to set on the span.\n */\nfunction updateSpanName(span, name) {\n  span.updateName(name);\n  span.setAttributes({\n    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n    [SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME]: name,\n  });\n}\n\nexport { TRACE_FLAG_NONE, TRACE_FLAG_SAMPLED, addChildSpanToSpan, getActiveSpan, getRootSpan, getSpanDescendants, getStatusMessage, removeChildSpanFromSpan, showSpanDropWarning, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader, spanToTransactionTraceContext, updateMetricSummaryOnActiveSpan, updateSpanName };\n//# sourceMappingURL=spanUtils.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { isThenable } from './utils-hoist/is.js';\nimport { logger } from './utils-hoist/logger.js';\nimport { SyncPromise } from './utils-hoist/syncpromise.js';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n","import { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext.js';\nimport { dropUndefinedKeys } from '../utils-hoist/object.js';\nimport { merge } from './merge.js';\nimport { spanToTraceContext, getRootSpan, spanToJSON } from './spanUtils.js';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n\n  data.sdkProcessingMetadata = merge(data.sdkProcessingMetadata, sdkProcessingMetadata, 2);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  data[prop] = merge(data[prop], mergeVal, 1);\n}\n\nfunction applyDataToEvent(event, data) {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint\n    ? Array.isArray(event.fingerprint)\n      ? event.fingerprint\n      : [event.fingerprint]\n    : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\nexport { applyScopeDataToEvent, mergeAndOverwriteScopeData, mergeScopeData };\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n","import { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getGlobalScope } from '../currentScopes.js';\nimport { notifyEventProcessors } from '../eventProcessors.js';\nimport { Scope } from '../scope.js';\nimport { getFilenameToDebugIdMap } from '../utils-hoist/debug-ids.js';\nimport { uuid4, addExceptionMechanism } from '../utils-hoist/misc.js';\nimport { normalize } from '../utils-hoist/normalize.js';\nimport { truncate } from '../utils-hoist/string.js';\nimport { dateTimestampInSeconds } from '../utils-hoist/time.js';\nimport { mergeScopeData, applyScopeDataToEvent } from './applyScopeDataToEvent.js';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n * Enhances event using the client configuration.\n * It takes care of all \"static\" values like environment, release and `dist`,\n * as well as truncating overly long values.\n *\n * Only exported for tests.\n *\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  // empty strings do not make sense for environment, release, and dist\n  // so we handle them the same as if they were not provided\n  event.environment = event.environment || environment || DEFAULT_ENVIRONMENT;\n\n  if (!event.release && release) {\n    event.release = release;\n  }\n\n  if (!event.dist && dist) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (filenameDebugIdMap && frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  // event.contexts.flags (FeatureFlagContext) stores context for our feature\n  // flag integrations. It has a greater nesting depth than our other typed\n  // Contexts, so we re-normalize with a fixed depth of 3 here. We do not want\n  // to skip this in case of conflicting, user-provided context.\n  if (event.contexts && event.contexts.flags && normalized.contexts) {\n    normalized.contexts.flags = normalize(event.contexts.flags, 3, maxBreadth);\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(\n  scope,\n  captureContext,\n) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\nexport { applyClientOptions, applyDebugIds, applyDebugMeta, parseEventHintOrCaptureContext, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // This comment is used to identify this line in the CDN bundle build step and replace this with \"return 'cdn';\"\n  /* __SENTRY_SDK_SOURCE__ */ return 'npm';\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","export { getSortedRoutes, getSortedRouteObjects } from './sorted-routes'\nexport { isDynamicRoute } from './is-dynamic'\n","// This is a magic string replaced by rollup\n\nconst SDK_VERSION = \"8.55.0\" ;\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n","// tslint:disable:no-console\nimport type { ComponentType } from 'react'\nimport type { DomainLocale } from '../../../server/config'\nimport type { MittEmitter } from '../mitt'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RouterEvent } from '../../../client/router'\nimport type { StyleSheetTuple } from '../../../client/page-loader'\nimport type { UrlObject } from 'url'\nimport type PageLoader from '../../../client/page-loader'\nimport type { AppContextType, NextPageContext, NEXT_DATA } from '../utils'\nimport { removeTrailingSlash } from './utils/remove-trailing-slash'\nimport {\n  getClientBuildManifest,\n  isAssetError,\n  markAssetError,\n} from '../../../client/route-loader'\nimport { handleClientScriptLoad } from '../../../client/script'\nimport isError, { getProperError } from '../../../lib/is-error'\nimport { denormalizePagePath } from '../page-path/denormalize-page-path'\nimport { normalizeLocalePath } from '../i18n/normalize-locale-path'\nimport mitt from '../mitt'\nimport { getLocationOrigin, getURL, loadGetInitialProps, ST } from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { parseRelativeUrl } from './utils/parse-relative-url'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\nimport { formatWithValidation } from './utils/format-url'\nimport { detectDomainLocale } from '../../../client/detect-domain-locale'\nimport { parsePath } from './utils/parse-path'\nimport { addLocale } from '../../../client/add-locale'\nimport { removeLocale } from '../../../client/remove-locale'\nimport { removeBasePath } from '../../../client/remove-base-path'\nimport { addBasePath } from '../../../client/add-base-path'\nimport { hasBasePath } from '../../../client/has-base-path'\nimport { resolveHref } from '../../../client/resolve-href'\nimport { isAPIRoute } from '../../../lib/is-api-route'\nimport { getNextPathnameInfo } from './utils/get-next-pathname-info'\nimport { formatNextPathnameInfo } from './utils/format-next-pathname-info'\nimport { compareRouterStates } from './utils/compare-states'\nimport { isLocalURL } from './utils/is-local-url'\nimport { isBot } from './utils/is-bot'\nimport { omit } from './utils/omit'\nimport { interpolateAs } from './utils/interpolate-as'\nimport { disableSmoothScrollDuringRouteTransition } from './utils/disable-smooth-scroll'\nimport type { Params } from '../../../server/request/params'\nimport { MATCHED_PATH_HEADER } from '../../../lib/constants'\n\nlet resolveRewrites: typeof import('./utils/resolve-rewrites').default\nif (process.env.__NEXT_HAS_REWRITES) {\n  resolveRewrites = (\n    require('./utils/resolve-rewrites') as typeof import('./utils/resolve-rewrites')\n  ).default\n}\n\ndeclare global {\n  interface Window {\n    /* prod */\n    __NEXT_DATA__: NEXT_DATA\n  }\n}\n\ninterface RouteProperties {\n  shallow: boolean\n}\n\ninterface TransitionOptions {\n  shallow?: boolean\n  locale?: string | false\n  scroll?: boolean\n  unstable_skipClientCache?: boolean\n}\n\ninterface NextHistoryState {\n  url: string\n  as: string\n  options: TransitionOptions\n}\n\nexport type HistoryState =\n  | null\n  | { __NA: true; __N?: false }\n  | { __N: false; __NA?: false }\n  | ({ __NA?: false; __N: true; key: string } & NextHistoryState)\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true,\n  })\n}\n\ninterface MiddlewareEffectParams<T extends FetchDataOutput> {\n  fetchData?: () => Promise<T>\n  locale?: string\n  asPath: string\n  router: Router\n}\n\nexport async function matchesMiddleware<T extends FetchDataOutput>(\n  options: MiddlewareEffectParams<T>\n): Promise<boolean> {\n  const matchers = await Promise.resolve(\n    options.router.pageLoader.getMiddleware()\n  )\n  if (!matchers) return false\n\n  const { pathname: asPathname } = parsePath(options.asPath)\n  // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`\n  const cleanedAs = hasBasePath(asPathname)\n    ? removeBasePath(asPathname)\n    : asPathname\n  const asWithBasePathAndLocale = addBasePath(\n    addLocale(cleanedAs, options.locale)\n  )\n\n  // Check only path match on client. Matching \"has\" should be done on server\n  // where we can access more info such as headers, HttpOnly cookie, etc.\n  return matchers.some((m) =>\n    new RegExp(m.regexp).test(asWithBasePathAndLocale)\n  )\n}\n\nfunction stripOrigin(url: string) {\n  const origin = getLocationOrigin()\n\n  return url.startsWith(origin) ? url.substring(origin.length) : url\n}\n\nfunction prepareUrlAs(router: NextRouter, url: Url, as?: Url) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  let [resolvedHref, resolvedAs] = resolveHref(router, url, true)\n  const origin = getLocationOrigin()\n  const hrefWasAbsolute = resolvedHref.startsWith(origin)\n  const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin)\n\n  resolvedHref = stripOrigin(resolvedHref)\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs\n\n  const preparedUrl = hrefWasAbsolute ? resolvedHref : addBasePath(resolvedHref)\n  const preparedAs = as\n    ? stripOrigin(resolveHref(router, as))\n    : resolvedAs || resolvedHref\n\n  return {\n    url: preparedUrl,\n    as: asWasAbsolute ? preparedAs : addBasePath(preparedAs),\n  }\n}\n\nfunction resolveDynamicRoute(pathname: string, pages: string[]) {\n  const cleanPathname = removeTrailingSlash(denormalizePagePath(pathname))\n  if (cleanPathname === '/404' || cleanPathname === '/_error') {\n    return pathname\n  }\n\n  // handle resolving href for dynamic routes\n  if (!pages.includes(cleanPathname)) {\n    // eslint-disable-next-line array-callback-return\n    pages.some((page) => {\n      if (isDynamicRoute(page) && getRouteRegex(page).re.test(cleanPathname)) {\n        pathname = page\n        return true\n      }\n    })\n  }\n  return removeTrailingSlash(pathname)\n}\n\nfunction getMiddlewareData<T extends FetchDataOutput>(\n  source: string,\n  response: Response,\n  options: MiddlewareEffectParams<T>\n) {\n  const nextConfig = {\n    basePath: options.router.basePath,\n    i18n: { locales: options.router.locales },\n    trailingSlash: Boolean(process.env.__NEXT_TRAILING_SLASH),\n  }\n  const rewriteHeader = response.headers.get('x-nextjs-rewrite')\n\n  let rewriteTarget =\n    rewriteHeader || response.headers.get('x-nextjs-matched-path')\n\n  const matchedPath = response.headers.get(MATCHED_PATH_HEADER)\n\n  if (\n    matchedPath &&\n    !rewriteTarget &&\n    !matchedPath.includes('__next_data_catchall') &&\n    !matchedPath.includes('/_error') &&\n    !matchedPath.includes('/404')\n  ) {\n    // leverage x-matched-path to detect next.config.js rewrites\n    rewriteTarget = matchedPath\n  }\n\n  if (rewriteTarget) {\n    if (\n      rewriteTarget.startsWith('/') ||\n      process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE\n    ) {\n      const parsedRewriteTarget = parseRelativeUrl(rewriteTarget)\n      const pathnameInfo = getNextPathnameInfo(parsedRewriteTarget.pathname, {\n        nextConfig,\n        parseData: true,\n      })\n\n      let fsPathname = removeTrailingSlash(pathnameInfo.pathname)\n      return Promise.all([\n        options.router.pageLoader.getPageList(),\n        getClientBuildManifest(),\n      ]).then(([pages, { __rewrites: rewrites }]: any) => {\n        let as = addLocale(pathnameInfo.pathname, pathnameInfo.locale)\n\n        if (\n          isDynamicRoute(as) ||\n          (!rewriteHeader &&\n            pages.includes(\n              normalizeLocalePath(removeBasePath(as), options.router.locales)\n                .pathname\n            ))\n        ) {\n          const parsedSource = getNextPathnameInfo(\n            parseRelativeUrl(source).pathname,\n            {\n              nextConfig: process.env.__NEXT_HAS_REWRITES\n                ? undefined\n                : nextConfig,\n              parseData: true,\n            }\n          )\n\n          as = addBasePath(parsedSource.pathname)\n          parsedRewriteTarget.pathname = as\n        }\n\n        if (process.env.__NEXT_HAS_REWRITES) {\n          const result = resolveRewrites(\n            as,\n            pages,\n            rewrites,\n            parsedRewriteTarget.query,\n            (path: string) => resolveDynamicRoute(path, pages),\n            options.router.locales\n          )\n\n          if (result.matchedPage) {\n            parsedRewriteTarget.pathname = result.parsedAs.pathname\n            as = parsedRewriteTarget.pathname\n            Object.assign(parsedRewriteTarget.query, result.parsedAs.query)\n          }\n        } else if (!pages.includes(fsPathname)) {\n          const resolvedPathname = resolveDynamicRoute(fsPathname, pages)\n\n          if (resolvedPathname !== fsPathname) {\n            fsPathname = resolvedPathname\n          }\n        }\n\n        const resolvedHref = !pages.includes(fsPathname)\n          ? resolveDynamicRoute(\n              normalizeLocalePath(\n                removeBasePath(parsedRewriteTarget.pathname),\n                options.router.locales\n              ).pathname,\n              pages\n            )\n          : fsPathname\n\n        if (isDynamicRoute(resolvedHref)) {\n          const matches = getRouteMatcher(getRouteRegex(resolvedHref))(as)\n          Object.assign(parsedRewriteTarget.query, matches || {})\n        }\n\n        return {\n          type: 'rewrite' as const,\n          parsedAs: parsedRewriteTarget,\n          resolvedHref,\n        }\n      })\n    }\n    const src = parsePath(source)\n    const pathname = formatNextPathnameInfo({\n      ...getNextPathnameInfo(src.pathname, { nextConfig, parseData: true }),\n      defaultLocale: options.router.defaultLocale,\n      buildId: '',\n    })\n\n    return Promise.resolve({\n      type: 'redirect-external' as const,\n      destination: `${pathname}${src.query}${src.hash}`,\n    })\n  }\n\n  const redirectTarget = response.headers.get('x-nextjs-redirect')\n\n  if (redirectTarget) {\n    if (redirectTarget.startsWith('/')) {\n      const src = parsePath(redirectTarget)\n      const pathname = formatNextPathnameInfo({\n        ...getNextPathnameInfo(src.pathname, { nextConfig, parseData: true }),\n        defaultLocale: options.router.defaultLocale,\n        buildId: '',\n      })\n\n      return Promise.resolve({\n        type: 'redirect-internal' as const,\n        newAs: `${pathname}${src.query}${src.hash}`,\n        newUrl: `${pathname}${src.query}${src.hash}`,\n      })\n    }\n\n    return Promise.resolve({\n      type: 'redirect-external' as const,\n      destination: redirectTarget,\n    })\n  }\n\n  return Promise.resolve({ type: 'next' as const })\n}\n\ninterface WithMiddlewareEffectsOutput extends FetchDataOutput {\n  effect: Awaited<ReturnType<typeof getMiddlewareData>>\n}\n\nasync function withMiddlewareEffects<T extends FetchDataOutput>(\n  options: MiddlewareEffectParams<T>\n): Promise<WithMiddlewareEffectsOutput | null> {\n  const matches = await matchesMiddleware(options)\n  if (!matches || !options.fetchData) {\n    return null\n  }\n\n  const data = await options.fetchData()\n\n  const effect = await getMiddlewareData(data.dataHref, data.response, options)\n\n  return {\n    dataHref: data.dataHref,\n    json: data.json,\n    response: data.response,\n    text: data.text,\n    cacheKey: data.cacheKey,\n    effect,\n  }\n}\n\nexport type Url = UrlObject | string\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  locale?: string | undefined\n  locales?: readonly string[] | undefined\n  defaultLocale?: string | undefined\n  domainLocales?: readonly DomainLocale[] | undefined\n  isLocaleDomain: boolean\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'forward'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n    | 'isReady'\n    | 'isPreview'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n  locale?: string | false\n  unstable_skipClientCache?: boolean\n}\n\nexport type PrivateRouteInfo =\n  | (Omit<CompletePrivateRouteInfo, 'styleSheets'> & { initial: true })\n  | CompletePrivateRouteInfo\n\nexport type CompletePrivateRouteInfo = {\n  Component: ComponentType\n  styleSheets: StyleSheetTuple[]\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: Record<string, any>\n  err?: Error\n  error?: any\n  route?: string\n  resolvedAs?: string\n  query?: ParsedUrlQuery\n}\n\nexport type AppProps = Pick<CompletePrivateRouteInfo, 'Component' | 'err'> & {\n  router: Router\n} & Record<string, any>\nexport type AppComponent = ComponentType<AppProps>\n\ntype Subscription = (\n  data: PrivateRouteInfo,\n  App: AppComponent,\n  resetScroll: { x: number; y: number } | null\n) => Promise<void>\n\ntype BeforePopStateCallback = (state: NextHistoryState) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nconst manualScrollRestoration =\n  process.env.__NEXT_SCROLL_RESTORATION &&\n  typeof window !== 'undefined' &&\n  'scrollRestoration' in window.history &&\n  !!(function () {\n    try {\n      let v = '__next'\n      // eslint-disable-next-line no-sequences\n      return sessionStorage.setItem(v, v), sessionStorage.removeItem(v), true\n    } catch (n) {}\n  })()\n\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND')\n\nfunction fetchRetry(\n  url: string,\n  attempts: number,\n  options: Pick<RequestInit, 'method' | 'headers'>\n): Promise<Response> {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n    method: options.method || 'GET',\n    headers: Object.assign({}, options.headers, {\n      'x-nextjs-data': '1',\n    }),\n  }).then((response) => {\n    return !response.ok && attempts > 1 && response.status >= 500\n      ? fetchRetry(url, attempts - 1, options)\n      : response\n  })\n}\n\ninterface FetchDataOutput {\n  dataHref: string\n  json: Record<string, any> | null\n  response: Response\n  text: string\n  cacheKey: string\n}\n\ninterface FetchNextDataParams {\n  dataHref: string\n  isServerRender: boolean\n  parseJSON: boolean | undefined\n  hasMiddleware?: boolean\n  inflightCache: NextDataCache\n  persistCache: boolean\n  isPrefetch: boolean\n  isBackground?: boolean\n  unstable_skipClientCache?: boolean\n}\n\nfunction tryToParseAsJSON(text: string) {\n  try {\n    return JSON.parse(text)\n  } catch (error) {\n    return null\n  }\n}\n\nfunction fetchNextData({\n  dataHref,\n  inflightCache,\n  isPrefetch,\n  hasMiddleware,\n  isServerRender,\n  parseJSON,\n  persistCache,\n  isBackground,\n  unstable_skipClientCache,\n}: FetchNextDataParams): Promise<FetchDataOutput> {\n  const { href: cacheKey } = new URL(dataHref, window.location.href)\n  const getData = (params?: { method?: 'HEAD' | 'GET' }) =>\n    fetchRetry(dataHref, isServerRender ? 3 : 1, {\n      headers: Object.assign(\n        {} as HeadersInit,\n        isPrefetch ? { purpose: 'prefetch' } : {},\n        isPrefetch && hasMiddleware ? { 'x-middleware-prefetch': '1' } : {},\n        process.env.NEXT_DEPLOYMENT_ID\n          ? { 'x-deployment-id': process.env.NEXT_DEPLOYMENT_ID }\n          : {}\n      ),\n      method: params?.method ?? 'GET',\n    })\n      .then((response) => {\n        if (response.ok && params?.method === 'HEAD') {\n          return { dataHref, response, text: '', json: {}, cacheKey }\n        }\n\n        return response.text().then((text) => {\n          if (!response.ok) {\n            /**\n             * When the data response is a redirect because of a middleware\n             * we do not consider it an error. The headers must bring the\n             * mapped location.\n             * TODO: Change the status code in the handler.\n             */\n            if (\n              hasMiddleware &&\n              [301, 302, 307, 308].includes(response.status)\n            ) {\n              return { dataHref, response, text, json: {}, cacheKey }\n            }\n\n            if (response.status === 404) {\n              if (tryToParseAsJSON(text)?.notFound) {\n                return {\n                  dataHref,\n                  json: { notFound: SSG_DATA_NOT_FOUND },\n                  response,\n                  text,\n                  cacheKey,\n                }\n              }\n            }\n\n            const error = new Error(`Failed to load static props`)\n\n            /**\n             * We should only trigger a server-side transition if this was\n             * caused on a client-side transition. Otherwise, we'd get into\n             * an infinite loop.\n             */\n            if (!isServerRender) {\n              markAssetError(error)\n            }\n\n            throw error\n          }\n\n          return {\n            dataHref,\n            json: parseJSON ? tryToParseAsJSON(text) : null,\n            response,\n            text,\n            cacheKey,\n          }\n        })\n      })\n      .then((data) => {\n        if (\n          !persistCache ||\n          process.env.NODE_ENV !== 'production' ||\n          data.response.headers.get('x-middleware-cache') === 'no-cache'\n        ) {\n          delete inflightCache[cacheKey]\n        }\n        return data\n      })\n      .catch((err) => {\n        if (!unstable_skipClientCache) {\n          delete inflightCache[cacheKey]\n        }\n        if (\n          // chrome\n          err.message === 'Failed to fetch' ||\n          // firefox\n          err.message === 'NetworkError when attempting to fetch resource.' ||\n          // safari\n          err.message === 'Load failed'\n        ) {\n          markAssetError(err)\n        }\n        throw err\n      })\n\n  // when skipping client cache we wait to update\n  // inflight cache until successful data response\n  // this allows racing click event with fetching newer data\n  // without blocking navigation when stale data is available\n  if (unstable_skipClientCache && persistCache) {\n    return getData({}).then((data) => {\n      if (data.response.headers.get('x-middleware-cache') !== 'no-cache') {\n        // only update cache if not marked as no-cache\n        inflightCache[cacheKey] = Promise.resolve(data)\n      }\n\n      return data\n    })\n  }\n\n  if (inflightCache[cacheKey] !== undefined) {\n    return inflightCache[cacheKey]\n  }\n  return (inflightCache[cacheKey] = getData(\n    isBackground ? { method: 'HEAD' } : {}\n  ))\n}\n\ninterface NextDataCache {\n  [asPath: string]: Promise<FetchDataOutput>\n}\n\nexport function createKey() {\n  return Math.random().toString(36).slice(2, 10)\n}\n\nfunction handleHardNavigation({\n  url,\n  router,\n}: {\n  url: string\n  router: Router\n}) {\n  // ensure we don't trigger a hard navigation to the same\n  // URL as this can end up with an infinite refresh\n  if (url === addBasePath(addLocale(router.asPath, router.locale))) {\n    throw new Error(\n      `Invariant: attempted to hard navigate to the same URL ${url} ${location.href}`\n    )\n  }\n  window.location.href = url\n}\n\nconst getCancelledHandler = ({\n  route,\n  router,\n}: {\n  route: string\n  router: Router\n}) => {\n  let cancelled = false\n  const cancel = (router.clc = () => {\n    cancelled = true\n  })\n\n  const handleCancelled = () => {\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === router.clc) {\n      router.clc = null\n    }\n  }\n  return handleCancelled\n}\n\nexport default class Router implements BaseRouter {\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: PrivateRouteInfo }\n  // Server Data Cache (full data requests)\n  sdc: NextDataCache = {}\n  // Server Background Cache (HEAD requests)\n  sbc: NextDataCache = {}\n\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: PageLoader\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter<RouterEvent>\n  _wrapApp: (App: AppComponent) => any\n  isSsr: boolean\n  _inFlightRoute?: string | undefined\n  _shallow?: boolean | undefined\n  locales?: readonly string[] | undefined\n  defaultLocale?: string | undefined\n  domainLocales?: readonly DomainLocale[] | undefined\n  isReady: boolean\n  isLocaleDomain: boolean\n  isFirstPopStateEvent = true\n  _initialMatchesMiddlewarePromise: Promise<boolean>\n  // static entries filter\n  _bfl_s?: import('../../lib/bloom-filter').BloomFilter\n  // dynamic entires filter\n  _bfl_d?: import('../../lib/bloom-filter').BloomFilter\n\n  private state: Readonly<{\n    route: string\n    pathname: string\n    query: ParsedUrlQuery\n    asPath: string\n    locale: string | undefined\n    isFallback: boolean\n    isPreview: boolean\n  }>\n\n  private _key: string = createKey()\n\n  static events: MittEmitter<RouterEvent> = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      err,\n      subscription,\n      isFallback,\n      locale,\n      locales,\n      defaultLocale,\n      domainLocales,\n      isPreview,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      App: AppComponent\n      wrapApp: (WrapAppComponent: AppComponent) => any\n      err?: Error\n      isFallback: boolean\n      locale?: string\n      locales?: readonly string[]\n      defaultLocale?: string\n      domainLocales?: readonly DomainLocale[]\n      isPreview?: boolean\n    }\n  ) {\n    // represents the current component key\n    const route = removeTrailingSlash(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[route] = {\n        Component,\n        initial: true,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = {\n      Component: App as ComponentType,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ],\n    }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    const autoExportDynamic =\n      isDynamicRoute(pathname) && self.__NEXT_DATA__.autoExport\n\n    this.basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n    this.isLocaleDomain = false\n    this.isReady = !!(\n      self.__NEXT_DATA__.gssp ||\n      self.__NEXT_DATA__.gip ||\n      self.__NEXT_DATA__.isExperimentalCompile ||\n      (self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp) ||\n      (!autoExportDynamic &&\n        !self.location.search &&\n        !process.env.__NEXT_HAS_REWRITES)\n    )\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locales = locales\n      this.defaultLocale = defaultLocale\n      this.domainLocales = domainLocales\n      this.isLocaleDomain = !!detectDomainLocale(\n        domainLocales,\n        self.location.hostname\n      )\n    }\n\n    this.state = {\n      route,\n      pathname,\n      query,\n      asPath: autoExportDynamic ? pathname : as,\n      isPreview: !!isPreview,\n      locale: process.env.__NEXT_I18N_SUPPORT ? locale : undefined,\n      isFallback,\n    }\n\n    this._initialMatchesMiddlewarePromise = Promise.resolve(false)\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (!as.startsWith('//')) {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        const options: TransitionOptions = { locale }\n        const asPath = getURL()\n\n        this._initialMatchesMiddlewarePromise = matchesMiddleware({\n          router: this,\n          locale,\n          asPath,\n        }).then((matches) => {\n          // if middleware matches we leave resolving to the change function\n          // as the server needs to resolve for correct priority\n          ;(options as any)._shouldResolveHref = as !== pathname\n\n          this.changeState(\n            'replaceState',\n            matches\n              ? asPath\n              : formatWithValidation({\n                  pathname: addBasePath(pathname),\n                  query,\n                }),\n            asPath,\n            options\n          )\n          return matches\n        })\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n\n      // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual'\n        }\n      }\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    const { isFirstPopStateEvent } = this\n    this.isFirstPopStateEvent = false\n\n    const state = e.state as HistoryState\n\n    if (!state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname: addBasePath(pathname), query }),\n        getURL()\n      )\n      return\n    }\n\n    // __NA is used to identify if the history entry can be handled by the app-router.\n    if (state.__NA) {\n      window.location.reload()\n      return\n    }\n\n    if (!state.__N) {\n      return\n    }\n\n    // Safari fires popstateevent when reopening the browser.\n    if (\n      isFirstPopStateEvent &&\n      this.locale === state.options.locale &&\n      state.as === this.asPath\n    ) {\n      return\n    }\n\n    let forcedScroll: { x: number; y: number } | undefined\n    const { url, as, options, key } = state\n    if (process.env.__NEXT_SCROLL_RESTORATION) {\n      if (manualScrollRestoration) {\n        if (this._key !== key) {\n          // Snapshot current scroll position:\n          try {\n            sessionStorage.setItem(\n              '__next_scroll_' + this._key,\n              JSON.stringify({ x: self.pageXOffset, y: self.pageYOffset })\n            )\n          } catch {}\n\n          // Restore old scroll position:\n          try {\n            const v = sessionStorage.getItem('__next_scroll_' + key)\n            forcedScroll = JSON.parse(v!)\n          } catch {\n            forcedScroll = { x: 0, y: 0 }\n          }\n        }\n      }\n    }\n    this._key = key\n\n    const { pathname } = parseRelativeUrl(url)\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (\n      this.isSsr &&\n      as === addBasePath(this.asPath) &&\n      pathname === addBasePath(this.pathname)\n    ) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(state)) {\n      return\n    }\n\n    this.change(\n      'replaceState',\n      url,\n      as,\n      Object.assign<{}, TransitionOptions, TransitionOptions>({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale,\n        // @ts-ignore internal value not exposed on types\n        _h: 0,\n      }),\n      forcedScroll\n    )\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Go forward in history\n   */\n  forward() {\n    window.history.forward()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as?: Url, options: TransitionOptions = {}) {\n    if (process.env.__NEXT_SCROLL_RESTORATION) {\n      // TODO: remove in the future when we update history before route change\n      // is complete, as the popstate event should handle this capture.\n      if (manualScrollRestoration) {\n        try {\n          // Snapshot scroll position right before navigating to a new page:\n          sessionStorage.setItem(\n            '__next_scroll_' + this._key,\n            JSON.stringify({ x: self.pageXOffset, y: self.pageYOffset })\n          )\n        } catch {}\n      }\n    }\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as?: Url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('replaceState', url, as, options)\n  }\n\n  async _bfl(\n    as: string,\n    resolvedAs?: string,\n    locale?: string | false,\n    skipNavigate?: boolean\n  ) {\n    if (process.env.__NEXT_CLIENT_ROUTER_FILTER_ENABLED) {\n      if (!this._bfl_s && !this._bfl_d) {\n        const { BloomFilter } =\n          require('../../lib/bloom-filter') as typeof import('../../lib/bloom-filter')\n\n        type Filter = ReturnType<\n          import('../../lib/bloom-filter').BloomFilter['export']\n        >\n        let staticFilterData: Filter | undefined\n        let dynamicFilterData: Filter | undefined\n\n        try {\n          ;({\n            __routerFilterStatic: staticFilterData,\n            __routerFilterDynamic: dynamicFilterData,\n          } = (await getClientBuildManifest()) as any as {\n            __routerFilterStatic?: Filter\n            __routerFilterDynamic?: Filter\n          })\n        } catch (err) {\n          // failed to load build manifest hard navigate\n          // to be safe\n          console.error(err)\n          if (skipNavigate) {\n            return true\n          }\n          handleHardNavigation({\n            url: addBasePath(\n              addLocale(as, locale || this.locale, this.defaultLocale)\n            ),\n            router: this,\n          })\n          return new Promise(() => {})\n        }\n\n        const routerFilterSValue: Filter | false = process.env\n          .__NEXT_CLIENT_ROUTER_S_FILTER as any\n\n        if (!staticFilterData && routerFilterSValue) {\n          staticFilterData = routerFilterSValue ? routerFilterSValue : undefined\n        }\n\n        const routerFilterDValue: Filter | false = process.env\n          .__NEXT_CLIENT_ROUTER_D_FILTER as any\n\n        if (!dynamicFilterData && routerFilterDValue) {\n          dynamicFilterData = routerFilterDValue\n            ? routerFilterDValue\n            : undefined\n        }\n\n        if (staticFilterData?.numHashes) {\n          this._bfl_s = new BloomFilter(\n            staticFilterData.numItems,\n            staticFilterData.errorRate\n          )\n          this._bfl_s.import(staticFilterData)\n        }\n\n        if (dynamicFilterData?.numHashes) {\n          this._bfl_d = new BloomFilter(\n            dynamicFilterData.numItems,\n            dynamicFilterData.errorRate\n          )\n          this._bfl_d.import(dynamicFilterData)\n        }\n      }\n\n      let matchesBflStatic = false\n      let matchesBflDynamic = false\n      const pathsToCheck: Array<{ as?: string; allowMatchCurrent?: boolean }> =\n        [{ as }, { as: resolvedAs }]\n\n      for (const { as: curAs, allowMatchCurrent } of pathsToCheck) {\n        if (curAs) {\n          const asNoSlash = removeTrailingSlash(\n            new URL(curAs, 'http://n').pathname\n          )\n          const asNoSlashLocale = addBasePath(\n            addLocale(asNoSlash, locale || this.locale)\n          )\n\n          if (\n            allowMatchCurrent ||\n            asNoSlash !==\n              removeTrailingSlash(new URL(this.asPath, 'http://n').pathname)\n          ) {\n            matchesBflStatic =\n              matchesBflStatic ||\n              !!this._bfl_s?.contains(asNoSlash) ||\n              !!this._bfl_s?.contains(asNoSlashLocale)\n\n            for (const normalizedAS of [asNoSlash, asNoSlashLocale]) {\n              // if any sub-path of as matches a dynamic filter path\n              // it should be hard navigated\n              const curAsParts = normalizedAS.split('/')\n              for (\n                let i = 0;\n                !matchesBflDynamic && i < curAsParts.length + 1;\n                i++\n              ) {\n                const currentPart = curAsParts.slice(0, i).join('/')\n                if (currentPart && this._bfl_d?.contains(currentPart)) {\n                  matchesBflDynamic = true\n                  break\n                }\n              }\n            }\n\n            // if the client router filter is matched then we trigger\n            // a hard navigation\n            if (matchesBflStatic || matchesBflDynamic) {\n              if (skipNavigate) {\n                return true\n              }\n              handleHardNavigation({\n                url: addBasePath(\n                  addLocale(as, locale || this.locale, this.defaultLocale)\n                ),\n                router: this,\n              })\n              return new Promise(() => {})\n            }\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  private async change(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions,\n    forcedScroll?: { x: number; y: number }\n  ): Promise<boolean> {\n    if (!isLocalURL(url)) {\n      handleHardNavigation({ url, router: this })\n      return false\n    }\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n    const isQueryUpdating = (options as any)._h === 1\n\n    if (!isQueryUpdating && !options.shallow) {\n      await this._bfl(as, undefined, options.locale)\n    }\n\n    let shouldResolveHref =\n      isQueryUpdating ||\n      (options as any)._shouldResolveHref ||\n      parsePath(url).pathname === parsePath(as).pathname\n\n    const nextState = {\n      ...this.state,\n    }\n\n    // for static pages with query params in the URL we delay\n    // marking the router ready until after the query is updated\n    // or a navigation has occurred\n    const readyStateChange = this.isReady !== true\n    this.isReady = true\n    const isSsr = this.isSsr\n\n    if (!isQueryUpdating) {\n      this.isSsr = false\n    }\n\n    // if a route transition is already in progress before\n    // the query updating is triggered ignore query updating\n    if (isQueryUpdating && this.clc) {\n      return false\n    }\n\n    const prevLocale = nextState.locale\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      nextState.locale =\n        options.locale === false\n          ? this.defaultLocale\n          : options.locale || nextState.locale\n\n      if (typeof options.locale === 'undefined') {\n        options.locale = nextState.locale\n      }\n\n      const parsedAs = parseRelativeUrl(\n        hasBasePath(as) ? removeBasePath(as) : as\n      )\n      const localePathResult = normalizeLocalePath(\n        parsedAs.pathname,\n        this.locales\n      )\n\n      if (localePathResult.detectedLocale) {\n        nextState.locale = localePathResult.detectedLocale\n        parsedAs.pathname = addBasePath(parsedAs.pathname)\n        as = formatWithValidation(parsedAs)\n        url = addBasePath(\n          normalizeLocalePath(\n            hasBasePath(url) ? removeBasePath(url) : url,\n            this.locales\n          ).pathname\n        )\n      }\n      let didNavigate = false\n\n      // we need to wrap this in the env check again since regenerator runtime\n      // moves this on its own due to the return\n      if (process.env.__NEXT_I18N_SUPPORT) {\n        // if the locale isn't configured hard navigate to show 404 page\n        if (!this.locales?.includes(nextState.locale!)) {\n          parsedAs.pathname = addLocale(parsedAs.pathname, nextState.locale)\n          handleHardNavigation({\n            url: formatWithValidation(parsedAs),\n            router: this,\n          })\n          // this was previously a return but was removed in favor\n          // of better dead code elimination with regenerator runtime\n          didNavigate = true\n        }\n      }\n\n      const detectedDomain = detectDomainLocale(\n        this.domainLocales,\n        undefined,\n        nextState.locale\n      )\n\n      // we need to wrap this in the env check again since regenerator runtime\n      // moves this on its own due to the return\n      if (process.env.__NEXT_I18N_SUPPORT) {\n        // if we are navigating to a domain locale ensure we redirect to the\n        // correct domain\n        if (\n          !didNavigate &&\n          detectedDomain &&\n          this.isLocaleDomain &&\n          self.location.hostname !== detectedDomain.domain\n        ) {\n          const asNoBasePath = removeBasePath(as)\n          handleHardNavigation({\n            url: `http${detectedDomain.http ? '' : 's'}://${\n              detectedDomain.domain\n            }${addBasePath(\n              `${\n                nextState.locale === detectedDomain.defaultLocale\n                  ? ''\n                  : `/${nextState.locale}`\n              }${asNoBasePath === '/' ? '' : asNoBasePath}` || '/'\n            )}`,\n            router: this,\n          })\n          // this was previously a return but was removed in favor\n          // of better dead code elimination with regenerator runtime\n          didNavigate = true\n        }\n      }\n\n      if (didNavigate) {\n        return new Promise(() => {})\n      }\n    }\n\n    // marking route changes as a navigation start entry\n    if (ST) {\n      performance.mark('routeChange')\n    }\n\n    const { shallow = false, scroll = true } = options\n    const routeProps = { shallow }\n\n    if (this._inFlightRoute && this.clc) {\n      if (!isSsr) {\n        Router.events.emit(\n          'routeChangeError',\n          buildCancellationError(),\n          this._inFlightRoute,\n          routeProps\n        )\n      }\n      this.clc()\n      this.clc = null\n    }\n\n    as = addBasePath(\n      addLocale(\n        hasBasePath(as) ? removeBasePath(as) : as,\n        options.locale,\n        this.defaultLocale\n      )\n    )\n    const cleanedAs = removeLocale(\n      hasBasePath(as) ? removeBasePath(as) : as,\n      nextState.locale\n    )\n    this._inFlightRoute = as\n\n    const localeChange = prevLocale !== nextState.locale\n\n    // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n\n    if (!isQueryUpdating && this.onlyAHashChange(cleanedAs) && !localeChange) {\n      nextState.asPath = cleanedAs\n      Router.events.emit('hashChangeStart', as, routeProps)\n      // TODO: do we need the resolved href when only a hash change?\n      this.changeState(method, url, as, {\n        ...options,\n        scroll: false,\n      })\n      if (scroll) {\n        this.scrollToHash(cleanedAs)\n      }\n      try {\n        await this.set(nextState, this.components[nextState.route], null)\n      } catch (err) {\n        if (isError(err) && err.cancelled) {\n          Router.events.emit('routeChangeError', err, cleanedAs, routeProps)\n        }\n        throw err\n      }\n\n      Router.events.emit('hashChangeComplete', as, routeProps)\n      return true\n    }\n\n    let parsed = parseRelativeUrl(url)\n    let { pathname, query } = parsed\n\n    // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n    let pages: string[], rewrites: any\n    try {\n      ;[pages, { __rewrites: rewrites }] = await Promise.all([\n        this.pageLoader.getPageList(),\n        getClientBuildManifest(),\n        this.pageLoader.getMiddleware(),\n      ])\n    } catch (err) {\n      // If we fail to resolve the page list or client-build manifest, we must\n      // do a server-side transition:\n      handleHardNavigation({ url: as, router: this })\n      return false\n    }\n\n    // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n    if (!this.urlIsNew(cleanedAs) && !localeChange) {\n      method = 'replaceState'\n    }\n\n    // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n    let resolvedAs = as\n\n    // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n    pathname = pathname\n      ? removeTrailingSlash(removeBasePath(pathname))\n      : pathname\n\n    let route = removeTrailingSlash(pathname)\n    const parsedAsPathname = as.startsWith('/') && parseRelativeUrl(as).pathname\n\n    // if we detected the path as app route during prefetching\n    // trigger hard navigation\n    if ((this.components[pathname] as any)?.__appRouter) {\n      handleHardNavigation({ url: as, router: this })\n      return new Promise(() => {})\n    }\n\n    const isMiddlewareRewrite = !!(\n      parsedAsPathname &&\n      route !== parsedAsPathname &&\n      (!isDynamicRoute(route) ||\n        !getRouteMatcher(getRouteRegex(route))(parsedAsPathname))\n    )\n\n    // we don't attempt resolve asPath when we need to execute\n    // middleware as the resolving will occur server-side\n    const isMiddlewareMatch =\n      !options.shallow &&\n      (await matchesMiddleware({\n        asPath: as,\n        locale: nextState.locale,\n        router: this,\n      }))\n\n    if (isQueryUpdating && isMiddlewareMatch) {\n      shouldResolveHref = false\n    }\n\n    if (shouldResolveHref && pathname !== '/_error') {\n      ;(options as any)._shouldResolveHref = true\n\n      if (process.env.__NEXT_HAS_REWRITES && as.startsWith('/')) {\n        const rewritesResult = resolveRewrites(\n          addBasePath(addLocale(cleanedAs, nextState.locale), true),\n          pages,\n          rewrites,\n          query,\n          (p: string) => resolveDynamicRoute(p, pages),\n          this.locales\n        )\n\n        if (rewritesResult.externalDest) {\n          handleHardNavigation({ url: as, router: this })\n          return true\n        }\n        if (!isMiddlewareMatch) {\n          resolvedAs = rewritesResult.asPath\n        }\n\n        if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n          // if this directly matches a page we need to update the href to\n          // allow the correct page chunk to be loaded\n          pathname = rewritesResult.resolvedHref\n          parsed.pathname = addBasePath(pathname)\n\n          if (!isMiddlewareMatch) {\n            url = formatWithValidation(parsed)\n          }\n        }\n      } else {\n        parsed.pathname = resolveDynamicRoute(pathname, pages)\n\n        if (parsed.pathname !== pathname) {\n          pathname = parsed.pathname\n          parsed.pathname = addBasePath(pathname)\n\n          if (!isMiddlewareMatch) {\n            url = formatWithValidation(parsed)\n          }\n        }\n      }\n    }\n\n    if (!isLocalURL(as)) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` +\n            `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`\n        )\n      }\n      handleHardNavigation({ url: as, router: this })\n      return false\n    }\n\n    resolvedAs = removeLocale(removeBasePath(resolvedAs), nextState.locale)\n\n    route = removeTrailingSlash(pathname)\n    let routeMatch: Params | false = false\n\n    if (isDynamicRoute(route)) {\n      const parsedAs = parseRelativeUrl(resolvedAs)\n      const asPathname = parsedAs.pathname\n\n      const routeRegex = getRouteRegex(route)\n      routeMatch = getRouteMatcher(routeRegex)(asPathname)\n      const shouldInterpolate = route === asPathname\n      const interpolatedAs = shouldInterpolate\n        ? interpolateAs(route, asPathname, query)\n        : ({} as { result: undefined; params: undefined })\n\n      if (!routeMatch || (shouldInterpolate && !interpolatedAs.result)) {\n        const missingParams = Object.keys(routeRegex.groups).filter(\n          (param) => !query[param] && !routeRegex.groups[param].optional\n        )\n\n        if (missingParams.length > 0 && !isMiddlewareMatch) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `${\n                shouldInterpolate\n                  ? `Interpolating href`\n                  : `Mismatching \\`as\\` and \\`href\\``\n              } failed to manually provide ` +\n                `the params: ${missingParams.join(\n                  ', '\n                )} in the \\`href\\`'s \\`query\\``\n            )\n          }\n\n          throw new Error(\n            (shouldInterpolate\n              ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\n                  ', '\n                )}) to be interpolated properly. `\n              : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) +\n              `Read more: https://nextjs.org/docs/messages/${\n                shouldInterpolate\n                  ? 'href-interpolation-failed'\n                  : 'incompatible-href-as'\n              }`\n          )\n        }\n      } else if (shouldInterpolate) {\n        as = formatWithValidation(\n          Object.assign({}, parsedAs, {\n            pathname: interpolatedAs.result,\n            query: omit(query, interpolatedAs.params!),\n          })\n        )\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch)\n      }\n    }\n\n    if (!isQueryUpdating) {\n      Router.events.emit('routeChangeStart', as, routeProps)\n    }\n\n    const isErrorRoute = this.pathname === '/404' || this.pathname === '/_error'\n\n    try {\n      let routeInfo = await this.getRouteInfo({\n        route,\n        pathname,\n        query,\n        as,\n        resolvedAs,\n        routeProps,\n        locale: nextState.locale,\n        isPreview: nextState.isPreview,\n        hasMiddleware: isMiddlewareMatch,\n        unstable_skipClientCache: options.unstable_skipClientCache,\n        isQueryUpdating: isQueryUpdating && !this.isFallback,\n        isMiddlewareRewrite,\n      })\n\n      if (!isQueryUpdating && !options.shallow) {\n        await this._bfl(\n          as,\n          'resolvedAs' in routeInfo ? routeInfo.resolvedAs : undefined,\n          nextState.locale\n        )\n      }\n\n      if ('route' in routeInfo && isMiddlewareMatch) {\n        pathname = routeInfo.route || route\n        route = pathname\n\n        if (!routeProps.shallow) {\n          query = Object.assign({}, routeInfo.query || {}, query)\n        }\n\n        const cleanedParsedPathname = hasBasePath(parsed.pathname)\n          ? removeBasePath(parsed.pathname)\n          : parsed.pathname\n\n        if (routeMatch && pathname !== cleanedParsedPathname) {\n          Object.keys(routeMatch).forEach((key) => {\n            if (routeMatch && query[key] === routeMatch[key]) {\n              delete query[key]\n            }\n          })\n        }\n\n        if (isDynamicRoute(pathname)) {\n          const prefixedAs =\n            !routeProps.shallow && routeInfo.resolvedAs\n              ? routeInfo.resolvedAs\n              : addBasePath(\n                  addLocale(\n                    new URL(as, location.href).pathname,\n                    nextState.locale\n                  ),\n                  true\n                )\n\n          let rewriteAs = prefixedAs\n\n          if (hasBasePath(rewriteAs)) {\n            rewriteAs = removeBasePath(rewriteAs)\n          }\n\n          if (process.env.__NEXT_I18N_SUPPORT) {\n            const localeResult = normalizeLocalePath(rewriteAs, this.locales)\n            nextState.locale = localeResult.detectedLocale || nextState.locale\n            rewriteAs = localeResult.pathname\n          }\n          const routeRegex = getRouteRegex(pathname)\n          const curRouteMatch = getRouteMatcher(routeRegex)(\n            new URL(rewriteAs, location.href).pathname\n          )\n\n          if (curRouteMatch) {\n            Object.assign(query, curRouteMatch)\n          }\n        }\n      }\n\n      // If the routeInfo brings a redirect we simply apply it.\n      if ('type' in routeInfo) {\n        if (routeInfo.type === 'redirect-internal') {\n          return this.change(method, routeInfo.newUrl, routeInfo.newAs, options)\n        } else {\n          handleHardNavigation({ url: routeInfo.destination, router: this })\n          return new Promise(() => {})\n        }\n      }\n\n      const component: any = routeInfo.Component\n      if (component && component.unstable_scriptLoader) {\n        const scripts = [].concat(component.unstable_scriptLoader())\n\n        scripts.forEach((script: any) => {\n          handleClientScriptLoad(script.props)\n        })\n      }\n\n      // handle redirect on client-transition\n      if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {\n        if (\n          routeInfo.props.pageProps &&\n          routeInfo.props.pageProps.__N_REDIRECT\n        ) {\n          // Use the destination from redirect without adding locale\n          options.locale = false\n\n          const destination = routeInfo.props.pageProps.__N_REDIRECT\n\n          // check if destination is internal (resolves to a page) and attempt\n          // client-navigation if it is falling back to hard navigation if\n          // it's not\n          if (\n            destination.startsWith('/') &&\n            routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false\n          ) {\n            const parsedHref = parseRelativeUrl(destination)\n            parsedHref.pathname = resolveDynamicRoute(\n              parsedHref.pathname,\n              pages\n            )\n\n            const { url: newUrl, as: newAs } = prepareUrlAs(\n              this,\n              destination,\n              destination\n            )\n            return this.change(method, newUrl, newAs, options)\n          }\n          handleHardNavigation({ url: destination, router: this })\n          return new Promise(() => {})\n        }\n\n        nextState.isPreview = !!routeInfo.props.__N_PREVIEW\n\n        // handle SSG data 404\n        if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {\n          let notFoundRoute\n\n          try {\n            await this.fetchComponent('/404')\n            notFoundRoute = '/404'\n          } catch (_) {\n            notFoundRoute = '/_error'\n          }\n\n          routeInfo = await this.getRouteInfo({\n            route: notFoundRoute,\n            pathname: notFoundRoute,\n            query,\n            as,\n            resolvedAs,\n            routeProps: { shallow: false },\n            locale: nextState.locale,\n            isPreview: nextState.isPreview,\n            isNotFound: true,\n          })\n\n          if ('type' in routeInfo) {\n            throw new Error(`Unexpected middleware effect on /404`)\n          }\n        }\n      }\n\n      if (\n        isQueryUpdating &&\n        this.pathname === '/_error' &&\n        self.__NEXT_DATA__.props?.pageProps?.statusCode === 500 &&\n        routeInfo.props?.pageProps\n      ) {\n        // ensure statusCode is still correct for static 500 page\n        // when updating query information\n        routeInfo.props.pageProps.statusCode = 500\n      }\n\n      // shallow routing is only allowed for same page URL changes.\n      const isValidShallowRoute =\n        options.shallow && nextState.route === (routeInfo.route ?? route)\n\n      const shouldScroll =\n        options.scroll ?? (!isQueryUpdating && !isValidShallowRoute)\n      const resetScroll = shouldScroll ? { x: 0, y: 0 } : null\n      const upcomingScrollState = forcedScroll ?? resetScroll\n\n      // the new state that the router gonna set\n      const upcomingRouterState = {\n        ...nextState,\n        route,\n        pathname,\n        query,\n        asPath: cleanedAs,\n        isFallback: false,\n      }\n\n      // When the page being rendered is the 404 page, we should only update the\n      // query parameters. Route changes here might add the basePath when it\n      // wasn't originally present. This is also why this block is before the\n      // below `changeState` call which updates the browser's history (changing\n      // the URL).\n      if (isQueryUpdating && isErrorRoute) {\n        routeInfo = await this.getRouteInfo({\n          route: this.pathname,\n          pathname: this.pathname,\n          query,\n          as,\n          resolvedAs,\n          routeProps: { shallow: false },\n          locale: nextState.locale,\n          isPreview: nextState.isPreview,\n          isQueryUpdating: isQueryUpdating && !this.isFallback,\n        })\n\n        if ('type' in routeInfo) {\n          throw new Error(`Unexpected middleware effect on ${this.pathname}`)\n        }\n\n        if (\n          this.pathname === '/_error' &&\n          self.__NEXT_DATA__.props?.pageProps?.statusCode === 500 &&\n          routeInfo.props?.pageProps\n        ) {\n          // ensure statusCode is still correct for static 500 page\n          // when updating query information\n          routeInfo.props.pageProps.statusCode = 500\n        }\n\n        try {\n          await this.set(upcomingRouterState, routeInfo, upcomingScrollState)\n        } catch (err) {\n          if (isError(err) && err.cancelled) {\n            Router.events.emit('routeChangeError', err, cleanedAs, routeProps)\n          }\n          throw err\n        }\n\n        return true\n      }\n\n      Router.events.emit('beforeHistoryChange', as, routeProps)\n      this.changeState(method, url, as, options)\n\n      // for query updates we can skip it if the state is unchanged and we don't\n      // need to scroll\n      // https://github.com/vercel/next.js/issues/37139\n      const canSkipUpdating =\n        isQueryUpdating &&\n        !upcomingScrollState &&\n        !readyStateChange &&\n        !localeChange &&\n        compareRouterStates(upcomingRouterState, this.state)\n\n      if (!canSkipUpdating) {\n        try {\n          await this.set(upcomingRouterState, routeInfo, upcomingScrollState)\n        } catch (e: any) {\n          if (e.cancelled) routeInfo.error = routeInfo.error || e\n          else throw e\n        }\n\n        if (routeInfo.error) {\n          if (!isQueryUpdating) {\n            Router.events.emit(\n              'routeChangeError',\n              routeInfo.error,\n              cleanedAs,\n              routeProps\n            )\n          }\n\n          throw routeInfo.error\n        }\n\n        if (process.env.__NEXT_I18N_SUPPORT) {\n          if (nextState.locale) {\n            document.documentElement.lang = nextState.locale\n          }\n        }\n\n        if (!isQueryUpdating) {\n          Router.events.emit('routeChangeComplete', as, routeProps)\n        }\n\n        // A hash mark # is the optional last part of a URL\n        const hashRegex = /#.+$/\n        if (shouldScroll && hashRegex.test(as)) {\n          this.scrollToHash(as)\n        }\n      }\n\n      return true\n    } catch (err) {\n      if (isError(err) && err.cancelled) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      this._shallow = options.shallow\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n          __N: true,\n          key: (this._key = method !== 'pushState' ? this._key : createKey()),\n        } as HistoryState,\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  async handleRouteInfoError(\n    err: Error & { code?: any; cancelled?: boolean },\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    routeProps: RouteProperties,\n    loadErrorFail?: boolean\n  ): Promise<CompletePrivateRouteInfo> {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err\n    }\n\n    if (isAssetError(err) || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as, routeProps)\n\n      // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n\n      // So, doing a hard reload is the proper way to deal with this.\n      handleHardNavigation({\n        url: as,\n        router: this,\n      })\n\n      // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n      throw buildCancellationError()\n    }\n\n    console.error(err)\n\n    try {\n      let props: Record<string, any> | undefined\n      const { page: Component, styleSheets } =\n        await this.fetchComponent('/_error')\n\n      const routeInfo: CompletePrivateRouteInfo = {\n        props,\n        Component,\n        styleSheets,\n        err,\n        error: err,\n      }\n\n      if (!routeInfo.props) {\n        try {\n          routeInfo.props = await this.getInitialProps(Component, {\n            err,\n            pathname,\n            query,\n          } as any)\n        } catch (gipErr) {\n          console.error('Error in error page `getInitialProps`: ', gipErr)\n          routeInfo.props = {}\n        }\n      }\n\n      return routeInfo\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError(\n        isError(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''),\n        pathname,\n        query,\n        as,\n        routeProps,\n        true\n      )\n    }\n  }\n\n  async getRouteInfo({\n    route: requestedRoute,\n    pathname,\n    query,\n    as,\n    resolvedAs,\n    routeProps,\n    locale,\n    hasMiddleware,\n    isPreview,\n    unstable_skipClientCache,\n    isQueryUpdating,\n    isMiddlewareRewrite,\n    isNotFound,\n  }: {\n    route: string\n    pathname: string\n    query: ParsedUrlQuery\n    as: string\n    resolvedAs: string\n    hasMiddleware?: boolean\n    routeProps: RouteProperties\n    locale: string | undefined\n    isPreview: boolean\n    unstable_skipClientCache?: boolean\n    isQueryUpdating?: boolean\n    isMiddlewareRewrite?: boolean\n    isNotFound?: boolean\n  }) {\n    /**\n     * This `route` binding can change if there's a rewrite\n     * so we keep a reference to the original requested route\n     * so we can store the cache for it and avoid re-requesting every time\n     * for shallow routing purposes.\n     */\n    let route = requestedRoute\n\n    try {\n      let existingInfo: PrivateRouteInfo | undefined = this.components[route]\n      if (routeProps.shallow && existingInfo && this.route === route) {\n        return existingInfo\n      }\n\n      const handleCancelled = getCancelledHandler({ route, router: this })\n\n      if (hasMiddleware) {\n        existingInfo = undefined\n      }\n\n      let cachedRouteInfo =\n        existingInfo &&\n        !('initial' in existingInfo) &&\n        process.env.NODE_ENV !== 'development'\n          ? existingInfo\n          : undefined\n\n      const isBackground = isQueryUpdating\n      const fetchNextDataParams: FetchNextDataParams = {\n        dataHref: this.pageLoader.getDataHref({\n          href: formatWithValidation({ pathname, query }),\n          skipInterpolation: true,\n          asPath: isNotFound ? '/404' : resolvedAs,\n          locale,\n        }),\n        hasMiddleware: true,\n        isServerRender: this.isSsr,\n        parseJSON: true,\n        inflightCache: isBackground ? this.sbc : this.sdc,\n        persistCache: !isPreview,\n        isPrefetch: false,\n        unstable_skipClientCache,\n        isBackground,\n      }\n\n      let data:\n        | WithMiddlewareEffectsOutput\n        | (Pick<WithMiddlewareEffectsOutput, 'json'> &\n            Omit<Partial<WithMiddlewareEffectsOutput>, 'json'>)\n        | null =\n        isQueryUpdating && !isMiddlewareRewrite\n          ? null\n          : await withMiddlewareEffects({\n              fetchData: () => fetchNextData(fetchNextDataParams),\n              asPath: isNotFound ? '/404' : resolvedAs,\n              locale: locale,\n              router: this,\n            }).catch((err) => {\n              // we don't hard error during query updating\n              // as it's un-necessary and doesn't need to be fatal\n              // unless it is a fallback route and the props can't\n              // be loaded\n              if (isQueryUpdating) {\n                return null\n              }\n              throw err\n            })\n\n      // when rendering error routes we don't apply middleware\n      // effects\n      if (data && (pathname === '/_error' || pathname === '/404')) {\n        data.effect = undefined\n      }\n\n      if (isQueryUpdating) {\n        if (!data) {\n          data = { json: self.__NEXT_DATA__.props }\n        } else {\n          data.json = self.__NEXT_DATA__.props\n        }\n      }\n\n      handleCancelled()\n\n      if (\n        data?.effect?.type === 'redirect-internal' ||\n        data?.effect?.type === 'redirect-external'\n      ) {\n        return data.effect\n      }\n\n      if (data?.effect?.type === 'rewrite') {\n        const resolvedRoute = removeTrailingSlash(data.effect.resolvedHref)\n        const pages = await this.pageLoader.getPageList()\n\n        // during query updating the page must match although during\n        // client-transition a redirect that doesn't match a page\n        // can be returned and this should trigger a hard navigation\n        // which is valid for incremental migration\n        if (!isQueryUpdating || pages.includes(resolvedRoute)) {\n          route = resolvedRoute\n          pathname = data.effect.resolvedHref\n          query = { ...query, ...data.effect.parsedAs.query }\n          resolvedAs = removeBasePath(\n            normalizeLocalePath(data.effect.parsedAs.pathname, this.locales)\n              .pathname\n          )\n\n          // Check again the cache with the new destination.\n          existingInfo = this.components[route]\n          if (\n            routeProps.shallow &&\n            existingInfo &&\n            this.route === route &&\n            !hasMiddleware\n          ) {\n            // If we have a match with the current route due to rewrite,\n            // we can copy the existing information to the rewritten one.\n            // Then, we return the information along with the matched route.\n            return { ...existingInfo, route }\n          }\n        }\n      }\n\n      if (isAPIRoute(route)) {\n        handleHardNavigation({ url: as, router: this })\n        return new Promise<never>(() => {})\n      }\n\n      const routeInfo =\n        cachedRouteInfo ||\n        (await this.fetchComponent(route).then<CompletePrivateRouteInfo>(\n          (res) => ({\n            Component: res.page,\n            styleSheets: res.styleSheets,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          })\n        ))\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { isValidElementType } =\n          require('next/dist/compiled/react-is') as typeof import('next/dist/compiled/react-is')\n        if (!isValidElementType(routeInfo.Component)) {\n          throw new Error(\n            `The default export is not a React Component in page: \"${pathname}\"`\n          )\n        }\n      }\n      const wasBailedPrefetch = data?.response?.headers.get('x-middleware-skip')\n\n      const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP\n\n      // For non-SSG prefetches that bailed before sending data\n      // we clear the cache to fetch full response\n      if (wasBailedPrefetch && data?.dataHref) {\n        delete this.sdc[data.dataHref]\n      }\n\n      const { props, cacheKey } = await this._getData(async () => {\n        if (shouldFetchData) {\n          if (data?.json && !wasBailedPrefetch) {\n            return { cacheKey: data.cacheKey, props: data.json }\n          }\n\n          const dataHref = data?.dataHref\n            ? data.dataHref\n            : this.pageLoader.getDataHref({\n                href: formatWithValidation({ pathname, query }),\n                asPath: resolvedAs,\n                locale,\n              })\n\n          const fetched = await fetchNextData({\n            dataHref,\n            isServerRender: this.isSsr,\n            parseJSON: true,\n            inflightCache: wasBailedPrefetch ? {} : this.sdc,\n            persistCache: !isPreview,\n            isPrefetch: false,\n            unstable_skipClientCache,\n          })\n\n          return {\n            cacheKey: fetched.cacheKey,\n            props: fetched.json || {},\n          }\n        }\n\n        return {\n          headers: {},\n          props: await this.getInitialProps(\n            routeInfo.Component,\n            // we provide AppTree later so this needs to be `any`\n            {\n              pathname,\n              query,\n              asPath: as,\n              locale,\n              locales: this.locales,\n              defaultLocale: this.defaultLocale,\n            } as any\n          ),\n        }\n      })\n\n      // Only bust the data cache for SSP routes although\n      // middleware can skip cache per request with\n      // x-middleware-cache: no-cache as well\n      if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {\n        delete this.sdc[cacheKey]\n      }\n\n      // we kick off a HEAD request in the background\n      // when a non-prefetch request is made to signal revalidation\n      if (\n        !this.isPreview &&\n        routeInfo.__N_SSG &&\n        process.env.NODE_ENV !== 'development' &&\n        !isQueryUpdating\n      ) {\n        fetchNextData(\n          Object.assign({}, fetchNextDataParams, {\n            isBackground: true,\n            persistCache: false,\n            inflightCache: this.sbc,\n          })\n        ).catch(() => {})\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps)\n      routeInfo.props = props\n      routeInfo.route = route\n      routeInfo.query = query\n      routeInfo.resolvedAs = resolvedAs\n      this.components[route] = routeInfo\n\n      return routeInfo\n    } catch (err) {\n      return this.handleRouteInfoError(\n        getProperError(err),\n        pathname,\n        query,\n        as,\n        routeProps\n      )\n    }\n  }\n\n  private set(\n    state: typeof this.state,\n    data: PrivateRouteInfo,\n    resetScroll: { x: number; y: number } | null\n  ): Promise<void> {\n    this.state = state\n\n    return this.sub(\n      data,\n      this.components['/_app'].Component as AppComponent,\n      resetScroll\n    )\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#', 2)\n    const [newUrlNoHash, newHash] = as.split('#', 2)\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash = ''] = as.split('#', 2)\n\n    disableSmoothScrollDuringRouteTransition(\n      () => {\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === '' || hash === 'top') {\n          window.scrollTo(0, 0)\n          return\n        }\n\n        // Decode hash to make non-latin anchor works.\n        const rawHash = decodeURIComponent(hash)\n        // First we check if the element by id is found\n        const idEl = document.getElementById(rawHash)\n        if (idEl) {\n          idEl.scrollIntoView()\n          return\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(rawHash)[0]\n        if (nameEl) {\n          nameEl.scrollIntoView()\n        }\n      },\n      {\n        onlyHashChange: this.onlyAHashChange(as),\n      }\n    )\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  async prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    // Prefetch is not supported in development mode because it would trigger on-demand-entries\n    if (process.env.NODE_ENV !== 'production') {\n      return\n    }\n\n    if (typeof window !== 'undefined' && isBot(window.navigator.userAgent)) {\n      // No prefetches for bots that render the link since they are typically navigating\n      // links via the equivalent of a hard navigation and hence never utilize these\n      // prefetches.\n      return\n    }\n    let parsed = parseRelativeUrl(url)\n    const urlPathname = parsed.pathname\n\n    let { pathname, query } = parsed\n    const originalPathname = pathname\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      if (options.locale === false) {\n        pathname = normalizeLocalePath!(pathname, this.locales).pathname\n        parsed.pathname = pathname\n        url = formatWithValidation(parsed)\n\n        let parsedAs = parseRelativeUrl(asPath)\n        const localePathResult = normalizeLocalePath!(\n          parsedAs.pathname,\n          this.locales\n        )\n        parsedAs.pathname = localePathResult.pathname\n        options.locale = localePathResult.detectedLocale || this.defaultLocale\n        asPath = formatWithValidation(parsedAs)\n      }\n    }\n\n    const pages = await this.pageLoader.getPageList()\n    let resolvedAs = asPath\n\n    const locale =\n      typeof options.locale !== 'undefined'\n        ? options.locale || undefined\n        : this.locale\n\n    const isMiddlewareMatch = await matchesMiddleware({\n      asPath: asPath,\n      locale: locale,\n      router: this,\n    })\n\n    if (process.env.__NEXT_HAS_REWRITES && asPath.startsWith('/')) {\n      let rewrites: any\n      ;({ __rewrites: rewrites } = await getClientBuildManifest())\n\n      const rewritesResult = resolveRewrites(\n        addBasePath(addLocale(asPath, this.locale), true),\n        pages,\n        rewrites,\n        parsed.query,\n        (p: string) => resolveDynamicRoute(p, pages),\n        this.locales\n      )\n\n      if (rewritesResult.externalDest) {\n        return\n      }\n\n      if (!isMiddlewareMatch) {\n        resolvedAs = removeLocale(\n          removeBasePath(rewritesResult.asPath),\n          this.locale\n        )\n      }\n\n      if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n        // if this directly matches a page we need to update the href to\n        // allow the correct page chunk to be loaded\n        pathname = rewritesResult.resolvedHref\n        parsed.pathname = pathname\n\n        if (!isMiddlewareMatch) {\n          url = formatWithValidation(parsed)\n        }\n      }\n    }\n    parsed.pathname = resolveDynamicRoute(parsed.pathname, pages)\n\n    if (isDynamicRoute(parsed.pathname)) {\n      pathname = parsed.pathname\n      parsed.pathname = pathname\n      Object.assign(\n        query,\n        getRouteMatcher(getRouteRegex(parsed.pathname))(\n          parsePath(asPath).pathname\n        ) || {}\n      )\n\n      if (!isMiddlewareMatch) {\n        url = formatWithValidation(parsed)\n      }\n    }\n\n    const data =\n      process.env.__NEXT_MIDDLEWARE_PREFETCH === 'strict'\n        ? null\n        : await withMiddlewareEffects({\n            fetchData: () =>\n              fetchNextData({\n                dataHref: this.pageLoader.getDataHref({\n                  href: formatWithValidation({\n                    pathname: originalPathname,\n                    query,\n                  }),\n                  skipInterpolation: true,\n                  asPath: resolvedAs,\n                  locale,\n                }),\n                hasMiddleware: true,\n                isServerRender: false,\n                parseJSON: true,\n                inflightCache: this.sdc,\n                persistCache: !this.isPreview,\n                isPrefetch: true,\n              }),\n            asPath: asPath,\n            locale: locale,\n            router: this,\n          })\n\n    /**\n     * If there was a rewrite we apply the effects of the rewrite on the\n     * current parameters for the prefetch.\n     */\n    if (data?.effect.type === 'rewrite') {\n      parsed.pathname = data.effect.resolvedHref\n      pathname = data.effect.resolvedHref\n      query = { ...query, ...data.effect.parsedAs.query }\n      resolvedAs = data.effect.parsedAs.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    /**\n     * If there is a redirect to an external destination then we don't have\n     * to prefetch content as it will be unused.\n     */\n    if (data?.effect.type === 'redirect-external') {\n      return\n    }\n\n    const route = removeTrailingSlash(pathname)\n\n    if (await this._bfl(asPath, resolvedAs, options.locale, true)) {\n      this.components[urlPathname] = { __appRouter: true } as any\n    }\n\n    await Promise.all([\n      this.pageLoader._isSsg(route).then((isSsg) => {\n        return isSsg\n          ? fetchNextData({\n              dataHref: data?.json\n                ? data?.dataHref\n                : this.pageLoader.getDataHref({\n                    href: url,\n                    asPath: resolvedAs,\n                    locale: locale,\n                  }),\n              isServerRender: false,\n              parseJSON: true,\n              inflightCache: this.sdc,\n              persistCache: !this.isPreview,\n              isPrefetch: true,\n              unstable_skipClientCache:\n                options.unstable_skipClientCache ||\n                (options.priority &&\n                  !!process.env.__NEXT_OPTIMISTIC_CLIENT_CACHE),\n            })\n              .then(() => false)\n              .catch(() => false)\n          : false\n      }),\n      this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n    ])\n  }\n\n  async fetchComponent(route: string) {\n    const handleCancelled = getCancelledHandler({ route, router: this })\n\n    try {\n      const componentResult = await this.pageLoader.loadPage(route)\n      handleCancelled()\n\n      return componentResult\n    } catch (err) {\n      handleCancelled()\n      throw err\n    }\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<Record<string, any>> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App as AppComponent)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  get route(): string {\n    return this.state.route\n  }\n\n  get pathname(): string {\n    return this.state.pathname\n  }\n\n  get query(): ParsedUrlQuery {\n    return this.state.query\n  }\n\n  get asPath(): string {\n    return this.state.asPath\n  }\n\n  get locale(): string | undefined {\n    return this.state.locale\n  }\n\n  get isFallback(): boolean {\n    return this.state.isFallback\n  }\n\n  get isPreview(): boolean {\n    return this.state.isPreview\n  }\n}\n","import { isAbsoluteUrl, getLocationOrigin } from '../../utils'\nimport { hasBasePath } from '../../../../client/has-base-path'\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!isAbsoluteUrl(url)) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n","import { SDK_VERSION } from './utils-hoist/version.js';\nimport { GLOBAL_OBJ } from './utils-hoist/worldwide.js';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nfunction getSentryCarrier(carrier) {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n\nexport { getMainCarrier, getSentryCarrier };\n//# sourceMappingURL=carrier.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n *\n * @deprecated This variable will be removed in the next major version.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    // eslint-disable-next-line deprecation/deprecation\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      // eslint-disable-next-line deprecation/deprecation\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      // eslint-disable-next-line deprecation/deprecation\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  // eslint-disable-next-line deprecation/deprecation\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds };\n//# sourceMappingURL=time.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { addHandler, maybeInstrument, timestampInSeconds, isString, triggerHandlers } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.open = new Proxy(xhrproto.open, {\n    apply(originalOpen, xhrOpenThisArg, xhrOpenArgArray) {\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your XHR call did not\n      //       have a stack trace. If you are using HttpClient integration,\n      //       this is the expected behavior, as we are using this virtual error to capture\n      //       the location of your XHR call, and group your HttpClient events accordingly.\n      const virtualError = new Error();\n\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(xhrOpenArgArray[0]) ? xhrOpenArgArray[0].toUpperCase() : undefined;\n      const url = parseUrl(xhrOpenArgArray[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n      }\n\n      xhrOpenThisArg[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        xhrOpenThisArg.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = xhrOpenThisArg[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (xhrOpenThisArg.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhrOpenThisArg.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: xhrOpenThisArg,\n            virtualError,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in xhrOpenThisArg && typeof xhrOpenThisArg.onreadystatechange === 'function') {\n        xhrOpenThisArg.onreadystatechange = new Proxy(xhrOpenThisArg.onreadystatechange, {\n          apply(originalOnreadystatechange, onreadystatechangeThisArg, onreadystatechangeArgArray) {\n            onreadystatechangeHandler();\n            return originalOnreadystatechange.apply(onreadystatechangeThisArg, onreadystatechangeArgArray);\n          },\n        });\n      } else {\n        xhrOpenThisArg.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      xhrOpenThisArg.setRequestHeader = new Proxy(xhrOpenThisArg.setRequestHeader, {\n        apply(\n          originalSetRequestHeader,\n          setRequestHeaderThisArg,\n          setRequestHeaderArgArray,\n        ) {\n          const [header, value] = setRequestHeaderArgArray;\n\n          const xhrInfo = setRequestHeaderThisArg[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return originalSetRequestHeader.apply(setRequestHeaderThisArg, setRequestHeaderArgArray);\n        },\n      });\n\n      return originalOpen.apply(xhrOpenThisArg, xhrOpenArgArray);\n    },\n  });\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  xhrproto.send = new Proxy(xhrproto.send, {\n    apply(originalSend, sendThisArg, sendArgArray) {\n      const sentryXhrData = sendThisArg[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(sendThisArg, sendArgArray);\n      }\n\n      if (sendArgArray[0] !== undefined) {\n        sentryXhrData.body = sendArgArray[0];\n      }\n\n      const handlerData = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: sendThisArg,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(sendThisArg, sendArgArray);\n    },\n  });\n}\n\nfunction parseUrl(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return GLOBAL_OBJ.__SENTRY__ && GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return GLOBAL_OBJ.__SENTRY__ && GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.stringify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  profile_chunk: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n  raw_security: 'security',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, createSpanEnvelopeItem, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { isString } from './is.js';\nimport { logger } from './logger.js';\n\n/**\n * @deprecated Use a `\"baggage\"` string directly\n */\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!isString(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      Object.entries(currBaggageObject).forEach(([key, value]) => {\n        acc[key] = value;\n      });\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      if (key && value) {\n        acc[key] = value;\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader, parseBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './logger.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFunction, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { updateSession } from './session.js';\nimport { isPlainObject } from './utils-hoist/is.js';\nimport { logger } from './utils-hoist/logger.js';\nimport { uuid4 } from './utils-hoist/misc.js';\nimport { generateTraceId, generateSpanId } from './utils-hoist/propagationContext.js';\nimport { dateTimestampInSeconds } from './utils-hoist/time.js';\nimport { merge } from './utils/merge.js';\nimport { _setSpanForScope, _getSpanForScope } from './utils/spanOnScope.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information.\n */\nclass ScopeClass  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called during event processing. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** The client on this scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = {\n      traceId: generateTraceId(),\n      spanId: generateSpanId(),\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clone() {\n    const newScope = new ScopeClass();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    if (this._contexts.flags) {\n      // We need to copy the `values` array so insertions on a cloned scope\n      // won't affect the original array.\n      newScope._contexts.flags = {\n        values: [...this._contexts.flags.values],\n      };\n    }\n\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLastEventId(lastEventId) {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this._client ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(level) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope so that the name of e.g. taken server route or\n   * the page location is attached to future events.\n   *\n   * IMPORTANT: Calling this function does NOT change the name of the currently active\n   * root span. If you want to change the name of the active root span, use\n   * `Sentry.updateSpanName(rootSpan, 'new name')` instead.\n   *\n   * By default, the SDK updates the scope's transaction name automatically on sensible\n   * occasions, such as a page navigation or when handling a new request on the server.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const [scopeInstance, requestSession] =\n      scopeToMerge instanceof Scope\n        ? // eslint-disable-next-line deprecation/deprecation\n          [scopeToMerge.getScopeData(), scopeToMerge.getRequestSession()]\n        : isPlainObject(scopeToMerge)\n          ? [captureContext , (captureContext ).requestSession]\n          : [];\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    if (requestSession) {\n      this._requestSession = requestSession;\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this.setPropagationContext({ traceId: generateTraceId() });\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    this._breadcrumbs.push(mergedBreadcrumb);\n    if (this._breadcrumbs.length > maxCrumbs) {\n      this._breadcrumbs = this._breadcrumbs.slice(-maxCrumbs);\n      if (this._client) {\n        this._client.recordDroppedEvent('buffer_overflow', 'log_item');\n      }\n    }\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = merge(this._sdkProcessingMetadata, newData, 2);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(\n    context,\n  ) {\n    this._propagationContext = {\n      // eslint-disable-next-line deprecation/deprecation\n      spanId: generateSpanId(),\n      ...context,\n    };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Holds additional event information.\n */\nconst Scope = ScopeClass;\n\n/**\n * Holds additional event information.\n */\n\nexport { Scope };\n//# sourceMappingURL=scope.js.map\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","// minimal implementation MurmurHash2 hash function\nfunction murmurhash2(str: string) {\n  let h = 0\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i)\n    h = Math.imul(h ^ c, 0x5bd1e995)\n    h ^= h >>> 13\n    h = Math.imul(h, 0x5bd1e995)\n  }\n  return h >>> 0\n}\n\n// default to 0.01% error rate as the filter compresses very well\nconst DEFAULT_ERROR_RATE = 0.0001\n\nexport class BloomFilter {\n  numItems: number\n  errorRate: number\n  numBits: number\n  numHashes: number\n  bitArray: number[]\n\n  constructor(numItems: number, errorRate: number = DEFAULT_ERROR_RATE) {\n    this.numItems = numItems\n    this.errorRate = errorRate\n    this.numBits = Math.ceil(\n      -(numItems * Math.log(errorRate)) / (Math.log(2) * Math.log(2))\n    )\n    this.numHashes = Math.ceil((this.numBits / numItems) * Math.log(2))\n    this.bitArray = new Array(this.numBits).fill(0)\n  }\n\n  static from(items: string[], errorRate = DEFAULT_ERROR_RATE) {\n    const filter = new BloomFilter(items.length, errorRate)\n\n    for (const item of items) {\n      filter.add(item)\n    }\n    return filter\n  }\n\n  export() {\n    const data = {\n      numItems: this.numItems,\n      errorRate: this.errorRate,\n      numBits: this.numBits,\n      numHashes: this.numHashes,\n      bitArray: this.bitArray,\n    }\n\n    if (process.env.NEXT_RUNTIME === 'nodejs') {\n      if (this.errorRate < DEFAULT_ERROR_RATE) {\n        const filterData = JSON.stringify(data)\n        const gzipSize = (\n          require('next/dist/compiled/gzip-size') as typeof import('next/dist/compiled/gzip-size')\n        ).sync(filterData)\n\n        if (gzipSize > 1024) {\n          console.warn(\n            `Creating filter with error rate less than 0.1% (0.001) can increase the size dramatically proceed with caution. Received error rate ${this.errorRate} resulted in size ${filterData.length} bytes, ${gzipSize} bytes (gzip)`\n          )\n        }\n      }\n    }\n\n    return data\n  }\n\n  import(data: ReturnType<(typeof this)['export']>) {\n    this.numItems = data.numItems\n    this.errorRate = data.errorRate\n    this.numBits = data.numBits\n    this.numHashes = data.numHashes\n    this.bitArray = data.bitArray\n  }\n\n  add(item: string) {\n    const hashValues = this.getHashValues(item)\n    hashValues.forEach((hash) => {\n      this.bitArray[hash] = 1\n    })\n  }\n\n  contains(item: string) {\n    const hashValues = this.getHashValues(item)\n    return hashValues.every((hash) => this.bitArray[hash])\n  }\n\n  getHashValues(item: string) {\n    const hashValues = []\n    for (let i = 1; i <= this.numHashes; i++) {\n      const hash = murmurhash2(`${item}${i}`) % this.numBits\n      hashValues.push(hash)\n    }\n    return hashValues\n  }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","/* global window */\nimport React from 'react'\nimport Router from '../shared/lib/router/router'\nimport type { NextRouter } from '../shared/lib/router/router'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport isError from '../lib/is-error'\n\ntype SingletonRouterBase = {\n  router: Router | null\n  readyCallbacks: Array<() => any>\n  ready(cb: () => any): void\n}\n\nexport { Router }\n\nexport type { NextRouter }\n\nexport type SingletonRouter = SingletonRouterBase & NextRouter\n\nconst singletonRouter: SingletonRouterBase = {\n  router: null, // holds the actual router instance\n  readyCallbacks: [],\n  ready(callback: () => void) {\n    if (this.router) return callback()\n    if (typeof window !== 'undefined') {\n      this.readyCallbacks.push(callback)\n    }\n  },\n}\n\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n  'pathname',\n  'route',\n  'query',\n  'asPath',\n  'components',\n  'isFallback',\n  'basePath',\n  'locale',\n  'locales',\n  'defaultLocale',\n  'isReady',\n  'isPreview',\n  'isLocaleDomain',\n  'domainLocales',\n] as const\nconst routerEvents = [\n  'routeChangeStart',\n  'beforeHistoryChange',\n  'routeChangeComplete',\n  'routeChangeError',\n  'hashChangeStart',\n  'hashChangeComplete',\n] as const\nexport type RouterEvent = (typeof routerEvents)[number]\n\nconst coreMethodFields = [\n  'push',\n  'replace',\n  'reload',\n  'back',\n  'prefetch',\n  'beforePopState',\n] as const\n\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, 'events', {\n  get() {\n    return Router.events\n  },\n})\n\nfunction getRouter(): Router {\n  if (!singletonRouter.router) {\n    const message =\n      'No router instance found.\\n' +\n      'You should only use \"next/router\" on the client side of your app.\\n'\n    throw new Error(message)\n  }\n  return singletonRouter.router\n}\n\nurlPropertyFields.forEach((field) => {\n  // Here we need to use Object.defineProperty because we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get() {\n      const router = getRouter()\n      return router[field] as string\n    },\n  })\n})\n\ncoreMethodFields.forEach((field) => {\n  // We don't really know the types here, so we add them later instead\n  ;(singletonRouter as any)[field] = (...args: any[]) => {\n    const router = getRouter() as any\n    return router[field](...args)\n  }\n})\n\nrouterEvents.forEach((event) => {\n  singletonRouter.ready(() => {\n    Router.events.on(event, (...args) => {\n      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(\n        1\n      )}`\n      const _singletonRouter = singletonRouter as any\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField](...args)\n        } catch (err) {\n          console.error(`Error when running the Router event: ${eventField}`)\n          console.error(\n            isError(err) ? `${err.message}\\n${err.stack}` : err + ''\n          )\n        }\n      }\n    })\n  })\n})\n\n// Export the singletonRouter and this is the public API.\nexport default singletonRouter as SingletonRouter\n\n// Reexport the withRouter HOC\nexport { default as withRouter } from './with-router'\n\n/**\n * This hook gives access the [router object](https://nextjs.org/docs/pages/api-reference/functions/use-router#router-object)\n * inside the [Pages Router](https://nextjs.org/docs/pages/building-your-application).\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/pages/api-reference/functions/use-router)\n */\nexport function useRouter(): NextRouter {\n  const router = React.useContext(RouterContext)\n  if (!router) {\n    throw new Error(\n      'NextRouter was not mounted. https://nextjs.org/docs/messages/next-router-not-mounted'\n    )\n  }\n\n  return router\n}\n\n/**\n * Create a router and assign it as the singleton instance.\n * This is used in client side when we are initializing the app.\n * This should **not** be used inside the server.\n * @internal\n */\nexport function createRouter(\n  ...args: ConstructorParameters<typeof Router>\n): Router {\n  singletonRouter.router = new Router(...args)\n  singletonRouter.readyCallbacks.forEach((cb) => cb())\n  singletonRouter.readyCallbacks = []\n\n  return singletonRouter.router\n}\n\n/**\n * This function is used to create the `withRouter` router instance\n * @internal\n */\nexport function makePublicRouterInstance(router: Router): NextRouter {\n  const scopedRouter = router as any\n  const instance = {} as any\n\n  for (const property of urlPropertyFields) {\n    if (typeof scopedRouter[property] === 'object') {\n      instance[property] = Object.assign(\n        Array.isArray(scopedRouter[property]) ? [] : {},\n        scopedRouter[property]\n      ) // makes sure query is not stateful\n      continue\n    }\n\n    instance[property] = scopedRouter[property]\n  }\n\n  // Events is a static property on the router, the router doesn't have to be initialized to use it\n  instance.events = Router.events\n\n  coreMethodFields.forEach((field) => {\n    instance[field] = (...args: any[]) => {\n      return scopedRouter[field](...args)\n    }\n  })\n\n  return instance\n}\n","import type { detectDomainLocale as Fn } from '../shared/lib/i18n/detect-domain-locale'\n\nexport const detectDomainLocale: typeof Fn = (...args) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return (\n      require('../shared/lib/i18n/detect-domain-locale') as typeof import('../shared/lib/i18n/detect-domain-locale')\n    ).detectDomainLocale(...args)\n  }\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nfunction merge(initialObj, mergeObj, levels = 2) {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && mergeObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n\nexport { merge };\n//# sourceMappingURL=merge.js.map\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","/**\n * @deprecated This variable has been deprecated and will be removed in the next major version.\n */\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (\n    level === 'warn' ? 'warning' : ['fatal', 'error', 'warning', 'log', 'info', 'debug'].includes(level) ? level : 'log'\n  ) ;\n}\n\nexport { severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import type { addLocale as Fn } from '../shared/lib/router/utils/add-locale'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nexport const addLocale: typeof Fn = (path, ...args) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return normalizePathTrailingSlash(\n      (\n        require('../shared/lib/router/utils/add-locale') as typeof import('../shared/lib/router/utils/add-locale')\n      ).addLocale(path, ...args)\n    )\n  }\n  return path\n}\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var n=e;Object.defineProperty(n,\"__esModule\",{value:true});n.pathToRegexp=n.tokensToRegexp=n.regexpToFunction=n.match=n.tokensToFunction=n.compile=n.parse=void 0;function lexer(e){var n=[];var r=0;while(r<e.length){var t=e[r];if(t===\"*\"||t===\"+\"||t===\"?\"){n.push({type:\"MODIFIER\",index:r,value:e[r++]});continue}if(t===\"\\\\\"){n.push({type:\"ESCAPED_CHAR\",index:r++,value:e[r++]});continue}if(t===\"{\"){n.push({type:\"OPEN\",index:r,value:e[r++]});continue}if(t===\"}\"){n.push({type:\"CLOSE\",index:r,value:e[r++]});continue}if(t===\":\"){var a=\"\";var i=r+1;while(i<e.length){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){a+=e[i++];continue}break}if(!a)throw new TypeError(\"Missing parameter name at \".concat(r));n.push({type:\"NAME\",index:r,value:a});r=i;continue}if(t===\"(\"){var c=1;var f=\"\";var i=r+1;if(e[i]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '.concat(i))}while(i<e.length){if(e[i]===\"\\\\\"){f+=e[i++]+e[i++];continue}if(e[i]===\")\"){c--;if(c===0){i++;break}}else if(e[i]===\"(\"){c++;if(e[i+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \".concat(i))}}f+=e[i++]}if(c)throw new TypeError(\"Unbalanced pattern at \".concat(r));if(!f)throw new TypeError(\"Missing pattern at \".concat(r));n.push({type:\"PATTERN\",index:r,value:f});r=i;continue}n.push({type:\"CHAR\",index:r,value:e[r++]})}n.push({type:\"END\",index:r,value:\"\"});return n}function parse(e,n){if(n===void 0){n={}}var r=lexer(e);var t=n.prefixes,a=t===void 0?\"./\":t,i=n.delimiter,o=i===void 0?\"/#?\":i;var c=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<r.length&&r[u].type===e)return r[u++].value};var mustConsume=function(e){var n=tryConsume(e);if(n!==undefined)return n;var t=r[u],a=t.type,i=t.index;throw new TypeError(\"Unexpected \".concat(a,\" at \").concat(i,\", expected \").concat(e))};var consumeText=function(){var e=\"\";var n;while(n=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=n}return e};var isSafe=function(e){for(var n=0,r=o;n<r.length;n++){var t=r[n];if(e.indexOf(t)>-1)return true}return false};var safePattern=function(e){var n=c[c.length-1];var r=e||(n&&typeof n===\"string\"?n:\"\");if(n&&!r){throw new TypeError('Must have text between two parameters, missing text after \"'.concat(n.name,'\"'))}if(!r||isSafe(r))return\"[^\".concat(escapeString(o),\"]+?\");return\"(?:(?!\".concat(escapeString(r),\")[^\").concat(escapeString(o),\"])+?\")};while(u<r.length){var v=tryConsume(\"CHAR\");var s=tryConsume(\"NAME\");var d=tryConsume(\"PATTERN\");if(s||d){var g=v||\"\";if(a.indexOf(g)===-1){p+=g;g=\"\"}if(p){c.push(p);p=\"\"}c.push({name:s||f++,prefix:g,suffix:\"\",pattern:d||safePattern(g),modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var x=v||tryConsume(\"ESCAPED_CHAR\");if(x){p+=x;continue}if(p){c.push(p);p=\"\"}var h=tryConsume(\"OPEN\");if(h){var g=consumeText();var l=tryConsume(\"NAME\")||\"\";var m=tryConsume(\"PATTERN\")||\"\";var T=consumeText();mustConsume(\"CLOSE\");c.push({name:l||(m?f++:\"\"),pattern:l&&!m?safePattern(g):m,prefix:g,suffix:T,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return c}n.parse=parse;function compile(e,n){return tokensToFunction(parse(e,n),n)}n.compile=compile;function tokensToFunction(e,n){if(n===void 0){n={}}var r=flags(n);var t=n.encode,a=t===void 0?function(e){return e}:t,i=n.validate,o=i===void 0?true:i;var c=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),r)}}));return function(n){var r=\"\";for(var t=0;t<e.length;t++){var i=e[t];if(typeof i===\"string\"){r+=i;continue}var f=n?n[i.name]:undefined;var u=i.modifier===\"?\"||i.modifier===\"*\";var p=i.modifier===\"*\"||i.modifier===\"+\";if(Array.isArray(f)){if(!p){throw new TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'))}if(f.length===0){if(u)continue;throw new TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var v=0;v<f.length;v++){var s=a(f[v],i);if(o&&!c[t].test(s)){throw new TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix}continue}if(typeof f===\"string\"||typeof f===\"number\"){var s=a(String(f),i);if(o&&!c[t].test(s)){throw new TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix;continue}if(u)continue;var d=p?\"an array\":\"a string\";throw new TypeError('Expected \"'.concat(i.name,'\" to be ').concat(d))}return r}}n.tokensToFunction=tokensToFunction;function match(e,n){var r=[];var t=pathToRegexp(e,r,n);return regexpToFunction(t,r,n)}n.match=match;function regexpToFunction(e,n,r){if(r===void 0){r={}}var t=r.decode,a=t===void 0?function(e){return e}:t;return function(r){var t=e.exec(r);if(!t)return false;var i=t[0],o=t.index;var c=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var r=n[e-1];if(r.modifier===\"*\"||r.modifier===\"+\"){c[r.name]=t[e].split(r.prefix+r.suffix).map((function(e){return a(e,r)}))}else{c[r.name]=a(t[e],r)}};for(var f=1;f<t.length;f++){_loop_1(f)}return{path:i,index:o,params:c}}}n.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,n){if(!n)return e;var r=/\\((?:\\?<(.*?)>)?(?!\\?)/g;var t=0;var a=r.exec(e.source);while(a){n.push({name:a[1]||t++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"});a=r.exec(e.source)}return e}function arrayToRegexp(e,n,r){var t=e.map((function(e){return pathToRegexp(e,n,r).source}));return new RegExp(\"(?:\".concat(t.join(\"|\"),\")\"),flags(r))}function stringToRegexp(e,n,r){return tokensToRegexp(parse(e,r),n,r)}function tokensToRegexp(e,n,r){if(r===void 0){r={}}var t=r.strict,a=t===void 0?false:t,i=r.start,o=i===void 0?true:i,c=r.end,f=c===void 0?true:c,u=r.encode,p=u===void 0?function(e){return e}:u,v=r.delimiter,s=v===void 0?\"/#?\":v,d=r.endsWith,g=d===void 0?\"\":d;var x=\"[\".concat(escapeString(g),\"]|$\");var h=\"[\".concat(escapeString(s),\"]\");var l=o?\"^\":\"\";for(var m=0,T=e;m<T.length;m++){var E=T[m];if(typeof E===\"string\"){l+=escapeString(p(E))}else{var w=escapeString(p(E.prefix));var y=escapeString(p(E.suffix));if(E.pattern){if(n)n.push(E);if(w||y){if(E.modifier===\"+\"||E.modifier===\"*\"){var R=E.modifier===\"*\"?\"?\":\"\";l+=\"(?:\".concat(w,\"((?:\").concat(E.pattern,\")(?:\").concat(y).concat(w,\"(?:\").concat(E.pattern,\"))*)\").concat(y,\")\").concat(R)}else{l+=\"(?:\".concat(w,\"(\").concat(E.pattern,\")\").concat(y,\")\").concat(E.modifier)}}else{if(E.modifier===\"+\"||E.modifier===\"*\"){throw new TypeError('Can not repeat \"'.concat(E.name,'\" without a prefix and suffix'))}l+=\"(\".concat(E.pattern,\")\").concat(E.modifier)}}else{l+=\"(?:\".concat(w).concat(y,\")\").concat(E.modifier)}}}if(f){if(!a)l+=\"\".concat(h,\"?\");l+=!r.endsWith?\"$\":\"(?=\".concat(x,\")\")}else{var A=e[e.length-1];var _=typeof A===\"string\"?h.indexOf(A[A.length-1])>-1:A===undefined;if(!a){l+=\"(?:\".concat(h,\"(?=\").concat(x,\"))?\")}if(!_){l+=\"(?=\".concat(h,\"|\").concat(x,\")\")}}return new RegExp(l,flags(r))}n.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,n,r){if(e instanceof RegExp)return regexpToRegexp(e,n);if(Array.isArray(e))return arrayToRegexp(e,n,r);return stringToRegexp(e,n,r)}n.pathToRegexp=pathToRegexp})();module.exports=e})();","// Translates a logical route into its pages asset path (relative from a common prefix)\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getAssetPathFromRoute(\n  route: string,\n  ext: string = ''\n): string {\n  const path =\n    route === '/'\n      ? '/index'\n      : /^\\/index(\\/|$)/.test(route)\n        ? `/index${route}`\n        : route\n  return path + ext\n}\n","import { getClient, getIsolationScope } from './currentScopes.js';\nimport { consoleSandbox } from './utils-hoist/logger.js';\nimport { dateTimestampInSeconds } from './utils-hoist/time.js';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n\nexport { addBreadcrumb };\n//# sourceMappingURL=breadcrumbs.js.map\n","/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\ntype Handler = (...evts: any[]) => void\n\nexport type MittEmitter<T> = {\n  on(type: T, handler: Handler): void\n  off(type: T, handler: Handler): void\n  emit(type: T, ...evts: any[]): void\n}\n\nexport default function mitt(): MittEmitter<string> {\n  const all: { [s: string]: Handler[] } = Object.create(null)\n\n  return {\n    on(type: string, handler: Handler) {\n      ;(all[type] || (all[type] = [])).push(handler)\n    },\n\n    off(type: string, handler: Handler) {\n      if (all[type]) {\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1)\n      }\n    },\n\n    emit(type: string, ...evts: any[]) {\n      // eslint-disable-next-line array-callback-return\n      ;(all[type] || []).slice().map((handler: Handler) => {\n        handler(...evts)\n      })\n    },\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n *\n * @deprecated This function is deprecated and will be removed in the next major version.\n */\n// TODO(v9): Move this function into normalize() directly\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isVueViewModel, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normalized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  // eslint-disable-next-line deprecation/deprecation\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    ['boolean', 'string'].includes(typeof value) ||\n    (typeof value === 'number' && Number.isFinite(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && !Number.isFinite(value)) {\n      return `[${value}]`;\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\nexport { normalize, normalizeToSize, normalizeUrlToBase };\n//# sourceMappingURL=normalize.js.map\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * A custom span name set by users guaranteed to be taken over any automatically\n * inferred name. This attribute is removed before the span is sent.\n *\n * @internal only meant for internal SDK usage\n * @hidden\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME = 'sentry.custom_span_name';\n\n/**\n * The id of the profile that this span occurred in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nconst SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nconst SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nconst SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n\nexport { SEMANTIC_ATTRIBUTE_CACHE_HIT, SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, SEMANTIC_ATTRIBUTE_CACHE_KEY, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD, SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_CUSTOM_SPAN_NAME, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_URL_FULL };\n//# sourceMappingURL=semanticAttributes.js.map\n","import { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getClient } from '../currentScopes.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes.js';\nimport { baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader } from '../utils-hoist/baggage.js';\nimport { dropUndefinedKeys, addNonEnumerableProperty } from '../utils-hoist/object.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { getRootSpan, spanToJSON, spanIsSampled } from '../utils/spanUtils.js';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\n/**\n * Freeze the given DSC on the given span.\n */\nfunction freezeDscOnSpan(span, dsc) {\n  const spanWithMaybeDsc = span ;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(trace_id, client) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Get the dynamic sampling context for the currently active scopes.\n */\nfunction getDynamicSamplingContextFromScope(client, scope) {\n  const propagationContext = scope.getPropagationContext();\n  return propagationContext.dsc || getDynamicSamplingContextFromClient(propagationContext.traceId, client);\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const rootSpan = getRootSpan(span);\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan )[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return frozenDsc;\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceState = rootSpan.spanContext().traceState;\n  const traceStateDsc = traceState && traceState.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return dscOnTraceState;\n  }\n\n  // Else, we generate it from the span\n  const dsc = getDynamicSamplingContextFromClient(span.spanContext().traceId, client);\n  const jsonSpan = spanToJSON(rootSpan);\n  const attributes = jsonSpan.data || {};\n  const maybeSampleRate = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE];\n\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = jsonSpan.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasTracingEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasTracingEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n  }\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nfunction spanToBaggageHeader(span) {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n\nexport { freezeDscOnSpan, getDynamicSamplingContextFromClient, getDynamicSamplingContextFromScope, getDynamicSamplingContextFromSpan, spanToBaggageHeader };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && logger.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=handlers.js.map\n","import { isVueViewModel, isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nlet parsedStackResults;\nlet lastKeysCount;\nlet cachedFilenameDebugIds;\n\n/**\n * Returns a map of filenames to debug identifiers.\n */\nfunction getFilenameToDebugIdMap(stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n  if (!debugIdMap) {\n    return {};\n  }\n\n  const debugIdKeys = Object.keys(debugIdMap);\n\n  // If the count of registered globals hasn't changed since the last call, we\n  // can just return the cached result.\n  if (cachedFilenameDebugIds && debugIdKeys.length === lastKeysCount) {\n    return cachedFilenameDebugIds;\n  }\n\n  lastKeysCount = debugIdKeys.length;\n\n  // Build a map of filename -> debug_id.\n  cachedFilenameDebugIds = debugIdKeys.reduce((acc, stackKey) => {\n    if (!parsedStackResults) {\n      parsedStackResults = {};\n    }\n\n    const result = parsedStackResults[stackKey];\n\n    if (result) {\n      acc[result[0]] = result[1];\n    } else {\n      const parsedStack = stackParser(stackKey);\n\n      for (let i = parsedStack.length - 1; i >= 0; i--) {\n        const stackFrame = parsedStack[i];\n        const filename = stackFrame && stackFrame.filename;\n        const debugId = debugIdMap[stackKey];\n\n        if (filename && debugId) {\n          acc[filename] = debugId;\n          parsedStackResults[stackKey] = [filename, debugId];\n          break;\n        }\n      }\n    }\n\n    return acc;\n  }, {});\n\n  return cachedFilenameDebugIds;\n}\n\n/**\n * Returns a list of debug images for the given resources.\n */\nfunction getDebugImagesForResources(\n  stackParser,\n  resource_paths,\n) {\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  if (!filenameDebugIdMap) {\n    return [];\n  }\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\nexport { getDebugImagesForResources, getFilenameToDebugIdMap };\n//# sourceMappingURL=debug-ids.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n/**\n * This is a logger singleton which either logs things or no-ops if logging is not enabled.\n * The logger is a singleton on the carrier, to ensure that a consistent logger is used throughout the SDK.\n */\nconst logger = getGlobalSingleton('logger', makeLogger);\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };\n//# sourceMappingURL=logger.js.map\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n"],"names":["interpolateAs","route","asPathname","query","interpolatedRoute","dynamicRegex","getRouteRegex","dynamicGroups","groups","dynamicMatches","getRouteMatcher","params","Object","keys","every","value","param","repeat","optional","replaced","Array","isArray","replace","map","encodeURIComponent","segment","join","result","cancelIdleCallback","requestIdleCallback","self","bind","window","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","id","clearTimeout","APP_BUILD_MANIFEST","APP_CLIENT_INTERNALS","APP_PATHS_MANIFEST","APP_PATH_ROUTES_MANIFEST","AdapterOutputType","BARREL_OPTIMIZATION_PREFIX","BLOCKED_PAGES","BUILD_ID_FILE","BUILD_MANIFEST","CLIENT_PUBLIC_FILES_PATH","CLIENT_REFERENCE_MANIFEST","CLIENT_STATIC_FILES_PATH","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","CLIENT_STATIC_FILES_RUNTIME_WEBPACK","COMPILER_INDEXES","COMPILER_NAMES","CONFIG_FILES","DEFAULT_RUNTIME_WEBPACK","DEFAULT_SANS_SERIF_FONT","DEFAULT_SERIF_FONT","DEV_CLIENT_MIDDLEWARE_MANIFEST","DEV_CLIENT_PAGES_MANIFEST","DYNAMIC_CSS_MANIFEST","EDGE_RUNTIME_WEBPACK","EDGE_UNSUPPORTED_NODE_APIS","EXPORT_DETAIL","EXPORT_MARKER","FUNCTIONS_CONFIG_MANIFEST","IMAGES_MANIFEST","INTERCEPTION_ROUTE_REWRITE_MANIFEST","MIDDLEWARE_BUILD_MANIFEST","MIDDLEWARE_MANIFEST","MIDDLEWARE_REACT_LOADABLE_MANIFEST","MODERN_BROWSERSLIST_TARGET","NEXT_BUILTIN_DOCUMENT","NEXT_FONT_MANIFEST","PAGES_MANIFEST","PHASE_DEVELOPMENT_SERVER","PHASE_EXPORT","PHASE_INFO","PHASE_PRODUCTION_BUILD","PHASE_PRODUCTION_SERVER","PHASE_TEST","PRERENDER_MANIFEST","REACT_LOADABLE_MANIFEST","ROUTES_MANIFEST","RSC_MODULE_TYPES","SERVER_DIRECTORY","SERVER_FILES_MANIFEST","SERVER_PROPS_ID","SERVER_REFERENCE_MANIFEST","STATIC_PROPS_ID","STATIC_STATUS_PAGES","STRING_LITERAL_DROP_BUNDLE","SUBRESOURCE_INTEGRITY_MANIFEST","SYSTEM_ENTRYPOINTS","TRACE_OUTPUT_VERSION","TURBOPACK_CLIENT_BUILD_MANIFEST","TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST","TURBO_TRACE_DEFAULT_MEMORY_LIMIT","UNDERSCORE_NOT_FOUND_ROUTE","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","WEBPACK_STATS","client","server","edgeServer","Symbol","name","xAvgCharWidth","azAvgWidth","unitsPerEm","Set","addLocale","path","locale","defaultLocale","ignorePrefix","lower","toLowerCase","pathHasPrefix","addPathPrefix","removeLocale","escapeStringRegexp","reHasRegExp","reReplaceRegExp","str","test","omit","object","omitted","forEach","includes","key","withRouter","ComposedComponent","WithRouterWrapper","props","router","useRouter","getInitialProps","origGetInitialProps","compareRouterStates","a","b","stateKeys","length","i","queryKeys","j","queryKey","hasOwnProperty","resolveHref","href","resolveAs","base","urlAsString","formatWithValidation","urlProtoMatch","match","urlAsStringNoProto","slice","urlParts","split","console","error","pathname","normalizedUrl","normalizeRepeatedSlashes","isLocalURL","baseBase","startsWith","asPath","isDynamicRoute","routeRegex","URL","_","finalUrl","normalizePathTrailingSlash","interpolatedAs","searchParams","searchParamsToUrlQuery","hash","resolvedHref","origin","denormalizePagePath","page","_page","normalizePathSep","createRouteLoader","getClientBuildManifest","isAssetError","markAssetError","withFuture","generator","resolver","entry","get","future","Promise","resolve","prom","set","then","catch","delete","err","ASSET_LOAD_ERROR","defineProperty","canPrefetch","hasPrefetch","link","document","createElement","MSInputMethodContext","documentMode","relList","supports","getAssetQueryString","getDeploymentIdQueryOrEmptyString","resolvePromiseWithTimeout","p","ms","reject","cancelled","r","__BUILD_MANIFEST","onBuildManifest","__BUILD_MANIFEST_CB","MS_MAX_IDLE_DELAY","getFilesForRoute","assetPrefix","manifest","allFiles","encodeURIPath","scripts","filter","v","endsWith","__unsafeCreateTrustedScriptURL","css","entrypoints","Map","loadedScripts","styleSheets","routes","maybeExecuteScript","src","script","toString","querySelector","appendScript","onload","onerror","crossOrigin","process","body","appendChild","fetchStyleSheet","fetch","credentials","res","ok","text","content","whenEntrypoint","onEntrypoint","execute","component","exports","default","undefined","old","input","loadRoute","prefetch","devBuildPromiseResolve","all","has","entrypoint","styles","assign","finally","cn","navigator","connection","saveData","effectiveType","output","prefetchViaDom","as","selector","rel","head","getDynamicParam","segmentKey","dynamicParamType","pagePath","fallbackRouteParams","isOptionalCatchall","type","treeSegment","parseParameter","pathSegment","PARAMETER_PATTERN","parseMatchedParameter","entries","existing","push","stringifyUrlQueryParam","isNaN","String","urlQueryToSearchParams","URLSearchParams","item","append","target","searchParamsList","safeCompile","safePathToRegexp","safeRegexpToFunction","safeRouteMatcher","options","pathToRegexp","needsNormalization","hasAdjacentParameterIssues","routeToUse","normalizeAdjacentParameters","normalizedRoute","retryError","compile","regexp","originalMatcher","regexpToFunction","stripParameterSeparators","matcherFn","policy","url","getPolicy","trustedTypes","createPolicy","createHTML","createScript","createScriptURL","parseRelativeUrl","parseQuery","globalBase","getLocationOrigin","resolvedBase","location","search","slashes","handleClientScriptLoad","initScriptLoader","ScriptCache","LoadCache","loadScript","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","stylesheets","cacheKey","add","afterLoad","el","loadPromise","addEventListener","e","call","innerHTML","__html","textContent","setAttributesFromProps","setAttribute","insertStylesheets","ReactDOM","preinit","stylesheet","scriptLoaderItems","querySelectorAll","getAttribute","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","readyState","concat","styleSrc","JSON","stringify","preload","integrity","module","getSortedRouteObjects","getSortedRoutes","UrlNode","insert","urlPath","_insert","Boolean","smoosh","_smoosh","prefix","childrenPaths","sort","slugName","splice","indexOf","restSlugName","optionalRestSlugName","c","reduce","prev","curr","placeholder","unshift","urlPaths","slugNames","isCatchAll","Error","nextSegment","segmentName","isOptional","substring","handleSlug","previousSlug","nextSlug","slug","normalizedPages","root","objects","getter","indexes","pathnames","formatUrl","urlObjectKeys","slashedProtocols","urlObj","auth","hostname","protocol","host","port","querystring","formatNextPathnameInfo","info","buildId","trailingSlash","removeTrailingSlash","addPathSuffix","basePath","createKey","Router","matchesMiddleware","buildCancellationError","matchers","pageLoader","getMiddleware","parsePath","cleanedAs","hasBasePath","removeBasePath","asWithBasePathAndLocale","addBasePath","some","RegExp","m","stripOrigin","prepareUrlAs","resolvedAs","hrefWasAbsolute","asWasAbsolute","preparedUrl","preparedAs","resolveDynamicRoute","pages","cleanPathname","re","withMiddlewareEffects","fetchData","data","effect","getMiddlewareData","response","nextConfig","i18n","locales","rewriteHeader","headers","rewriteTarget","matchedPath","MATCHED_PATH_HEADER","parsedRewriteTarget","pathnameInfo","getNextPathnameInfo","parseData","fsPathname","getPageList","__rewrites","rewrites","normalizeLocalePath","parsedSource","source","resolvedPathname","matches","parsedAs","destination","redirectTarget","newAs","newUrl","dataHref","json","SSG_DATA_NOT_FOUND","tryToParseAsJSON","parse","fetchNextData","inflightCache","isPrefetch","hasMiddleware","isServerRender","parseJSON","persistCache","isBackground","unstable_skipClientCache","getData","fetchRetry","attempts","method","status","purpose","notFound","env","NODE_ENV","message","random","handleHardNavigation","getCancelledHandler","cancel","clc","handleCancelled","reload","back","history","forward","change","_bfl","skipNavigate","_bfl_s","_bfl_d","staticFilterData","dynamicFilterData","BloomFilter","require","__routerFilterStatic","__routerFilterDynamic","numHashes","numItems","errorRate","import","matchesBflStatic","matchesBflDynamic","curAs","allowMatchCurrent","pathsToCheck","asNoSlash","asNoSlashLocale","normalizedAS","contains","curAsParts","currentPart","forcedScroll","routeInfo","isQueryUpdating","_h","shallow","shouldResolveHref","_shouldResolveHref","nextState","state","readyStateChange","isReady","isSsr","prevLocale","ST","mark","scroll","routeProps","_inFlightRoute","events","emit","localeChange","onlyAHashChange","changeState","components","isError","parsed","urlIsNew","parsedAsPathname","__appRouter","isMiddlewareRewrite","isMiddlewareMatch","routeMatch","shouldInterpolate","missingParams","isErrorRoute","getRouteInfo","isPreview","isFallback","cleanedParsedPathname","rewriteAs","prefixedAs","curRouteMatch","Component","unstable_scriptLoader","__N_SSG","__N_SSP","pageProps","__N_REDIRECT","__N_REDIRECT_BASE_PATH","parsedHref","__N_PREVIEW","notFoundRoute","fetchComponent","isNotFound","__NEXT_DATA__","statusCode","isValidShallowRoute","upcomingScrollState","shouldScroll","x","y","resetScroll","upcomingRouterState","canSkipUpdating","scrollToHash","getURL","_shallow","__N","_key","handleRouteInfoError","loadErrorFail","gipErr","routeInfoErr","requestedRoute","existingInfo","cachedRouteInfo","fetchNextDataParams","getDataHref","skipInterpolation","sbc","sdc","resolvedRoute","isAPIRoute","mod","wasBailedPrefetch","shouldFetchData","_getData","fetched","getProperError","sub","beforePopState","_bps","oldUrlNoHash","oldHash","newUrlNoHash","newHash","disableSmoothScrollDuringRouteTransition","scrollTo","rawHash","decodeURIComponent","idEl","getElementById","scrollIntoView","nameEl","getElementsByName","onlyHashChange","isBot","userAgent","urlPathname","originalPathname","_isSsg","isSsg","priority","componentResult","loadPage","fn","ctx","App","AppTree","_wrapApp","loadGetInitialProps","constructor","initialProps","wrapApp","subscription","domainLocales","isFirstPopStateEvent","onPopState","__NA","initial","autoExportDynamic","autoExport","isLocaleDomain","gssp","gip","isExperimentalCompile","appGip","gsp","__NEXT_HAS_REWRITES","_initialMatchesMiddlewarePromise","mitt","isAbsoluteUrl","locationOrigin","resolved","cache","WeakMap","detectedLocale","lowercasedLocales","segments","index","DecodeError","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","WEB_VITALS","execOnce","getDisplayName","isResSent","stringifyError","used","args","ABSOLUTE_URL_REGEX","displayName","finished","headersSent","urlNoQuery","performance","code","stack","from","items","DEFAULT_ERROR_RATE","export","numBits","bitArray","getHashValues","hashValues","h","imul","ceil","log","fill","TEST_ROUTE","TEST_STRICT_ROUTE","strict","isInterceptionRouteAppPath","extractInterceptionRouteInformation","interceptedRoute","createRouter","makePublicRouterInstance","singletonRouter","readyCallbacks","ready","callback","urlPropertyFields","coreMethodFields","getRouter","field","routerEvents","on","event","eventField","charAt","toUpperCase","_singletonRouter","React","RouterContext","instance","property","scopedRouter","detectDomainLocale","removePathPrefix","pathnameNoDataPrefix","paths","i18nProvider","analyze","withoutPrefix","suffix","getAssetPathFromRoute","ext","create","handler","off","evts","exec","decode","group","pos","getNamedMiddlewareRegex","getNamedRouteRegex","getParametrizedRoute","includeSuffix","includePrefix","groupIndex","markerMatch","INTERCEPTION_ROUTE_MARKERS","find","paramMatches","s","parameterizedRoute","excludeOptionalTrailingSlash","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","getNamedParametrizedRoute","prefixRouteKeys","routeKey","fromCharCode","floor","hasInterceptionMarker","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_QUERY_PARAM_PREFIX","namedParameterizedRoute","namedRegex","catchAll","catchAllRegex","catchAllGroupedRegex"],"sourceRoot":"","ignoreList":[0,4,6,7,9,10,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,169,171,172,174,175,177,178,179,180,181,182,183,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,209,210,211,212,213,216,217,218,219,220,221,222,223,224,226,228,229,232,233,234,236,238,239,240,241,242,247,250,253,255,257,259,260,261,262,263,264,266,267,268,269,270,271]}