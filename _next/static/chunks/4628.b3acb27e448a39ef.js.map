{"version":3,"file":"static/chunks/4628.b3acb27e448a39ef.js","mappings":"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","sources":["webpack://_N_E/./src/app/home/HomePlannerIsland.planner.tsx","webpack://_N_E/./src/lib/theme-hooks.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport dynamic from \"next/dynamic\"\nimport Link from \"next/link\"\nimport {\n  useGlitchLandingSplash,\n  useHomePlannerOverview,\n  useHydratedCallback,\n} from \"@/components/home\"\nimport type {\n  HeroPlannerCardsProps,\n  HeroPlannerHighlight,\n  PlannerOverviewProps,\n} from \"@/components/home\"\nimport type { HomeHeroSectionProps } from \"@/components/home/home-landing/types\"\nimport { PageShell, Button, ThemeToggle, SectionCard } from \"@/components/ui\"\nimport { PlannerProvider } from \"@/components/planner\"\nimport { useTheme } from \"@/lib/theme-context\"\nimport { useThemeQuerySync } from \"@/lib/theme-hooks\"\nimport type { Variant } from \"@/lib/theme\"\nimport { cn, withBasePath } from \"@/lib/utils\"\nimport {\n  HeroPlannerCardsFallbackContent,\n  HomeHeroSectionFallbackContent,\n  type HeroPlannerCardsFallbackContentProps,\n  type HomeHeroSectionFallbackContentProps,\n} from \"./fallback-content\"\nimport styles from \"../page-client.module.css\"\n\ntype HomeSplashProps = {\n  active: boolean\n  onExited?: () => void\n}\n\nconst HomeSplash = dynamic<HomeSplashProps>(\n  () => import(\"@/components/home/HomeSplash\").then((mod) => mod.HomeSplash),\n  { ssr: false },\n)\n\nconst HomeHeroSection = dynamic(\n  () =>\n    import(\"@/components/home/home-landing/HomeHeroSection\").then(\n      (mod) => mod.HomeHeroSection,\n    ),\n  {\n    loading: () => <HomeHeroSectionFallback />,\n  },\n) as React.ComponentType<HomeHeroSectionProps>\n\nconst HeroPlannerCards = dynamic(\n  () =>\n    import(\"@/components/home/HeroPlannerCards\").then((mod) => mod.HeroPlannerCards),\n  {\n    loading: () => <HeroPlannerCardsFallback />,\n  },\n) as React.ComponentType<HeroPlannerCardsProps>\n\nconst HeroSectionFallbackContext =\n  React.createContext<HomeHeroSectionFallbackContentProps | null>(null)\n\nconst HeroPlannerCardsFallbackContext =\n  React.createContext<HeroPlannerCardsFallbackContentProps | null>(null)\n\nexport type HomePlannerIslandPlannerProps = {\n  heroHeadingId: string\n  overviewHeadingId: string\n  glitchLandingEnabled: boolean\n}\n\nfunction HomeHeroSectionFallback() {\n  const fallbackProps = React.useContext(HeroSectionFallbackContext)\n  const headingId = fallbackProps?.headingId ?? \"home-hero-fallback\"\n\n  return (\n    <HomeHeroSectionFallbackContent\n      headingId={headingId}\n      actions={fallbackProps?.actions}\n    />\n  )\n}\n\nfunction HeroPlannerCardsFallback() {\n  const fallbackProps = React.useContext(HeroPlannerCardsFallbackContext)\n\n  return (\n    <HeroPlannerCardsFallbackContent\n      className={fallbackProps?.className}\n      summaryKeys={fallbackProps?.summaryKeys}\n    />\n  )\n}\n\ntype InertableElement = HTMLElement & { inert: boolean }\n\nfunction isInertable(element: Element): element is InertableElement {\n  return \"inert\" in element\n}\n\nfunction setElementInert(element: Element, inert: boolean) {\n  if (isInertable(element)) {\n    element.inert = inert\n    return\n  }\n\n  if (inert) {\n    element.setAttribute(\"inert\", \"\")\n  } else {\n    element.removeAttribute(\"inert\")\n  }\n}\n\nconst weeklyHighlights = [\n  {\n    id: \"strategy-sync\",\n    title: \"Strategy sync\",\n    schedule: \"Today · 3:00 PM\",\n    summary: \"Align backlog for the Q2 milestone and confirm owners.\",\n  },\n  {\n    id: \"retro\",\n    title: \"Sprint retro\",\n    schedule: \"Wed · 11:00 AM\",\n    summary: \"Collect insights to finalize review prompts and next sprint goals.\",\n  },\n  {\n    id: \"review-window\",\n    title: \"Review window\",\n    schedule: \"Fri · All day\",\n    summary: \"Encourage the team to log highlights before the week wraps.\",\n  },\n] as const satisfies readonly HeroPlannerHighlight[]\n\nconst homeBackdropClassName =\n  'relative isolate overflow-hidden bg-blob-primary bg-no-repeat after:pointer-events-none after:absolute after:inset-0 after:-z-10 after:bg-gradient-blob-primary after:opacity-40 after:content-[\"\"]'\nconst sectionCardOverlayClassName =\n  'relative overflow-hidden before:pointer-events-none before:absolute before:inset-[-20%] before:-z-10 before:bg-gradient-blob-primary before:opacity-25 before:content-[\"\"]'\n\nfunction HomePageContent({\n  heroHeadingId,\n  overviewHeadingId,\n  glitchLandingEnabled,\n}: HomePlannerIslandPlannerProps) {\n  const [theme] = useTheme()\n  useThemeQuerySync()\n\n  return (\n    <PlannerProvider>\n      <HomePagePlannerContent\n        themeVariant={theme.variant}\n        glitchLandingEnabled={glitchLandingEnabled}\n        heroHeadingId={heroHeadingId}\n        overviewHeadingId={overviewHeadingId}\n      />\n    </PlannerProvider>\n  )\n}\n\ntype HomePagePlannerContentProps = {\n  themeVariant: Variant\n  glitchLandingEnabled: boolean\n  heroHeadingId: string\n  overviewHeadingId: string\n}\n\nfunction HomePagePlannerContent({\n  themeVariant,\n  glitchLandingEnabled,\n  heroHeadingId,\n  overviewHeadingId,\n}: HomePagePlannerContentProps) {\n  const plannerOverviewProps = useHomePlannerOverview()\n  const { hydrated } = plannerOverviewProps\n  const contentRef = React.useRef<HTMLElement>(null)\n\n  const {\n    isSplashVisible,\n    isSplashMounted,\n    handleClientReady,\n    handleSplashExit,\n  } = useGlitchLandingSplash(glitchLandingEnabled, hydrated)\n\n  React.useEffect(() => {\n    const content = contentRef.current\n\n    if (!content) {\n      return\n    }\n\n    setElementInert(content, isSplashVisible)\n\n    if (isSplashVisible && document.activeElement === content) {\n      ;(document.activeElement as HTMLElement).blur()\n    }\n\n    return () => {\n      if (!content.isConnected) {\n        return\n      }\n\n      setElementInert(content, false)\n    }\n  }, [isSplashVisible])\n\n  return (\n    <div className={cn(styles.root, homeBackdropClassName)}>\n      {glitchLandingEnabled && isSplashMounted ? (\n        <HomeSplash active={isSplashVisible} onExited={handleSplashExit} />\n      ) : null}\n      <section\n        ref={contentRef}\n        tabIndex={-1}\n        className={styles.content}\n        data-state={isSplashVisible ? \"splash\" : \"ready\"}\n        aria-hidden={isSplashVisible ? true : undefined}\n        data-inert={isSplashVisible ? \"\" : undefined}\n        data-home-content=\"\"\n      >\n        <HomePageBody\n          themeVariant={themeVariant}\n          plannerOverviewProps={plannerOverviewProps}\n          onClientReady={glitchLandingEnabled ? handleClientReady : undefined}\n          glitchLandingEnabled={glitchLandingEnabled}\n          heroHeadingId={heroHeadingId}\n          overviewHeadingId={overviewHeadingId}\n        />\n      </section>\n    </div>\n  )\n}\n\ntype HomePageBodyProps = {\n  themeVariant: Variant\n  plannerOverviewProps: PlannerOverviewProps\n  onClientReady?: () => void\n  glitchLandingEnabled: boolean\n  heroHeadingId: string\n  overviewHeadingId: string\n}\n\nfunction HomePageBody({\n  themeVariant,\n  plannerOverviewProps,\n  onClientReady,\n  glitchLandingEnabled,\n  heroHeadingId,\n  overviewHeadingId,\n}: HomePageBodyProps) {\n  const { hydrated } = plannerOverviewProps\n  const heroActions = React.useMemo<React.ReactNode>(\n    () => (\n      <>\n        <ThemeToggle className=\"shrink-0\" />\n        <Button\n          asChild\n          variant=\"default\"\n          size=\"md\"\n          tactile\n          className=\"whitespace-nowrap\"\n        >\n          <Link href={withBasePath(\"/planner\", { skipForNextLink: true })}>Plan Week</Link>\n        </Button>\n      </>\n    ),\n    [],\n  )\n\n  useHydratedCallback(hydrated, onClientReady)\n\n  if (!glitchLandingEnabled) {\n    return (\n      <LegacyHomePageBody\n        plannerOverviewProps={plannerOverviewProps}\n        heroActions={heroActions}\n        heroHeadingId={heroHeadingId}\n        overviewHeadingId={overviewHeadingId}\n      />\n    )\n  }\n\n  return (\n    <GlitchLandingLayout\n      heroActions={heroActions}\n      plannerOverviewProps={plannerOverviewProps}\n      themeVariant={themeVariant}\n      heroHeadingId={heroHeadingId}\n      overviewHeadingId={overviewHeadingId}\n    />\n  )\n}\n\ntype GlitchLandingLayoutProps = {\n  heroActions: React.ReactNode\n  plannerOverviewProps: PlannerOverviewProps\n  themeVariant: Variant\n  heroHeadingId: string\n  overviewHeadingId: string\n}\n\nconst GlitchLandingLayout = React.memo(function GlitchLandingLayout({\n  heroActions,\n  plannerOverviewProps,\n  themeVariant,\n  heroHeadingId,\n  overviewHeadingId,\n}: GlitchLandingLayoutProps) {\n  const summaryKeys = plannerOverviewProps.summary.items.map((item) => item.key)\n\n  return (\n    <>\n      <PageShell\n        as=\"header\"\n        grid\n        aria-labelledby={heroHeadingId}\n        className=\"pt-[var(--space-6)] md:pt-[var(--space-8)]\"\n      >\n        <SectionCard\n          aria-labelledby={heroHeadingId}\n          className={cn('col-span-full', sectionCardOverlayClassName)}\n        >\n          <SectionCard.Body className=\"md:p-[var(--space-6)]\">\n            <HeroSectionFallbackContext.Provider\n              value={{\n                actions: heroActions,\n                headingId: heroHeadingId,\n              }}\n            >\n              <HomeHeroSection\n                variant={themeVariant}\n                actions={heroActions}\n                headingId={heroHeadingId}\n              />\n            </HeroSectionFallbackContext.Provider>\n          </SectionCard.Body>\n        </SectionCard>\n      </PageShell>\n      <PageShell\n        as=\"section\"\n        grid\n        role=\"region\"\n        aria-labelledby={overviewHeadingId}\n        className=\"mt-[var(--space-6)] pb-[var(--space-6)] md:mt-[var(--space-8)] md:pb-[var(--space-8)]\"\n      >\n        <SectionCard\n          aria-labelledby={overviewHeadingId}\n          className={cn('col-span-full', sectionCardOverlayClassName)}\n        >\n          <SectionCard.Header\n            id={overviewHeadingId}\n            sticky={false}\n            title=\"Planner overview\"\n            titleAs=\"h2\"\n            titleClassName=\"text-title font-semibold tracking-[-0.01em]\"\n          />\n          <SectionCard.Body className=\"md:p-[var(--space-6)]\">\n            <HeroPlannerCardsFallbackContext.Provider\n              value={{ summaryKeys }}\n            >\n              <HeroPlannerCards\n                variant={themeVariant}\n                plannerOverviewProps={plannerOverviewProps}\n                highlights={weeklyHighlights}\n              />\n            </HeroPlannerCardsFallbackContext.Provider>\n          </SectionCard.Body>\n        </SectionCard>\n      </PageShell>\n    </>\n  )\n})\n\nGlitchLandingLayout.displayName = \"GlitchLandingLayout\"\n\nexport default function HomePlannerIslandPlanner({\n  heroHeadingId,\n  overviewHeadingId,\n  glitchLandingEnabled,\n}: HomePlannerIslandPlannerProps) {\n  return (\n    <HomePageContent\n      heroHeadingId={heroHeadingId}\n      overviewHeadingId={overviewHeadingId}\n      glitchLandingEnabled={glitchLandingEnabled}\n    />\n  )\n}\n\ntype LegacyHomePageBodyProps = {\n  plannerOverviewProps: PlannerOverviewProps\n  heroActions: React.ReactNode\n  heroHeadingId: string\n  overviewHeadingId: string\n}\n\nconst LegacyHomePageBody = React.memo(function LegacyHomePageBody({\n  plannerOverviewProps,\n  heroActions,\n  heroHeadingId,\n  overviewHeadingId,\n}: LegacyHomePageBodyProps) {\n  return (\n    <LegacyLandingLayout\n      plannerOverviewProps={plannerOverviewProps}\n      heroActions={heroActions}\n      heroHeadingId={heroHeadingId}\n      overviewHeadingId={overviewHeadingId}\n    />\n  )\n})\n\nLegacyHomePageBody.displayName = \"LegacyHomePageBody\"\n\ntype LegacyLandingLayoutProps = {\n  plannerOverviewProps: PlannerOverviewProps\n  heroActions: React.ReactNode\n  heroHeadingId: string\n  overviewHeadingId: string\n}\n\nconst LegacyLandingLayout = React.memo(function LegacyLandingLayout({\n  plannerOverviewProps,\n  heroActions,\n  heroHeadingId,\n  overviewHeadingId,\n}: LegacyLandingLayoutProps) {\n  const { hydrating, summary, focus, goals, calendar } = plannerOverviewProps\n  const activeGoals = goals.active\n\n  return (\n    <>\n      <PageShell\n        as=\"header\"\n        grid\n        aria-labelledby={heroHeadingId}\n        className=\"pt-[var(--space-6)] md:pt-[var(--space-8)]\"\n      >\n        <SectionCard\n          aria-labelledby={heroHeadingId}\n          className={cn('col-span-full', sectionCardOverlayClassName)}\n        >\n          <SectionCard.Header\n            id={heroHeadingId}\n            title=\"Planner preview\"\n            titleAs=\"h1\"\n            titleClassName=\"text-balance text-title-lg font-semibold tracking-[-0.01em]\"\n            sticky={false}\n          />\n          <SectionCard.Body className=\"flex flex-col gap-[var(--space-4)] md:flex-row md:items-center md:justify-between\">\n            <div className=\"space-y-[var(--space-3)]\">\n              <p className=\"text-body text-muted-foreground\">\n                Planner highlights your next focus day, surfaces weekly goals, and gives the team a quick win tracker.\n              </p>\n              <p className=\"text-body text-muted-foreground\">\n                Use the controls below to switch themes or open the full planner experience.\n              </p>\n            </div>\n            <div\n              role=\"group\"\n              aria-label=\"Planner actions\"\n              className=\"flex w-full flex-col gap-[var(--space-3)] sm:w-auto sm:flex-row sm:items-center sm:justify-end\"\n            >\n              {heroActions}\n            </div>\n          </SectionCard.Body>\n        </SectionCard>\n      </PageShell>\n      <PageShell\n        as=\"section\"\n        grid\n        role=\"region\"\n        aria-labelledby={overviewHeadingId}\n        className=\"mt-[var(--space-6)] pb-[var(--space-6)] md:mt-[var(--space-8)] md:pb-[var(--space-8)]\"\n      >\n        <SectionCard\n          aria-labelledby={overviewHeadingId}\n          className={cn('col-span-full', sectionCardOverlayClassName)}\n        >\n          <SectionCard.Header\n            id={overviewHeadingId}\n            sticky={false}\n            title=\"Planner overview\"\n            titleAs=\"h2\"\n            titleClassName=\"text-title font-semibold tracking-[-0.01em]\"\n          />\n          <SectionCard.Body\n            className=\"space-y-[var(--space-5)]\"\n            aria-busy={hydrating}\n            aria-live={hydrating ? \"polite\" : undefined}\n          >\n            <div className=\"grid grid-cols-1 gap-[var(--space-3)] sm:grid-cols-2 md:grid-cols-3\" role=\"list\">\n              {summary.items.map((item) => (\n                <article\n                  key={item.key}\n                  className=\"flex flex-col gap-[var(--space-2)] rounded-[var(--radius-lg)] border border-border bg-surface p-[var(--space-3)]\"\n                  role=\"listitem\"\n                >\n                  <p className=\"text-label text-muted-foreground\">{item.label}</p>\n                  <p className=\"text-ui font-semibold text-foreground text-balance\">\n                    {item.value}\n                  </p>\n                  <Link\n                    href={withBasePath(item.href, { skipForNextLink: true })}\n                    className=\"text-label font-medium text-primary transition-colors hover:text-primary-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\"\n                  >\n                    {item.cta}\n                  </Link>\n                </article>\n              ))}\n            </div>\n            <div className=\"grid grid-cols-1 gap-[var(--space-4)] sm:grid-cols-2\">\n              <section className=\"space-y-[var(--space-3)]\" aria-labelledby=\"legacy-focus-heading\">\n                <div className=\"flex w-full flex-col items-start gap-[var(--space-2)] sm:flex-row sm:items-center sm:justify-between\">\n                  <h3 id=\"legacy-focus-heading\" className=\"text-body font-semibold text-foreground\">\n                    {focus.label}\n                  </h3>\n                  <p className=\"text-label text-muted-foreground\">\n                    {hydrating ? \"—\" : `${focus.doneCount}/${focus.totalCount} done`}\n                  </p>\n                </div>\n                <ul className=\"grid gap-[var(--space-2)]\" role=\"list\">\n                  {focus.tasks.map((task) => (\n                    <li\n                      key={task.id}\n                      className=\"flex flex-col gap-[var(--space-1)] rounded-[var(--radius-md)] border border-border/80 bg-card/70 px-[var(--space-3)] py-[var(--space-2)]\"\n                    >\n                      <span className=\"text-ui font-medium text-foreground\">{task.title}</span>\n                      {task.projectName ? (\n                        <span className=\"text-label text-muted-foreground\">{task.projectName}</span>\n                      ) : null}\n                    </li>\n                  ))}\n                </ul>\n                {focus.remainingTasks > 0 ? (\n                  <p className=\"text-label text-muted-foreground\">\n                    +{focus.remainingTasks} additional task{focus.remainingTasks === 1 ? \"\" : \"s\"} scheduled for the day\n                  </p>\n                ) : null}\n              </section>\n              <section className=\"space-y-[var(--space-3)]\" aria-labelledby=\"legacy-goals-heading\">\n                <div className=\"flex w-full flex-col items-start gap-[var(--space-2)] sm:flex-row sm:items-center sm:justify-between\">\n                  <h3 id=\"legacy-goals-heading\" className=\"text-body font-semibold text-foreground\">\n                    {goals.label ?? \"Goals\"}\n                  </h3>\n                  <p className=\"text-label text-muted-foreground\">\n                    {hydrating ? \"—\" : `${goals.completed}/${goals.total} complete`}\n                  </p>\n                </div>\n                <div className=\"flex flex-col gap-[var(--space-2)] rounded-[var(--radius-md)] border border-border/80 bg-card/70 p-[var(--space-3)]\">\n                  {activeGoals.length > 0 ? (\n                    <ul className=\"grid gap-[var(--space-2)]\" role=\"list\">\n                      {activeGoals.map((goal) => (\n                        <li key={goal.id} className=\"flex flex-col gap-[var(--space-1)]\">\n                          <span className=\"text-ui font-medium text-foreground\">{goal.title}</span>\n                          {goal.detail ? (\n                            <span className=\"text-label text-muted-foreground\">{goal.detail}</span>\n                          ) : null}\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p className=\"text-label text-muted-foreground\">\n                      {hydrating ? \"Loading goals…\" : goals.emptyMessage}\n                    </p>\n                  )}\n                  <p className=\"text-label text-muted-foreground\">\n                    {hydrating\n                      ? \"Momentum updates after data loads.\"\n                      : goals.total === goals.completed && goals.total > 0\n                        ? goals.allCompleteMessage\n                        : \"Track progress without the glitch visuals.\"}\n                  </p>\n                </div>\n              </section>\n            </div>\n            <section className=\"space-y-[var(--space-3)]\" aria-labelledby=\"legacy-calendar-heading\">\n              <div className=\"flex w-full flex-col items-start gap-[var(--space-2)] sm:flex-row sm:items-center sm:justify-between\">\n                <h3 id=\"legacy-calendar-heading\" className=\"text-body font-semibold text-foreground\">\n                  {calendar.label}\n                </h3>\n                <p className=\"text-label text-muted-foreground\">{calendar.summary}</p>\n              </div>\n              <div className=\"flex flex-wrap gap-[var(--space-2)]\">\n                {calendar.days.map((day) => (\n                  <span\n                    key={day.iso}\n                    className=\"inline-flex min-w-[var(--space-8)] items-center justify-center rounded-full border border-border bg-card/60 px-[var(--space-2)] py-[var(--space-1)] text-label text-muted-foreground\"\n                    data-state={day.selected ? \"selected\" : undefined}\n                    aria-current={day.selected ? \"date\" : undefined}\n                  >\n                    <span className=\"font-semibold text-foreground\">{day.weekday}</span>\n                    <span className=\"ml-[var(--space-1)] text-label text-muted-foreground\">{day.dayNumber}</span>\n                  </span>\n                ))}\n              </div>\n            </section>\n          </SectionCard.Body>\n        </SectionCard>\n      </PageShell>\n    </>\n  )\n})\n\nLegacyLandingLayout.displayName = \"LegacyLandingLayout\"\n","\"use client\";\n\nimport * as React from \"react\";\nimport { useRouter, usePathname, useSearchParams } from \"next/navigation\";\nimport { useTheme } from \"@/lib/theme-context\";\nimport {\n  VARIANTS,\n  BG_CLASSES,\n  type Variant,\n  type Background,\n} from \"@/lib/theme\";\nimport { withoutBasePath } from \"@/lib/utils\";\n\nconst normalizePathForComparison = (path: string): string => {\n  if (!path) {\n    return \"/\";\n  }\n\n  const trimmed = path.endsWith(\"/\") && path !== \"/\"\n    ? path.replace(/\\/+$/, \"\")\n    : path;\n\n  return trimmed.length > 0 ? trimmed : \"/\";\n};\n\nexport function useThemeQuerySync(): void {\n  const router = useRouter();\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  const paramsKey = searchParams.toString();\n  const params = React.useMemo(\n    () => new URLSearchParams(paramsKey),\n    [paramsKey],\n  );\n  const [theme, setTheme] = useTheme();\n\n  React.useEffect(() => {\n    if (typeof window === \"undefined\") return;\n    const themeParam = params.get(\"theme\");\n    const bgParam = params.get(\"bg\");\n    setTheme((prev) => {\n      const next = { ...prev };\n      if (themeParam && VARIANTS.some((v) => v.id === themeParam)) {\n        next.variant = themeParam as Variant;\n      }\n      if (bgParam) {\n        const idx = Number(bgParam);\n        if (!Number.isNaN(idx) && idx >= 0 && idx < BG_CLASSES.length) {\n          next.bg = idx as Background;\n        }\n      }\n      if (next.variant === prev.variant && next.bg === prev.bg) {\n        return prev;\n      }\n      return next;\n    });\n  }, [params, setTheme]);\n\n  React.useEffect(() => {\n    const currentTheme = params.get(\"theme\");\n    const currentBg = params.get(\"bg\");\n    if (currentTheme === theme.variant && currentBg === String(theme.bg)) {\n      return;\n    }\n\n    if (typeof window === \"undefined\") {\n      return;\n    }\n\n    const activePath = normalizePathForComparison(\n      withoutBasePath(pathname || \"/\"),\n    );\n    const locationPath = normalizePathForComparison(\n      withoutBasePath(window.location.pathname || \"/\"),\n    );\n\n    if (locationPath !== activePath) {\n      return;\n    }\n\n    let timeout: number | null = null;\n\n    timeout = window.setTimeout(() => {\n      const currentPath = normalizePathForComparison(\n        withoutBasePath(window.location.pathname || \"/\"),\n      );\n\n      if (currentPath !== activePath) {\n        return;\n      }\n\n      const nextParams = new URLSearchParams(params);\n      nextParams.set(\"theme\", theme.variant);\n      nextParams.set(\"bg\", String(theme.bg));\n\n      const queryString = nextParams.toString();\n      const hashFragment = window.location.hash ?? \"\";\n      const basePathAwarePath = window.location.pathname || \"/\";\n      const nextUrl = queryString\n        ? `${basePathAwarePath}?${queryString}`\n        : basePathAwarePath;\n\n      router.replace(`${nextUrl}${hashFragment}`, { scroll: false });\n    }, 50);\n\n    return () => {\n      if (timeout !== null) {\n        window.clearTimeout(timeout);\n      }\n    };\n  }, [theme, router, pathname, params]);\n}\n"],"names":["HomeSplash","dynamic","then","mod","ssr","HomeHeroSection","loading","HomeHeroSectionFallback","HeroPlannerCards","HeroPlannerCardsFallback","HeroSectionFallbackContext","React","HeroPlannerCardsFallbackContext","fallbackProps","headingId","HomeHeroSectionFallbackContent","actions","HeroPlannerCardsFallbackContent","className","summaryKeys","setElementInert","element","inert","isInertable","setAttribute","removeAttribute","weeklyHighlights","id","title","schedule","summary","sectionCardOverlayClassName","HomePageContent","heroHeadingId","overviewHeadingId","glitchLandingEnabled","theme","useTheme","useThemeQuerySync","PlannerProvider","HomePagePlannerContent","themeVariant","variant","plannerOverviewProps","useHomePlannerOverview","hydrated","contentRef","isSplashVisible","isSplashMounted","handleClientReady","handleSplashExit","useGlitchLandingSplash","content","current","document","activeElement","blur","isConnected","div","cn","styles","homeBackdropClassName","active","onExited","section","ref","tabIndex","aria-hidden","undefined","data-inert","data-home-content","HomePageBody","onClientReady","heroActions","ThemeToggle","Button","asChild","size","tactile","Link","href","withBasePath","skipForNextLink","useHydratedCallback","GlitchLandingLayout","LegacyHomePageBody","items","map","item","key","PageShell","as","grid","aria-labelledby","SectionCard","Body","Provider","value","role","Header","sticky","titleAs","titleClassName","highlights","HomePlannerIslandPlanner","displayName","LegacyLandingLayout","goals","hydrating","focus","calendar","activeGoals","p","aria-label","aria-busy","aria-live","article","label","cta","h3","doneCount","totalCount","ul","tasks","li","span","task","projectName","remainingTasks","completed","total","length","goal","detail","emptyMessage","allCompleteMessage","days","data-state","day","selected","aria-current","weekday","dayNumber","iso","normalizePathForComparison","path","trimmed","endsWith","replace","router","useRouter","pathname","usePathname","paramsKey","useSearchParams","toString","params","URLSearchParams","setTheme","themeParam","get","bgParam","next","prev","VARIANTS","some","v","idx","Number","isNaN","BG_CLASSES","bg","currentTheme","currentBg","String","activePath","withoutBasePath","window","location","timeout","setTimeout","nextParams","set","queryString","hashFragment","hash","basePathAwarePath","nextUrl","scroll","clearTimeout"],"sourceRoot":"","ignoreList":[]}