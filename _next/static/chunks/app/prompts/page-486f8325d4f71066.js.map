{"version":3,"file":"static/chunks/app/prompts/page-486f8325d4f71066.js","mappings":"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","sources":["webpack://_N_E/./src/components/prompts/PromptsPage.tsx","webpack://_N_E/./src/components/prompts/types.ts","webpack://_N_E/./src/components/prompts/usePromptLibrary.ts","webpack://_N_E/./src/components/prompts/useNotes.ts","webpack://_N_E/./src/components/prompts/usePersonas.ts","webpack://_N_E/./src/components/prompts/PromptsHeader.tsx","webpack://_N_E/./src/components/prompts/useChatPrompts.ts","webpack://_N_E/./src/components/prompts/useCodexPrompts.ts","webpack://_N_E/?c6d6"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\n\nimport { PageShell } from \"@/components/ui\";\nimport { Tabs, TabList, TabPanel, type TabListItem } from \"@/components/ui/primitives/Tabs\";\nimport { usePersistentState } from \"@/lib/db\";\nimport { PromptsHeader } from \"./PromptsHeader\";\nimport type { Persona, PromptWithTitle } from \"./types\";\nimport { useChatPrompts } from \"./useChatPrompts\";\nimport { useCodexPrompts } from \"./useCodexPrompts\";\nimport { useNotes } from \"./useNotes\";\nimport { usePersonas } from \"./usePersonas\";\n\nconst ChatPromptsTab = React.lazy(async () => ({\n  default: (await import(\"./ChatPromptsTab\")).ChatPromptsTab,\n}));\n\nconst CodexPromptsTab = React.lazy(async () => ({\n  default: (await import(\"./CodexPromptsTab\")).CodexPromptsTab,\n}));\n\nconst NotesTab = React.lazy(async () => ({\n  default: (await import(\"./NotesTab\")).NotesTab,\n}));\n\nconst TAB_STORAGE_KEY = \"prompts.tab.v1\" as const;\n\nconst BASE_TAB_ITEMS = [\n  { key: \"chat\", label: \"ChatGPT\" },\n  { key: \"codex\", label: \"Codex review\" },\n  { key: \"notes\", label: \"Notes\" },\n] as const;\n\ntype PromptsTabKey = (typeof BASE_TAB_ITEMS)[number][\"key\"];\n\nexport function PromptsPage() {\n  const {\n    prompts: chatPrompts,\n    query: chatQuery,\n    setQuery: setChatQuery,\n    filtered: chatFiltered,\n    save: saveChatPrompt,\n  } = useChatPrompts();\n  const {\n    prompts: codexPrompts,\n    query: codexQuery,\n    setQuery: setCodexQuery,\n    filtered: codexFiltered,\n    save: saveCodexPrompt,\n  } = useCodexPrompts();\n  const [personas] = usePersonas();\n  const [notes, setNotes] = useNotes();\n\n  const [activeTab, setActiveTab] = usePersistentState<PromptsTabKey>(\n    TAB_STORAGE_KEY,\n    \"chat\",\n  );\n\n  const chatSaveRef = React.useRef<(() => void) | null>(null);\n  const codexSaveRef = React.useRef<(() => void) | null>(null);\n  const [chatCanSave, setChatCanSave] = React.useState(false);\n  const [codexCanSave, setCodexCanSave] = React.useState(false);\n\n  const tabItems = React.useMemo<TabListItem<PromptsTabKey>[]>(() => {\n    return BASE_TAB_ITEMS.map<TabListItem<PromptsTabKey>>((item) => {\n      if (item.key === \"chat\") {\n        return {\n          ...item,\n          badge: chatPrompts.length > 0 ? chatPrompts.length : undefined,\n        };\n      }\n      if (item.key === \"codex\") {\n        return {\n          ...item,\n          badge: codexPrompts.length > 0 ? codexPrompts.length : undefined,\n        };\n      }\n      const hasNotes = notes.trim().length > 0;\n      return {\n        ...item,\n        badge: hasNotes ? 1 : undefined,\n      };\n    });\n  }, [chatPrompts.length, codexPrompts.length, notes]);\n\n  const activeQuery = React.useMemo(() => {\n    if (activeTab === \"chat\") return chatQuery;\n    if (activeTab === \"codex\") return codexQuery;\n    return \"\";\n  }, [activeTab, chatQuery, codexQuery]);\n\n  const handleQueryChange = React.useCallback(\n    (value: string) => {\n      if (activeTab === \"chat\") {\n        setChatQuery(value);\n        return;\n      }\n      if (activeTab === \"codex\") {\n        setCodexQuery(value);\n      }\n    },\n    [activeTab, setChatQuery, setCodexQuery],\n  );\n\n  const handleSave = React.useCallback(() => {\n    if (activeTab === \"chat\") {\n      chatSaveRef.current?.();\n      return;\n    }\n    if (activeTab === \"codex\") {\n      codexSaveRef.current?.();\n    }\n  }, [activeTab]);\n\n  const saveDisabled = React.useMemo(() => {\n    if (activeTab === \"chat\") {\n      return !chatCanSave;\n    }\n    if (activeTab === \"codex\") {\n      return !codexCanSave;\n    }\n    return true;\n  }, [activeTab, chatCanSave, codexCanSave]);\n\n  const activeCount = React.useMemo(() => {\n    if (activeTab === \"chat\") return chatPrompts.length;\n    if (activeTab === \"codex\") return codexPrompts.length;\n    return notes.trim().length > 0 ? 1 : 0;\n  }, [activeTab, chatPrompts.length, codexPrompts.length, notes]);\n\n  return (\n    <>\n      <PageShell as=\"header\" className=\"py-[var(--space-6)]\">\n        <PromptsHeader\n          id=\"prompts-header\"\n          count={activeCount}\n          query={activeQuery}\n          onQueryChange={handleQueryChange}\n          onSave={handleSave}\n          disabled={saveDisabled}\n        />\n      </PageShell>\n\n      <PageShell\n        as=\"section\"\n        className=\"space-y-[var(--space-6)] py-[var(--space-6)]\"\n        aria-labelledby=\"prompts-header\"\n      >\n        <Tabs value={activeTab} onValueChange={setActiveTab} idBase=\"prompts-tabs\">\n          <TabList\n            items={tabItems}\n            ariaLabel=\"Prompt workspaces\"\n            variant=\"neo\"\n            showBaseline\n          />\n\n          <TabPanel value=\"chat\" className=\"pb-[var(--space-8)]\">\n            <React.Suspense fallback={<TabFallback>Loading ChatGPT workspace…</TabFallback>}>\n              <ChatTabPanel\n                prompts={chatFiltered}\n                query={chatQuery}\n                personas={personas}\n                savePrompt={saveChatPrompt}\n                saveRef={chatSaveRef}\n                onCanSaveChange={setChatCanSave}\n              />\n            </React.Suspense>\n          </TabPanel>\n\n          <TabPanel value=\"codex\" className=\"pb-[var(--space-8)]\">\n            <React.Suspense fallback={<TabFallback>Loading Codex checklist…</TabFallback>}>\n              <CodexTabPanel\n                prompts={codexFiltered}\n                query={codexQuery}\n                savePrompt={saveCodexPrompt}\n                saveRef={codexSaveRef}\n                onCanSaveChange={setCodexCanSave}\n              />\n            </React.Suspense>\n          </TabPanel>\n\n          <TabPanel value=\"notes\" className=\"pb-[var(--space-8)]\">\n            <React.Suspense fallback={<TabFallback>Preparing notes…</TabFallback>}>\n              <NotesTab value={notes} onChange={setNotes} />\n            </React.Suspense>\n          </TabPanel>\n        </Tabs>\n      </PageShell>\n    </>\n  );\n}\n\ninterface ChatTabPanelProps {\n  prompts: PromptWithTitle[];\n  query: string;\n  personas: Persona[];\n  savePrompt: (title: string, text: string) => boolean;\n  saveRef: React.MutableRefObject<(() => void) | null>;\n  onCanSaveChange: (canSave: boolean) => void;\n}\n\nfunction ChatTabPanel({\n  prompts,\n  query,\n  personas,\n  savePrompt,\n  saveRef,\n  onCanSaveChange,\n}: ChatTabPanelProps) {\n  const [title, setTitle] = React.useState(\"\");\n  const [text, setText] = React.useState(\"\");\n\n  const canSave = React.useMemo(() => {\n    return Boolean(title.trim() || text.trim());\n  }, [text, title]);\n\n  React.useEffect(() => {\n    onCanSaveChange(canSave);\n  }, [canSave, onCanSaveChange]);\n\n  React.useEffect(() => {\n    return () => {\n      onCanSaveChange(false);\n    };\n  }, [onCanSaveChange]);\n\n  const handleSave = React.useCallback(() => {\n    if (savePrompt(title, text)) {\n      setTitle(\"\");\n      setText(\"\");\n    }\n  }, [savePrompt, text, title]);\n\n  React.useEffect(() => {\n    saveRef.current = handleSave;\n    return () => {\n      if (saveRef.current === handleSave) {\n        saveRef.current = null;\n      }\n    };\n  }, [handleSave, saveRef]);\n\n  return (\n    <ChatPromptsTab\n      title={title}\n      text={text}\n      onTitleChange={setTitle}\n      onTextChange={setText}\n      prompts={prompts}\n      query={query}\n      personas={personas}\n    />\n  );\n}\n\ninterface CodexTabPanelProps {\n  prompts: PromptWithTitle[];\n  query: string;\n  savePrompt: (title: string, text: string) => boolean;\n  saveRef: React.MutableRefObject<(() => void) | null>;\n  onCanSaveChange: (canSave: boolean) => void;\n}\n\nfunction CodexTabPanel({\n  prompts,\n  query,\n  savePrompt,\n  saveRef,\n  onCanSaveChange,\n}: CodexTabPanelProps) {\n  const [title, setTitle] = React.useState(\"\");\n  const [text, setText] = React.useState(\"\");\n\n  const canSave = React.useMemo(() => {\n    return Boolean(title.trim() || text.trim());\n  }, [text, title]);\n\n  React.useEffect(() => {\n    onCanSaveChange(canSave);\n  }, [canSave, onCanSaveChange]);\n\n  React.useEffect(() => {\n    return () => {\n      onCanSaveChange(false);\n    };\n  }, [onCanSaveChange]);\n\n  const handleSave = React.useCallback(() => {\n    if (savePrompt(title, text)) {\n      setTitle(\"\");\n      setText(\"\");\n    }\n  }, [savePrompt, text, title]);\n\n  React.useEffect(() => {\n    saveRef.current = handleSave;\n    return () => {\n      if (saveRef.current === handleSave) {\n        saveRef.current = null;\n      }\n    };\n  }, [handleSave, saveRef]);\n\n  return (\n    <CodexPromptsTab\n      title={title}\n      text={text}\n      onTitleChange={setTitle}\n      onTextChange={setText}\n      prompts={prompts}\n      query={query}\n    />\n  );\n}\n\nfunction TabFallback({ children }: { children: React.ReactNode }) {\n  return (\n    <div\n      role=\"status\"\n      aria-live=\"polite\"\n      className=\"rounded-[var(--radius-md)] border border-dashed border-border bg-muted/30 p-[var(--space-4)] text-center text-ui text-muted-foreground\"\n    >\n      {children}\n    </div>\n  );\n}\n\n","export type Prompt = {\n  id: string;\n  title?: string;\n  text: string;\n  createdAt: number;\n};\n\nexport type PromptWithTitle = Prompt & { title: string };\n\nexport type Persona = {\n  id: string;\n  name: string;\n  prompt: string;\n  description?: string;\n  createdAt: number;\n};\n\nexport function derivePromptTitle(prompt: Prompt): string {\n  if (prompt.title && prompt.title.trim()) return prompt.title.trim();\n  const firstLine = (prompt.text || \"\")\n    .split(/\\r?\\n/)\n    .find((line) => line.trim())?.trim();\n  return firstLine || \"Untitled\";\n}\n","\"use client\";\n\nimport * as React from \"react\";\nimport type Fuse from \"fuse.js\";\nimport { usePersistentState, uid } from \"@/lib/db\";\nimport {\n  derivePromptTitle,\n  type Prompt,\n  type PromptWithTitle,\n} from \"./types\";\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n\nfunction decodePrompt(value: unknown): Prompt | null {\n  if (!isRecord(value)) return null;\n  const id = value[\"id\"];\n  const text = value[\"text\"];\n  const createdAt = value[\"createdAt\"];\n  if (typeof id !== \"string\") return null;\n  if (typeof text !== \"string\") return null;\n  if (typeof createdAt !== \"number\" || !Number.isFinite(createdAt)) return null;\n  const prompt: Prompt = { id, text, createdAt };\n  const title = value[\"title\"];\n  if (typeof title === \"string\") {\n    prompt.title = title;\n  }\n  return prompt;\n}\n\nexport function decodePrompts(value: unknown): Prompt[] | null {\n  if (!Array.isArray(value)) return null;\n  const result: Prompt[] = [];\n  for (const entry of value) {\n    const prompt = decodePrompt(entry);\n    if (prompt) result.push(prompt);\n  }\n  return result;\n}\n\nconst EMPTY_PROMPT_LIST: Prompt[] = [];\n\nexport function usePromptLibrary(storageKey: string) {\n  const [prompts, setPrompts] = usePersistentState<Prompt[]>(storageKey, EMPTY_PROMPT_LIST, {\n    decode: decodePrompts,\n  });\n  const [query, setQuery] = React.useState(\"\");\n\n  const withTitles = React.useMemo(\n    () => prompts.map((prompt) => ({ ...prompt, title: derivePromptTitle(prompt) })),\n    [prompts],\n  );\n\n  const fuseModulePromiseRef = React.useRef<Promise<typeof import(\"fuse.js\")> | null>(null);\n  const fuseRef = React.useRef<Fuse<PromptWithTitle> | null>(null);\n\n  const [filtered, setFiltered] = React.useState<PromptWithTitle[]>(withTitles);\n\n  const ensureFuse = React.useCallback(async () => {\n    if (!fuseModulePromiseRef.current) {\n      fuseModulePromiseRef.current = import(\"fuse.js\");\n    }\n    const { default: FuseModule } = await fuseModulePromiseRef.current;\n    if (fuseRef.current) {\n      fuseRef.current.setCollection(withTitles);\n      return fuseRef.current;\n    }\n    const instance = new FuseModule<PromptWithTitle>(withTitles, {\n      keys: [\"title\", \"text\"],\n      threshold: 0.3,\n    });\n    fuseRef.current = instance;\n    return instance;\n  }, [withTitles]);\n\n  React.useEffect(() => {\n    const trimmed = query.trim();\n    if (!trimmed) {\n      setFiltered(withTitles);\n      return;\n    }\n\n    let cancelled = false;\n\n    if (!fuseRef.current) {\n      const lowered = trimmed.toLowerCase();\n      setFiltered(\n        withTitles.filter((prompt) => {\n          return (\n            prompt.title.toLowerCase().includes(lowered) ||\n            prompt.text.toLowerCase().includes(lowered)\n          );\n        }),\n      );\n    }\n\n    const runSearch = async () => {\n      const fuse = await ensureFuse();\n      if (cancelled) return;\n      const results = fuse.search(trimmed);\n      if (cancelled) return;\n      setFiltered(results.map((res) => res.item));\n    };\n\n    void runSearch();\n\n    return () => {\n      cancelled = true;\n    };\n  }, [ensureFuse, query, withTitles]);\n\n  const save = React.useCallback(\n    (titleDraft: string, textDraft: string) => {\n      const text = textDraft.trim();\n      const title =\n        titleDraft.trim() || text.split(/\\r?\\n/)[0]?.trim() || \"Untitled\";\n      if (!text && !titleDraft.trim()) return false;\n      const next: Prompt = {\n        id: uid(\"p\"),\n        title,\n        text,\n        createdAt: Date.now(),\n      };\n      setPrompts((prev) => [next, ...prev]);\n      return true;\n    },\n    [setPrompts],\n  );\n\n  return { prompts, query, setQuery, filtered, save } as const;\n}\n","\"use client\";\n\nimport { usePersistentState } from \"@/lib/db\";\n\nexport const PROMPT_NOTES_STORAGE_KEY = \"prompts.notes.v1\" as const;\n\nexport function useNotes() {\n  return usePersistentState<string>(PROMPT_NOTES_STORAGE_KEY, \"\");\n}\n","\"use client\";\n\nimport { usePersistentState } from \"@/lib/db\";\nimport type { Persona } from \"./types\";\n\nexport const PROMPT_PERSONAS_STORAGE_KEY = \"prompts.personas.v1\" as const;\nconst EMPTY_PERSONA_LIST: Persona[] = [];\n\nexport function usePersonas() {\n  return usePersistentState<Persona[]>(\n    PROMPT_PERSONAS_STORAGE_KEY,\n    EMPTY_PERSONA_LIST,\n  );\n}\n","\"use client\";\n\nimport * as React from \"react\";\nimport { Button, PageHeader } from \"@/components/ui\";\nimport { Badge } from \"@/components/ui/primitives/Badge\";\n\nconst chips = [\"hover\", \"focus\", \"active\", \"disabled\", \"loading\"];\n\ninterface PromptsHeaderProps {\n  id?: string;\n  count: number;\n  query: string;\n  onQueryChange: (value: string) => void;\n  onSave: () => void;\n  disabled: boolean;\n}\n\nexport function PromptsHeader({\n  id = \"prompts-header\",\n  count,\n  query,\n  onQueryChange,\n  onSave,\n  disabled,\n}: PromptsHeaderProps) {\n  const handleChip = React.useCallback(\n    (chip: string) => {\n      const nextQuery = query === chip ? \"\" : chip;\n      onQueryChange(nextQuery);\n    },\n    [onQueryChange, query],\n  );\n\n  const searchId = `${id}-search`;\n\n  return (\n    <PageHeader\n      containerClassName=\"relative isolate\"\n      header={{\n        id,\n        heading: \"Prompts\",\n        sticky: false,\n        right: (\n          <span className=\"pill\" aria-live=\"polite\">\n            {count} saved\n          </span>\n        ),\n      }}\n      hero={{\n        sticky: false,\n        tone: \"supportive\",\n        topClassName: \"top-[var(--header-stack)]\",\n        heading: (\n          <span className=\"sr-only\" id={`${id}-hero`}>\n            Prompt workspace controls\n          </span>\n        ),\n        children: (\n          <div className=\"hidden sm:flex flex-wrap items-center gap-[var(--space-2)]\">\n            {chips.map((chip) => {\n              const isSelected = query === chip;\n\n              return (\n                <Badge\n                  key={chip}\n                  interactive\n                  selected={isSelected}\n                  aria-pressed={isSelected}\n                  onClick={() => handleChip(chip)}\n                >\n                  {chip}\n                </Badge>\n              );\n            })}\n          </div>\n        ),\n        search: {\n          id: searchId,\n          value: query,\n          onValueChange: onQueryChange,\n          debounceMs: 300,\n          placeholder: \"Search prompts…\",\n          \"aria-label\": \"Search prompts\",\n          variant: \"neo\",\n          round: true,\n        },\n        actions: (\n          <Button type=\"button\" variant=\"default\" onClick={onSave} disabled={disabled}>\n            Save\n          </Button>\n        ),\n      }}\n    />\n  );\n}\n\n","\"use client\";\n\nimport { usePromptLibrary } from \"./usePromptLibrary\";\n\nexport const CHAT_PROMPTS_STORAGE_KEY = \"prompts.chat.v1\" as const;\n\nexport function useChatPrompts() {\n  return usePromptLibrary(CHAT_PROMPTS_STORAGE_KEY);\n}\n","\"use client\";\n\nimport { usePromptLibrary } from \"./usePromptLibrary\";\n\nexport const CODEX_PROMPTS_STORAGE_KEY = \"prompts.codex.v1\" as const;\n\nexport function useCodexPrompts() {\n  return usePromptLibrary(CODEX_PROMPTS_STORAGE_KEY);\n}\n","import(/* webpackMode: \"eager\", webpackExports: [\"PromptsPage\"] */ \"/home/runner/work/Planner/Planner/src/components/prompts/PromptsPage.tsx\");\n"],"names":["ChatPromptsTab","React","default","CodexPromptsTab","NotesTab","BASE_TAB_ITEMS","key","label","PromptsPage","prompts","chatPrompts","query","chatQuery","setQuery","setChatQuery","filtered","chatFiltered","save","saveChatPrompt","useChatPrompts","codexPrompts","codexQuery","setCodexQuery","codexFiltered","saveCodexPrompt","useCodexPrompts","personas","usePersonas","notes","setNotes","useNotes","activeTab","setActiveTab","usePersistentState","TAB_STORAGE_KEY","chatSaveRef","codexSaveRef","chatCanSave","setChatCanSave","codexCanSave","setCodexCanSave","tabItems","map","item","badge","length","undefined","hasNotes","trim","activeQuery","handleQueryChange","value","handleSave","current","saveDisabled","activeCount","PageShell","as","className","PromptsHeader","id","count","onQueryChange","onSave","disabled","aria-labelledby","Tabs","onValueChange","idBase","TabList","items","ariaLabel","variant","showBaseline","TabPanel","fallback","TabFallback","ChatTabPanel","savePrompt","saveRef","onCanSaveChange","CodexTabPanel","onChange","title","setTitle","text","setText","canSave","Boolean","onTitleChange","onTextChange","children","div","role","aria-live","decodePrompts","Array","isArray","result","entry","prompt","decodePrompt","isRecord","createdAt","Number","isFinite","push","EMPTY_PROMPT_LIST","usePromptLibrary","storageKey","setPrompts","decode","withTitles","derivePromptTitle","firstLine","split","find","line","fuseModulePromiseRef","fuseRef","setFiltered","ensureFuse","FuseModule","setCollection","instance","keys","threshold","trimmed","cancelled","lowered","toLowerCase","filter","includes","runSearch","fuse","results","search","res","titleDraft","textDraft","next","uid","Date","now","prev","PROMPT_NOTES_STORAGE_KEY","EMPTY_PERSONA_LIST","chips","handleChip","chip","nextQuery","searchId","PageHeader","containerClassName","header","heading","sticky","right","span","hero","tone","topClassName","isSelected","Badge","interactive","selected","aria-pressed","onClick","debounceMs","placeholder","round","actions","Button","type"],"sourceRoot":"","ignoreList":[]}