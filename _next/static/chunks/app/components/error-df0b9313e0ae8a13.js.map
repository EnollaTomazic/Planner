{"version":3,"file":"static/chunks/app/components/error-df0b9313e0ae8a13.js","mappings":"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","sources":["webpack://_N_E/./src/lib/clipboard.ts","webpack://_N_E/./src/lib/observability/sentry.ts","webpack://_N_E/./src/lib/observability/boundary-error-reporter.ts","webpack://_N_E/./src/app/error.tsx","webpack://_N_E/./src/app/components/error.tsx","webpack://_N_E/./app/components/error.tsx","webpack://_N_E/?e22c"],"sourcesContent":["// src/lib/clipboard.ts\n// Shared clipboard helper with textarea fallback.\n\"use client\";\n\nimport { createLogger } from \"./logging\";\n\nconst clipboardLog = createLogger(\"clipboard\");\n\nexport async function copyText(text: string): Promise<void> {\n  if (typeof navigator === \"undefined\" || typeof document === \"undefined\") {\n    return;\n  }\n\n  const clipboard = navigator.clipboard;\n  let lastError: unknown = null;\n\n  if (clipboard?.writeText) {\n    try {\n      await clipboard.writeText(text);\n      return;\n    } catch (error) {\n      lastError = error;\n      // Continue to other fallbacks.\n    }\n  }\n\n  if (clipboard?.write && typeof ClipboardItem !== \"undefined\") {\n    try {\n      const item = new ClipboardItem({ \"text/plain\": new Blob([text], { type: \"text/plain\" }) });\n      await clipboard.write([item]);\n      return;\n    } catch (error) {\n      lastError = error;\n      // Continue to the textarea fallback.\n    }\n  }\n\n  if (!document.body) {\n    clipboardLog.warn(\n      \"Unable to copy text because document.body is not available.\",\n      lastError,\n    );\n    return;\n  }\n\n  const ta = document.createElement(\"textarea\");\n  ta.value = text;\n  ta.classList.add(\"clipboard-copy-buffer\");\n  document.body.appendChild(ta);\n  ta.select();\n\n  let copied = false;\n  try {\n    if (typeof document.execCommand === \"function\") {\n      copied = document.execCommand(\"copy\");\n      if (copied) {\n        return;\n      }\n    }\n  } catch (error) {\n    lastError = error;\n  } finally {\n    document.getSelection()?.removeAllRanges();\n    ta.remove();\n  }\n\n  if (!copied) {\n    clipboardLog.warn(\n      \"Failed to copy text with the available clipboard strategies.\",\n      lastError,\n    );\n  }\n}\n\n","// src/lib/observability/sentry.ts\n// Lightweight Sentry wrapper with environment-based gating and structured logging.\n\nimport { observabilityLogger } from \"../logging\";\n\nconst sentryLog = observabilityLogger.child(\"sentry\");\nconst captureLog = sentryLog.child(\"capture\");\n\ntype SentryModule = typeof import(\"@sentry/nextjs\");\n\nconst rawDsn =\n  process.env.NEXT_PUBLIC_SENTRY_DSN?.trim() ||\n  process.env.SENTRY_DSN?.trim() ||\n  \"\";\nconst rawEnvironment =\n  process.env.NEXT_PUBLIC_SENTRY_ENVIRONMENT?.trim() ||\n  process.env.SENTRY_ENVIRONMENT?.trim() ||\n  process.env.NODE_ENV ||\n  \"development\";\nconst rawSampleRate =\n  process.env.NEXT_PUBLIC_SENTRY_TRACES_SAMPLE_RATE?.trim() ||\n  process.env.SENTRY_TRACES_SAMPLE_RATE?.trim() ||\n  \"\";\n\nconst isTestEnv = process.env.NODE_ENV === \"test\";\nconst sentryEnabled =\n  process.env.NODE_ENV === \"production\" && Boolean(rawDsn) && !isTestEnv;\n\nlet hasInitialized = false;\nlet initializationPromise: Promise<SentryModule | null> | null = null;\nlet cachedSentry: SentryModule | null = null;\n\nfunction parseSampleRate(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const parsed = Number.parseFloat(value);\n  if (Number.isNaN(parsed)) {\n    sentryLog.warn(\"Invalid Sentry sample rate provided\", { value });\n    return undefined;\n  }\n  return Math.min(Math.max(parsed, 0), 1);\n}\n\nconst tracesSampleRate = parseSampleRate(rawSampleRate) ?? (process.env.NODE_ENV === \"production\" ? 0.1 : 1);\n\nconst loadSentry: () => Promise<SentryModule | null> =\n  process.env.NODE_ENV === \"production\"\n    ? async () => {\n        if (!sentryEnabled) {\n          return null;\n        }\n\n        if (cachedSentry) {\n          return cachedSentry;\n        }\n\n        if (!initializationPromise) {\n          initializationPromise = import(\"@sentry/nextjs\")\n            .then((sentry) => {\n              cachedSentry = sentry;\n              if (!hasInitialized) {\n                try {\n                  sentry.init({\n                    dsn: rawDsn,\n                    environment: rawEnvironment,\n                    enabled: sentryEnabled,\n                    tracesSampleRate,\n                    replaysSessionSampleRate: 0,\n                    replaysOnErrorSampleRate: 0,\n                    profilesSampleRate: 0,\n                  });\n                  hasInitialized = true;\n                } catch (error) {\n                  sentryLog.error(\"Failed to initialize Sentry\", error);\n                  return null;\n                }\n              }\n              return cachedSentry;\n            })\n            .catch((error: unknown) => {\n              sentryLog.error(\"Failed to load Sentry runtime\", error);\n              cachedSentry = null;\n              return null;\n            })\n            .finally(() => {\n              initializationPromise = null;\n            });\n        }\n\n        return initializationPromise;\n      }\n    : async () => null;\n\nexport type ObservabilityCaptureContext = Parameters<SentryModule[\"captureException\"]>[1];\n\nexport function isObservabilityEnabled(): boolean {\n  return sentryEnabled;\n}\n\nexport async function initializeObservability(): Promise<void> {\n  if (!sentryEnabled) {\n    return;\n  }\n\n  await loadSentry();\n}\n\nexport async function captureException(\n  error: unknown,\n  context?: ObservabilityCaptureContext,\n): Promise<void> {\n  if (!sentryEnabled) {\n    return;\n  }\n\n  const sentry = await loadSentry();\n  if (!sentry) {\n    sentryLog.warn(\"captureException skipped because Sentry is unavailable\", error);\n    return;\n  }\n\n  try {\n    sentry.captureException(error, context);\n  } catch (captureError) {\n    captureLog.error(\"Failed to capture exception with Sentry\", captureError, error);\n  }\n}\n","// src/lib/observability/boundary-error-reporter.ts\n// Centralized helper for logging and capturing error boundary exceptions.\n\nimport { observabilityLogger } from \"@/lib/logging\";\nimport { captureException } from \"./sentry\";\n\nconst boundaryLog = observabilityLogger.child(\"error-boundary\");\n\ntype BoundaryTags = Record<string, string>;\n\ntype BoundaryExtra = Record<string, unknown>;\n\ntype BoundaryInfo = Record<string, unknown>;\n\nexport type BoundaryErrorReport = {\n  boundary: string;\n  error: unknown;\n  info?: BoundaryInfo;\n  tags?: BoundaryTags;\n  extra?: BoundaryExtra;\n};\n\nexport function reportBoundaryError({\n  boundary,\n  error,\n  info,\n  tags,\n  extra,\n}: BoundaryErrorReport): void {\n  boundaryLog.error(\"Error boundary captured an exception\", {\n    boundary,\n    error,\n    info,\n    tags,\n    extra,\n  });\n\n  const boundaryTags: BoundaryTags = {\n    boundary,\n    ...(tags ?? {}),\n  };\n\n  const boundaryExtra: BoundaryExtra = {\n    boundary,\n    ...(extra ?? {}),\n  };\n\n  if (info) {\n    boundaryExtra.info = info;\n  }\n\n  void captureException(error, {\n    tags: boundaryTags,\n    extra: boundaryExtra,\n  });\n}\n","\"use client\";\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport Link from \"next/link\";\nimport { Button, PageShell } from \"@/components/ui\";\nimport { createLogger } from \"@/lib/logging\";\nimport { reportBoundaryError } from \"@/lib/observability/boundary-error-reporter\";\nimport { copyText } from \"@/lib/clipboard\";\nimport { withBasePath } from \"@/lib/utils\";\n\nexport type RouteError = Error & { digest?: string };\n\nexport type RouteErrorBoundaryProps = {\n  error: RouteError;\n  reset: () => void;\n};\n\ntype RouteErrorContentProps = RouteErrorBoundaryProps & {\n  title: string;\n  description: string;\n  retryLabel?: string;\n  homeLabel?: string;\n  homeHref?: string;\n};\n\nconst routeErrorLog = createLogger(\"route:error-boundary\");\n\nexport function RouteErrorContent({\n  error,\n  reset,\n  title,\n  description,\n  retryLabel = \"Try again\",\n  homeLabel = \"Go to dashboard\",\n  homeHref = \"/\",\n}: RouteErrorContentProps) {\n  const errorId = useMemo(() => {\n    if (error?.digest) return error.digest;\n    if (typeof crypto !== \"undefined\" && typeof crypto.randomUUID === \"function\") {\n      return crypto.randomUUID();\n    }\n    return `fallback-${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 8)}`;\n  }, [error]);\n\n  const stackPayload = useMemo(() => {\n    const stack = typeof error?.stack === \"string\" ? error.stack : \"\";\n    const message = error?.message ?? \"Unknown error\";\n    const normalizedStack = stack.includes(message) ? stack : [message, stack].filter(Boolean).join(\"\\n\");\n    const digestLine = error?.digest ? `Digest: ${error.digest}` : \"\";\n    return [`Planner error ${errorId}`, digestLine, normalizedStack].filter(Boolean).join(\"\\n\\n\");\n  }, [error, errorId]);\n\n  const [copyFeedback, setCopyFeedback] = useState<string>(\"\");\n\n  useEffect(() => {\n    reportBoundaryError({\n      boundary: \"route\",\n      error,\n      extra: {\n        digest: error?.digest,\n        errorId,\n      },\n      tags: {\n        errorId,\n      },\n    });\n  }, [error, errorId]);\n\n  useEffect(() => {\n    if (!copyFeedback) return undefined;\n    const timer = window.setTimeout(() => setCopyFeedback(\"\"), 4000);\n    return () => window.clearTimeout(timer);\n  }, [copyFeedback]);\n\n  const handleCopyStack = useCallback(async () => {\n    try {\n      await copyText(stackPayload);\n      setCopyFeedback(\"Stack copied to clipboard.\");\n    } catch (copyError) {\n      routeErrorLog.warn(\"Failed to copy stack trace from route error boundary\", copyError);\n      setCopyFeedback(\"We couldn't copy the stack. Select and copy it manually if needed.\");\n    }\n  }, [stackPayload]);\n\n  return (\n    <PageShell\n      as=\"section\"\n      role=\"alert\"\n      aria-live=\"assertive\"\n      className=\"py-[var(--space-8)]\"\n    >\n      <div className=\"flex max-w-prose flex-col gap-[var(--space-4)]\">\n        <div className=\"space-y-[var(--space-2)]\">\n          <h1 className=\"text-title-lg font-semibold text-foreground\">\n            {title}\n          </h1>\n          <p className=\"text-body text-muted-foreground\">{description}</p>\n        </div>\n        <div className=\"flex flex-wrap gap-[var(--space-3)]\">\n          <Button variant=\"default\" onClick={reset}>\n            {retryLabel}\n          </Button>\n          <Button asChild variant=\"quiet\">\n            <Link href={withBasePath(homeHref, { skipForNextLink: true })}>\n              {homeLabel}\n            </Link>\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"quiet\"\n            size=\"sm\"\n            onClick={handleCopyStack}\n          >\n            Copy stack\n          </Button>\n        </div>\n        <div className=\"space-y-[var(--space-1)]\">\n          <p className=\"text-label text-muted-foreground\">\n            Reference ID: <span className=\"font-mono text-foreground\">{errorId}</span>\n          </p>\n          <div className=\"sr-only\" aria-live=\"polite\">\n            {copyFeedback}\n          </div>\n          {copyFeedback ? (\n            <p className=\"text-label text-muted-foreground\">{copyFeedback}</p>\n          ) : null}\n        </div>\n      </div>\n    </PageShell>\n  );\n}\n\nexport default function RouteErrorBoundary(props: RouteErrorBoundaryProps) {\n  return (\n    <RouteErrorContent\n      {...props}\n      title=\"Something went wrong\"\n      description=\"This section hit an error, but the rest of Planner is still running. Try again or return home.\"\n    />\n  );\n}\n","export { default } from \"../error\";\n","\"use client\";\n\nexport { default } from \"../../src/app/components/error\";\n","import(/* webpackMode: \"eager\" */ \"/home/runner/work/Planner/Planner/app/components/error.tsx\");\n"],"names":["clipboardLog","createLogger","copyText","text","navigator","document","clipboard","lastError","writeText","error","write","ClipboardItem","item","Blob","type","body","warn","ta","createElement","value","classList","add","appendChild","select","copied","execCommand","getSelection","removeAllRanges","remove","process","parseSampleRate","sentryLog","observabilityLogger","child","captureLog","rawDsn","env","NEXT_PUBLIC_SENTRY_DSN","trim","SENTRY_DSN","rawEnvironment","NEXT_PUBLIC_SENTRY_ENVIRONMENT","SENTRY_ENVIRONMENT","rawSampleRate","NEXT_PUBLIC_SENTRY_TRACES_SAMPLE_RATE","SENTRY_TRACES_SAMPLE_RATE","sentryEnabled","Boolean","hasInitialized","initializationPromise","cachedSentry","tracesSampleRate","undefined","parsed","Number","parseFloat","isNaN","Math","min","max","loadSentry","then","sentry","init","dsn","environment","enabled","replaysSessionSampleRate","replaysOnErrorSampleRate","profilesSampleRate","catch","finally","captureException","context","captureError","boundaryLog","reportBoundaryError","boundary","info","tags","extra","boundaryTags","boundaryExtra","routeErrorLog","RouteErrorContent","reset","title","description","retryLabel","homeLabel","homeHref","errorId","useMemo","digest","crypto","randomUUID","Date","now","toString","random","slice","stackPayload","stack","message","normalizedStack","includes","filter","join","digestLine","copyFeedback","setCopyFeedback","useState","useEffect","timer","window","setTimeout","clearTimeout","handleCopyStack","useCallback","copyError","PageShell","as","role","aria-live","className","div","h1","p","Button","variant","onClick","asChild","Link","href","withBasePath","skipForNextLink","size","span","RouteErrorBoundary","props"],"sourceRoot":"","ignoreList":[]}